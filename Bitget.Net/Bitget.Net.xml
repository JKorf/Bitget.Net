<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bitget.Net</name>
    </assembly>
    <members>
        <member name="T:Bitget.Net.BitgetEnvironment">
            <summary>
            Bitget environment
            </summary>
        </member>
        <member name="P:Bitget.Net.BitgetEnvironment.RestBaseAddress">
            <summary>
            Base rest API address
            </summary>
        </member>
        <member name="P:Bitget.Net.BitgetEnvironment.SocketBaseAddress">
            <summary>
            Base socket API address
            </summary>
        </member>
        <member name="P:Bitget.Net.BitgetEnvironment.Live">
            <summary>
            Live environment
            </summary>
        </member>
        <member name="M:Bitget.Net.BitgetEnvironment.CreateCustom(System.String,System.String,System.String)">
            <summary>
            Create a custom environment
            </summary>
            <param name="name"></param>
            <param name="baseRestAddress"></param>
            <param name="socketRestAddress"></param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.BitgetExchange">
            <summary>
            Bitget exchange information and configuration
            </summary>
        </member>
        <member name="P:Bitget.Net.BitgetExchange.ExchangeName">
            <summary>
            Exchange name
            </summary>
        </member>
        <member name="P:Bitget.Net.BitgetExchange.Url">
            <summary>
            Url to the main website
            </summary>
        </member>
        <member name="P:Bitget.Net.BitgetExchange.ApiDocsUrl">
            <summary>
            Urls to the API documentation
            </summary>
        </member>
        <member name="P:Bitget.Net.BitgetExchange.RateLimiter">
            <summary>
            Rate limiter configuration for the Bitget API
            </summary>
        </member>
        <member name="T:Bitget.Net.BitgetRateLimiters">
            <summary>
            Rate limiter configuration for the GateIo API
            </summary>
        </member>
        <member name="E:Bitget.Net.BitgetRateLimiters.RateLimitTriggered">
            <summary>
            Event for when a rate limit is triggered
            </summary>
        </member>
        <member name="T:Bitget.Net.Clients.BitgetRestClient">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.BitgetRestClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.BitgetRestClient.SpotApiV2">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.BitgetRestClient.FuturesApi">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.BitgetRestClient.FuturesApiV2">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.BitgetRestClient.#ctor(System.Action{Bitget.Net.Objects.Options.BitgetRestOptions})">
            <summary> 
            Create a new instance of BitgetRestClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitget.Net.Clients.BitgetRestClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory,System.Action{Bitget.Net.Objects.Options.BitgetRestOptions})">
            <summary>
            Create a new instance of BitgetRestClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="loggerFactory">The logger factory</param>
            <param name="httpClient">Http client for this client</param>
        </member>
        <member name="M:Bitget.Net.Clients.BitgetRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.BitgetRestClient.SetDefaultOptions(System.Action{Bitget.Net.Objects.Options.BitgetRestOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsFunc">Option configuration delegate</param>
        </member>
        <member name="T:Bitget.Net.Clients.BitgetSocketClient">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.BitgetSocketClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.BitgetSocketClient.SpotApiV2">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.BitgetSocketClient.FuturesApi">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.BitgetSocketClient.FuturesApiV2">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.BitgetSocketClient.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of the BitgetSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
        </member>
        <member name="M:Bitget.Net.Clients.BitgetSocketClient.#ctor(System.Action{Bitget.Net.Objects.Options.BitgetSocketOptions})">
            <summary>
            Create a new instance of the BitgetSocketClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitget.Net.Clients.BitgetSocketClient.#ctor(System.Action{Bitget.Net.Objects.Options.BitgetSocketOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of the BitgetSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitget.Net.Clients.BitgetSocketClient.SetDefaultOptions(System.Action{Bitget.Net.Objects.Options.BitgetSocketOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitget.Net.Clients.BitgetSocketClient.SetApiCredentials(Bitget.Net.Objects.BitgetApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApi">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApi.Account">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApi.CreateAccessor">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApi.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApi.FormatSymbol(System.String,System.String,System.Nullable{CryptoExchange.Net.Objects.ApiType})">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiAccount">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiAccount.GetBalanceAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiAccount.GetBalancesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiAccount.SetLeverageAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Decimal,System.Nullable{Bitget.Net.Enums.V2.PositionSide},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiAccount.AdjustMarginAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Decimal,System.Nullable{Bitget.Net.Enums.V2.PositionSide},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiAccount.SetMarginModeAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Nullable{Bitget.Net.Enums.V2.MarginMode},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiAccount.SetPositionModeAsync(Bitget.Net.Enums.BitgetProductTypeV2,Bitget.Net.Enums.V2.PositionMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiAccount.GetLedgerAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetContractsAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetVipFeeRatesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetOrderBookAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetTickerAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetTickersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetRecentTradesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetTradesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetKlinesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.Nullable{Bitget.Net.Enums.V2.KlineType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetHistoricalKlinesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetHistoricalIndexPriceKlinesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetHistoricalMarkPriceKlinesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetOpenInterestAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetNextFundingTimeAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetPricesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetHistoricalFundingRateAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetFundingRateAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiExchangeData.GetPositionTiersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.GetPositionAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.GetPositionsAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.GetPositionHistoryAsync(System.Nullable{Bitget.Net.Enums.BitgetProductTypeV2},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.PlaceOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,Bitget.Net.Enums.V2.OrderSide,Bitget.Net.Enums.V2.OrderType,Bitget.Net.Enums.V2.MarginMode,System.Decimal,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TimeInForce},System.Nullable{Bitget.Net.Enums.V2.TradeSide},System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.PlaceMultipleOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,Bitget.Net.Enums.V2.MarginMode,System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetFuturesPlaceOrderRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.EditOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.CancelOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.CancelMultipleOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Collections.Generic.IEnumerable{Bitget.Net.Enums.V2.BitgetCancelOrderRequest},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.CancelAllOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.GetOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.GetOpenOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.Nullable{Bitget.Net.Enums.V2.OrderStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.GetClosedOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.GetUserTradesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.GetHistoricalUserTradesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.ClosePositionsAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Nullable{Bitget.Net.Enums.V2.PositionSide},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.PlaceTpSlOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,Bitget.Net.Enums.V2.PlanType,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Nullable{Bitget.Net.Enums.V2.PositionSide},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.PlaceTriggerOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,Bitget.Net.Enums.V2.TriggerPlanType,Bitget.Net.Enums.V2.MarginMode,Bitget.Net.Enums.V2.OrderSide,Bitget.Net.Enums.V2.OrderType,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Nullable{Bitget.Net.Enums.V2.TradeSide},System.Nullable{System.Decimal},System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.GetTriggerSubOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,Bitget.Net.Enums.V2.TriggerPlanType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.EditTriggerOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.EditTpSlOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.GetOpenTriggerOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,Bitget.Net.Enums.BitgetFuturesPlanType,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.GetClosedTriggerOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,Bitget.Net.Enums.BitgetFuturesPlanType,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetRestClientFuturesApiTrading.CancelTriggerOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Nullable{Bitget.Net.Enums.BitgetFuturesPlanType},System.String,System.String,System.Collections.Generic.IEnumerable{Bitget.Net.Enums.V2.BitgetCancelOrderRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.CreateAccessor">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.FormatSymbol(System.String,System.String,System.Nullable{CryptoExchange.Net.Objects.ApiType})">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.SubscribeToTradeUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.SubscribeToTradeUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,Bitget.Net.Enums.BitgetStreamKlineIntervalV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetFuturesKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Collections.Generic.IEnumerable{System.String},Bitget.Net.Enums.BitgetStreamKlineIntervalV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetFuturesKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.SubscribeToBalanceUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetFuturesBalanceUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.SubscribeToPositionUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetPositionUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.SubscribeToUserTradeUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.SubscribeToOrderUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.SubscribeToTriggerOrderUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.SubscribeToPositionHistoryUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApiV2.BitgetSocketClientFuturesApi.GetAuthenticationRequest(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.Account">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.Trading">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.FormatSymbol(System.String,System.String,System.Nullable{CryptoExchange.Net.Objects.ApiType})">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetAccountAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetAccountsAsync(Bitget.Net.Enums.BitgetProductType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetMaxOpenPositionsAsync(System.String,System.String,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.SetLeverageAsync(System.String,System.String,System.Decimal,System.Nullable{Bitget.Net.Enums.BitgetPositionSide},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.SetMarginAsync(System.String,System.String,System.Decimal,System.Nullable{Bitget.Net.Enums.BitgetPositionSide},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.SetMarginModeAsync(System.String,System.String,Bitget.Net.Enums.BitgetMarginMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.SetAutoMarginAsync(System.String,System.String,Bitget.Net.Enums.BitgetPositionSide,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.SetHoldModeAsync(Bitget.Net.Enums.BitgetProductType,Bitget.Net.Enums.BitgetHoldMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetPositionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetPositionsAsync(Bitget.Net.Enums.BitgetProductType,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetHistoryPositionAsync(System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetProductType},System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetBillsAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetBusinessBillsAsync(Bitget.Net.Enums.BitgetProductType,System.DateTime,System.DateTime,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.FormatSymbol(System.String,System.String,System.Nullable{CryptoExchange.Net.Objects.ApiType})">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.String,Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.SubscribeToBalanceUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.SubscribeToPositionUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetPositionUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.SubscribeToOrderUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.SubscribeToPlanOrderUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.GetAuthenticationRequest(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetSocketClientFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetSymbolsAsync(Bitget.Net.Enums.BitgetProductType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetMergedOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetTickersAsync(Bitget.Net.Enums.BitgetProductType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetFeeRatesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetTradeHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetHistoricalKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetHistoricalIndexKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetHistoricalMarkKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetIndexPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetNextFundingTimeAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetFundingRateHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetFundingRateAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetOpenInterestAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetMarkPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetLeverageInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetPositionsTiersAsync(Bitget.Net.Enums.BitgetProductType,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetPositionRiskLimitAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.PlaceOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetFuturesOrderSide,Bitget.Net.Enums.BitgetOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.BitgetTimeInForce},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.CancelOrderAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.EditOrderAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetOpenOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetOpenOrdersByProductAsync(Bitget.Net.Enums.BitgetProductType,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetOrderHistoryAsync(System.String,System.DateTime,System.DateTime,System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetOrderHistoryAsync(Bitget.Net.Enums.BitgetProductType,System.DateTime,System.DateTime,System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetOrderAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetUserTradesAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetUserTradesAsync(Bitget.Net.Enums.BitgetProductType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.PlacePlanOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetFuturesOrderSide,Bitget.Net.Enums.BitgetOrderType,Bitget.Net.Enums.BitgetTriggerType,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.EditPlanOrderAsync(System.String,System.String,System.Decimal,Bitget.Net.Enums.BitgetTriggerType,Bitget.Net.Enums.BitgetOrderType,System.String,System.String,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.EditPlanOrderTpSlAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.PlaceStopOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.Decimal,Bitget.Net.Enums.BitgetPositionSide,System.Nullable{Bitget.Net.Enums.BitgetTriggerType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.PlaceTrailingStopOrderAsync(System.String,System.String,System.Decimal,Bitget.Net.Enums.BitgetFuturesOrderSide,System.Decimal,System.Decimal,System.Nullable{Bitget.Net.Enums.BitgetTriggerType},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.PlacePositionTpSlAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.Decimal,Bitget.Net.Enums.BitgetTriggerType,Bitget.Net.Enums.BitgetPositionSide,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.EditStopOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.Decimal,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.CancelPlanOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetPlanOrderHistoryAsync(System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetProductType},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetPlanOrdersAsync(System.String,System.Nullable{Bitget.Net.Enums.BitgetProductType},System.Nullable{Bitget.Net.Enums.BitgetPlanFilter},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.Account">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CommonSpotClient">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="E:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.OnOrderPlaced">
            <inheritdoc />
        </member>
        <member name="E:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.OnOrderCanceled">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.FormatSymbol(System.String,System.String,System.Nullable{CryptoExchange.Net.Objects.ApiType})">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#ISpotClient#PlaceOrderAsync(System.String,CryptoExchange.Net.CommonObjects.CommonOrderSide,CryptoExchange.Net.CommonObjects.CommonOrderType,System.Decimal,System.Nullable{System.Decimal},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetSymbolName(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetKlinesAsync(System.String,System.TimeSpan,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetOrderBookAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetRecentTradesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetBalancesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetOrderTradesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetOpenOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetClosedOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#CancelOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetBalancesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetBalancesLiteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetApiKeyInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetBillsAsync(System.String,System.Nullable{Bitget.Net.Enums.BitgetGroupType},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetTransferHistoryAsync(System.String,Bitget.Net.Enums.BitgetAccountType,System.DateTime,System.DateTime,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.TransferAsync(System.String,System.Decimal,Bitget.Net.Enums.BitgetTransferAccountType,Bitget.Net.Enums.BitgetTransferAccountType,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.SubTransferAsync(System.String,System.Decimal,Bitget.Net.Enums.BitgetTransferAccountType,Bitget.Net.Enums.BitgetTransferAccountType,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetDepositAddressAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.WithdrawAsync(System.String,System.String,System.String,System.Decimal,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.InnerWithdrawAsync(System.String,System.String,System.Decimal,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetWithdrawalHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetDepositHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetUserFeeRatioAsync(System.String,Bitget.Net.Enums.BitgetBusinessType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetNotificationsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetTradesAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetKlinesAsync(System.String,Bitget.Net.Enums.BitgetKlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetHistoricalKlinesAsync(System.String,Bitget.Net.Enums.BitgetKlineInterval,System.DateTime,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetMergedOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetFeeRatesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.PlaceOrderAsync(System.String,Bitget.Net.Enums.BitgetOrderSide,Bitget.Net.Enums.BitgetOrderType,System.Decimal,Bitget.Net.Enums.BitgetTimeInForce,System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.CancelOrderAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.CancelOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.GetOrderAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.GetOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.GetOrderHistoryAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.PlacePlanOrderAsync(System.String,Bitget.Net.Enums.BitgetOrderSide,Bitget.Net.Enums.BitgetOrderType,System.Decimal,System.Decimal,Bitget.Net.Enums.BitgetTriggerType,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.BitgetTimeInForce},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.EditPlanOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetOrderType,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.CancelPlanOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.GetPlanOrdersAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.GetPlanOrderHistoryAsync(System.String,System.Int32,System.DateTime,System.DateTime,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.FormatSymbol(System.String,System.String,System.Nullable{CryptoExchange.Net.Objects.ApiType})">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetBalanceUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetOrderUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.GetAuthenticationRequest(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.Account">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CommonSpotClient">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="E:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.OnOrderPlaced">
            <inheritdoc />
        </member>
        <member name="E:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.OnOrderCanceled">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CreateAccessor">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.FormatSymbol(System.String,System.String,System.Nullable{CryptoExchange.Net.Objects.ApiType})">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#ISpotClient#PlaceOrderAsync(System.String,CryptoExchange.Net.CommonObjects.CommonOrderSide,CryptoExchange.Net.CommonObjects.CommonOrderType,System.Decimal,System.Nullable{System.Decimal},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetSymbolName(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetKlinesAsync(System.String,System.TimeSpan,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetOrderBookAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetRecentTradesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetBalancesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetOrderTradesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetOpenOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetClosedOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#CancelOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.GetFundingBalancesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.GetAssetsValuationAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.GetTradeFeeAsync(System.String,Bitget.Net.Enums.BitgetBusinessType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.GetAccountInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.GetSpotBalancesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.SetDepositAccountAsync(System.String,Bitget.Net.Enums.V2.AccountType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.GetLedgerAsync(System.String,System.Nullable{Bitget.Net.Enums.V2.GroupType},System.Nullable{Bitget.Net.Enums.V2.BusinessType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.TransferAsync(System.String,Bitget.Net.Enums.V2.TransferAccountType,Bitget.Net.Enums.V2.TransferAccountType,System.Decimal,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.GetTransferableAssetsAsync(Bitget.Net.Enums.V2.TransferAccountType,Bitget.Net.Enums.V2.TransferAccountType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.WithdrawAsync(System.String,Bitget.Net.Enums.V2.TransferType,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.GetTransferHistoryAsync(System.String,Bitget.Net.Enums.V2.TransferAccountType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.SetBgbDeductEnabledAsync(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.GetBgbDeductEnabledAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.GetDepositAddressAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.CancelWithdrawalAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.GetWithdrawalHistoryAsync(System.DateTime,System.DateTime,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiAccount.GetDepositHistoryAsync(System.DateTime,System.DateTime,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiExchangeData.GetAssetsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiExchangeData.GetSymbolsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiExchangeData.GetVipFeeRatesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiExchangeData.GetTickersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiExchangeData.GetKlinesAsync(System.String,Bitget.Net.Enums.V2.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiExchangeData.GetHistoricalKlinesAsync(System.String,Bitget.Net.Enums.V2.KlineInterval,System.DateTime,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiExchangeData.GetTradesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.PlaceOrderAsync(System.String,Bitget.Net.Enums.V2.OrderSide,Bitget.Net.Enums.V2.OrderType,System.Decimal,Bitget.Net.Enums.V2.TimeInForce,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TakeProfitStopLossType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.PlaceMultipleOrdersAsync(System.String,System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetPlaceOrderRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.CancelOrderAsync(System.String,System.String,System.String,System.Nullable{Bitget.Net.Enums.V2.TakeProfitStopLossType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.CancelMultipleOrdersAsync(System.String,System.Collections.Generic.IEnumerable{Bitget.Net.Enums.V2.BitgetCancelOrderRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.CancelOrdersBySymbolAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.GetOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.GetOpenOrdersAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{Bitget.Net.Enums.V2.TakeProfitStopLossType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.GetClosedOrdersAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{Bitget.Net.Enums.V2.TakeProfitStopLossType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.PlaceTriggerOrderAsync(System.String,Bitget.Net.Enums.V2.OrderSide,Bitget.Net.Enums.V2.OrderType,System.Decimal,System.Decimal,System.Nullable{Bitget.Net.Enums.V2.QuantityType},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TimeInForce},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.EditTriggerOrderAsync(System.Decimal,Bitget.Net.Enums.V2.OrderType,System.Decimal,System.Nullable{System.Decimal},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.CancelTriggerOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.CancelAllTriggerOrdersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.GetOpenTriggerOrdersAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.GetTriggerSubOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetRestClientSpotApiTrading.GetClosedTriggerOrdersAsync(System.String,System.DateTime,System.DateTime,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.CreateAccessor">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.FormatSymbol(System.String,System.String,System.Nullable{CryptoExchange.Net.Objects.ApiType})">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,Bitget.Net.Enums.BitgetStreamKlineIntervalV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bitget.Net.Enums.BitgetStreamKlineIntervalV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.SubscribeToOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetOrderUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.SubscribeToUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetUserTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.SubscribeToTriggerOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.SubscribeToBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetBalanceUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApiV2.BitgetSocketClientSpotApi.GetAuthenticationRequest(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Converters.IntConverter">
            <summary>
            Int converter
            </summary>
        </member>
        <member name="M:Bitget.Net.Converters.IntConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Converters.IntConverter.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.Int32},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Enums.BitgetAccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetAccountType.Exchange">
            <summary>
            Spot account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetAccountType.Contract">
            <summary>
            Contract account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetAccountType.UsdtMix">
            <summary>
            USDT futures account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetAccountType.UsdMix">
            <summary>
            USD futures account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetAccountType.UsdcMix">
            <summary>
            USDC futures account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetAccountType.MarginCross">
            <summary>
            Cross margin account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetAccountType.MarginIsolated">
            <summary>
            Isolated margin account
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetBusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetBusinessType.Mix">
            <summary>
            Mix
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetBusinessType.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetBusinessType.SpotMargin">
            <summary>
            Spot margin
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetExecutionType">
            <summary>
            Execution type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetExecutionType.Taker">
            <summary>
            Taker
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetExecutionType.Maker">
            <summary>
            Maker
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetFuturesKlineInterval">
            <summary>
            Kline interval
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneMinute">
            <summary>
            1 minute
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.ThreeMinutes">
            <summary>
            3 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.FiveMinutes">
            <summary>
            5 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.FifteenMinutes">
            <summary>
            15 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.ThirtyMinutes">
            <summary>
            30 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneHour">
            <summary>
            1 hour
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.FourHours">
            <summary>
            4 hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.SixHours">
            <summary>
            6 hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.TwelveHours">
            <summary>
            12 hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneDay">
            <summary>
            1 day
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.ThreeDays">
            <summary>
            3 days
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneWeek">
            <summary>
            1 week
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneMonth">
            <summary>
            1 month
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.SixHourUtc">
            <summary>
            6 hour UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.TwelfHourUtc">
            <summary>
            12 hour UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneDayUtc">
            <summary>
            1 day UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.ThreeDayUTC">
            <summary>
            3 day UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneWeekUtc">
            <summary>
            1 week UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneMonthUtc">
            <summary>
            1 month UTC 0
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetFuturesOrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesOrderSide.OpenLong">
            <summary>
            Open long position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesOrderSide.OpenShort">
            <summary>
            Open short position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesOrderSide.CloseLong">
            <summary>
            Close long position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesOrderSide.CloseShort">
            <summary>
            Close short position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesOrderSide.BuySingle">
            <summary>
            Buy under SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesOrderSide.SellSingle">
            <summary>
            Sell under SingleHold mode
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetFuturesPlanType">
            <summary>
            Plan type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesPlanType.ProfitPlan">
            <summary>
            Profit order
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesPlanType.LossPlan">
            <summary>
            Loss order
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesPlanType.NormalPlan">
            <summary>
            Plan order
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesPlanType.PositionProfitPlan">
            <summary>
            Position profit
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesPlanType.PositionLossPlan">
            <summary>
            Position loss
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesPlanType.MovingPlan">
            <summary>
            Trailing TP/SL
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesPlanType.TrackPlan">
            <summary>
            Trailing Stop
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetFuturesSymbolStatus">
            <summary>
            Symbol status
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesSymbolStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesSymbolStatus.Maintainance">
            <summary>
            Maintenance
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesSymbolStatus.Offline">
            <summary>
            Offline
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesSymbolStatus.Restricted">
            <summary>
            Restricted API
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesSymbolStatus.NoNewOrders">
            <summary>
            No new openings
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetFuturesSymbolType">
            <summary>
            Symbol type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesSymbolType.Perpetual">
            <summary>
            Perpetual contract
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesSymbolType.Delivery">
            <summary>
            Delivery contract
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetGroupType">
            <summary>
            Group type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetGroupType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetGroupType.Withdrawal">
            <summary>
            Withdrawal
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetGroupType.Trade">
            <summary>
            Trade
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetGroupType.Transfer">
            <summary>
            Transfer
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetGroupType.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetHoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetHoldMode.SingleHold">
            <summary>
            Single hold
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetHoldMode.DoubleHold">
            <summary>
            Double hold
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetInstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetInstrumentType.UsdtPerpetual">
            <summary>
            USDT Perpetual Contract
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetInstrumentType.CoinPerpetual">
            <summary>
            Coin Margin Perpetual Contract
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetInstrumentType.UsdcPerpetual">
            <summary>
            USDC margin Perpetual Contract
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetInstrumentType.UsdtPerpetualSimulated">
            <summary>
            USDT simulation perpetual contract
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetInstrumentType.CoinPerpetualSimulated">
            <summary>
            Universal margin simulation perpetual contract
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetInstrumentType.UsdcPerpetualSimulated">
            <summary>
            USDC simulation perpetual contract
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetKlineInterval">
            <summary>
            Kline interval
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneMinute">
            <summary>
            1 minute
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.FiveMinutes">
            <summary>
            5 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.FifteenMinutes">
            <summary>
            15 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.ThirtyMinutes">
            <summary>
            30 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneHour">
            <summary>
            1 hour
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.FourHours">
            <summary>
            4 hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.SixHours">
            <summary>
            6 hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.TwelveHours">
            <summary>
            12 hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneDay">
            <summary>
            1 day
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.ThreeDays">
            <summary>
            3 days
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneWeek">
            <summary>
            1 week
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneMonth">
            <summary>
            1 month
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.SixHourUtc">
            <summary>
            6 hour UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.TwelfHourUtc">
            <summary>
            12 hour UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneDayUtc">
            <summary>
            1 day UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.ThreeDayUTC">
            <summary>
            3 day UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneWeekUtc">
            <summary>
            1 week UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneMonthUtc">
            <summary>
            1 month UTC 0
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetKlineType">
            <summary>
            Kline type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineType.Market">
            <summary>
            Market price
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineType.Mark">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineType.Index">
            <summary>
            Index price
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetMarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetMarginMode.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetMarginMode.CrossMargin">
            <summary>
            Cross margin
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetOrderForce">
            <summary>
            Order force
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderForce.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderForce.Twap">
            <summary>
            Twap
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderForce.Adl">
            <summary>
            Adl
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderForce.FullLiquidation">
            <summary>
            Full liquidation
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderForce.PartialLiquidation">
            <summary>
            Partial liquidation
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetOrderPlacementSource">
            <summary>
            Placement source
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderPlacementSource.Web">
            <summary>
            Web
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderPlacementSource.App">
            <summary>
            App
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderPlacementSource.Api">
            <summary>
            Api
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderPlacementSource.Sys">
            <summary>
            Sys
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderPlacementSource.Android">
            <summary>
            Android
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderPlacementSource.Ios">
            <summary>
            Ios
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetOrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderSide.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderSide.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetOrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderStatus.Initial">
            <summary>
            Initial
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderStatus.New">
            <summary>
            New
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderStatus.PartiallyFilled">
            <summary>
            Partially filled
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderStatus.Filled">
            <summary>
            Filled
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderStatus.Cancelled">
            <summary>
            Cancelled
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetOrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderType.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderType.Market">
            <summary>
            Market
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetPlanFilter">
            <summary>
            Plan filter
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanFilter.TrailingStop">
            <summary>
            Trailing stop plan
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanFilter.Other">
            <summary>
            profit order, loss order, position profit, position loss, Trailing TP/SL
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetPlanOrderStatus">
            <summary>
            Plan order status
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderStatus.NotTriggered">
            <summary>
            Not triggered
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderStatus.Triggered">
            <summary>
            Triggered
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderStatus.FailTrigger">
            <summary>
            Failed trigger
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderStatus.Cancel">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetPlanType">
            <summary>
            Plan type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanType.Profit">
            <summary>
            Profit plan
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanType.Loss">
            <summary>
            Loss plan
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanType.Moving">
            <summary>
            Moving plan
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanType.PositionProfit">
            <summary>
            Position profit
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanType.PositionLoss">
            <summary>
            Position loss
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanType.TrailingStop">
            <summary>
            Trailing stop
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanType.NormalPlan">
            <summary>
            Plan order
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetPlanOrderEvent">
            <summary>
            Plan type 
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderEvent.PlanOrderEvent">
            <summary>
            Whenever a plan order is created/cancelled/modified/triggered
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderEvent.TakeProfitEvent">
            <summary>
            When a take profit order(partial position) is created/cancelled/modified/triggered
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderEvent.StopLossEvent">
            <summary>
            When a stop loss order(partial position) is created/cancelled/modified/triggered
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderEvent.PositionTakeProfitEvent">
            <summary>
            When a position take profit order(whole position) is created/cancelled/modified/triggered
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderEvent.PositionStopLossEvent">
            <summary>
            When a position stop loss order(whole position) is created/cancelled/modified/triggered
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetPositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPositionSide.Long">
            <summary>
            Long position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPositionSide.Short">
            <summary>
            Short position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPositionSide.Net">
            <summary>
            Net
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetProductType">
            <summary>
            Product type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductType.UsdtPerpetual">
            <summary>
            Usdt perpetual contracts
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductType.UniversalMarginPerpetual">
            <summary>
            Universal margin perpetual contracts
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductType.UsdcPerpetual">
            <summary>
            Usdc perpetual contracts
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductType.SimUsdtPerpetual">
            <summary>
            Simulation usdt perpetual contracts
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductType.SimUniversalMarginPerpetual">
            <summary>
            Simulation universal margin perpetual contracts
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductType.SimUsdcPerpetual">
            <summary>
            Simulation usdc perpetual contracts
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetProductTypeV2">
            <summary>
            Product type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductTypeV2.UsdtFutures">
            <summary>
            USDT futures
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductTypeV2.CoinFutures">
            <summary>
            Mixed futures
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductTypeV2.UsdcFutures">
            <summary>
            USDC Futures
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductTypeV2.SimUsdtFutures">
            <summary>
            DEMO USDT futures
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductTypeV2.SimCoinFutures">
            <summary>
            DEMO Mixed futures
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductTypeV2.SimUsdcFutures">
            <summary>
            DEMO USDC futures
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetStreamKlineInterval">
            <summary>
            Kline interval
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.OneMinute">
            <summary>
            One minute
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.FiveMinutes">
            <summary>
            Five minute
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.FifteenMinutes">
            <summary>
            Fifteen minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.ThirtyMinutes">
            <summary>
            Thirty minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.OneHour">
            <summary>
            One hour
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.FourHours">
            <summary>
            Four hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.TwelveHours">
            <summary>
            Twelve hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.OneDay">
            <summary>
            One day
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.OneWeek">
            <summary>
            One week
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetStreamKlineIntervalV2">
            <summary>
            Kline interval
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.OneMinute">
            <summary>
            One minute
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.FiveMinutes">
            <summary>
            Five minute
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.FifteenMinutes">
            <summary>
            Fifteen minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.ThirtyMinutes">
            <summary>
            Thirty minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.OneHour">
            <summary>
            One hour
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.FourHours">
            <summary>
            Four hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.SixHours">
            <summary>
            Six hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.TwelveHours">
            <summary>
            Twelve hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.OneDay">
            <summary>
            One day
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.ThreeDays">
            <summary>
            Three days
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.OneWeek">
            <summary>
            One week
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.OneMonth">
            <summary>
            One month
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.SixHoursUtc">
            <summary>
            Six hours UTC
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.TwelveHoursUtc">
            <summary>
            Twelve hours UTC
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.OneDayUtc">
            <summary>
            One day UTC
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.ThreeDayUtc">
            <summary>
            Three day UTC
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.OneWeekUtc">
            <summary>
            One week UTC
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineIntervalV2.OneMonthUtc">
            <summary>
            One month UTC
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetSymbolStatus">
            <summary>
            Status of a symbol
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetSymbolStatus.Offline">
            <summary>
            Offline
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetSymbolStatus.Gray">
            <summary>
            Gray
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetSymbolStatus.Online">
            <summary>
            Online
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetTimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTimeInForce.GoodTillCanceled">
            <summary>
            Good till canceled
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTimeInForce.PostOnly">
            <summary>
            Post only
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTimeInForce.FillOrKill">
            <summary>
            Fill or kill
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTimeInForce.ImmediatOrCancel">
            <summary>
            Immediate or cancel
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetTradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.OpenLong">
            <summary>
            Open long
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.OpenShot">
            <summary>
            Open short
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.CloseLong">
            <summary>
            Close long
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.CloseShort">
            <summary>
            Close short
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.ReduceCloseLong">
            <summary>
            Force reduce long position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.ReduceCloseShort">
            <summary>
            Force reduce short position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.OffSetCloseLong">
            <summary>
            Force netting: close long position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.OffsetCloseShort">
            <summary>
            Force netting: close short position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.BurstCloseLong">
            <summary>
            Force liquidation: close long position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.BurstCloseShort">
            <summary>
            Force liquidation: close short position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.DeliveryCloseLong">
            <summary>
            Future delivery close long
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.DeliveryCloseShort">
            <summary>
            Future delivery close short
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.BuySingle">
            <summary>
            Buy in SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.SellSingle">
            <summary>
            Sell in SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.ReduceBuySingle">
            <summary>
            Force reduce buy in SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.ReduceSellSingle">
            <summary>
            Force reduce sell in SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.BurstBuySingle">
            <summary>
            Force liquidation: buy in SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.BurstSellSingle">
            <summary>
            Force liquidation: sell in SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.DeliveryBuySingle">
            <summary>
            Future delivery buy in SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.DeliverySellSingle">
            <summary>
            Future delivery sell in SingleHold mode
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetTransferAccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferAccountType.Spot">
            <summary>
            Spot account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferAccountType.UsdtMix">
            <summary>
            USDT futures account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferAccountType.UsdMix">
            <summary>
            USD futures account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferAccountType.UsdcMix">
            <summary>
            USDC futures account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferAccountType.MarginCross">
            <summary>
            Cross margin account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferAccountType.MarginIsolated">
            <summary>
            Isolated margin account
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetTransferStatus">
            <summary>
            Transfer status
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferStatus.Successful">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferStatus.Processing">
            <summary>
            In progress
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetTriggerType">
            <summary>
            Trigger type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTriggerType.FillPrice">
            <summary>
            Fill price
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTriggerType.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BizType">
            <summary>
            Biz type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.Withdrawal">
            <summary>
            Withdrawal
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.DeductionFeeHandling">
            <summary>
            Deduction of handling fee
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.TransferIn">
            <summary>
            Transfer in
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.TransferOut">
            <summary>
            Transfer out
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.RebateRewards">
            <summary>
            Rebate rewards
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.AirdropRewards">
            <summary>
            Airdrop rewards
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.UsdtContractRewards">
            <summary>
            Usdt contract rewards
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.MixContractRewards">
            <summary>
            Mix contract rewards
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.SystemLock">
            <summary>
            System lock
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.UserLock">
            <summary>
            User lock
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.SymbolStatus">
            <summary>
            Symbol status
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.SymbolStatus.Maintenance">
            <summary>
            Maintenance/offline
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.SymbolStatus.Gray">
            <summary>
            Gray scale
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.SymbolStatus.Halt">
            <summary>
            Halted
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.SymbolStatus.Online">
            <summary>
            Online
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.AccountType.Spot">
            <summary>
            Spot account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.AccountType.Funding">
            <summary>
            Funding account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.AccountType.CoinFutures">
            <summary>
            Coin futures
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.AccountType.UsdtFutures">
            <summary>
            USDT futures
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.AccountType.UsdcFutures">
            <summary>
            USDC futures
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.BusinessType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.BusinessType.Withdraw">
            <summary>
            Withdraw
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.BusinessType.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.BusinessType.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.BusinessType.FeeDeduction">
            <summary>
            Deduction of spot trading transaction fee
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.BusinessType.TransferIn">
            <summary>
            Transfer-in
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.BusinessType.TransferOut">
            <summary>
            Transfer-out
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.BusinessType.RebateRewards">
            <summary>
            Rebate
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.BusinessType.AirdropRewards">
            <summary>
            Airdrop rewards
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.BusinessType.UsdtContractRewards">
            <summary>
            USDT futures promotion rewards
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.BusinessType.MixContractRewards">
            <summary>
            Mix contract promotion rewards
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.BusinessType.SystemLock">
            <summary>
            System lock-up
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.BusinessType.UserLock">
            <summary>
            User lock-up
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.BusinessType.InnerAddressWithdrawIn">
            <summary>
            Inner address withdraw in
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.ContractType.Perpetual">
            <summary>
            Perpetual futures
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.ContractType.Delivery">
            <summary>
            Delivery futures
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.DeliveryPeriod">
            <summary>
            Delivery period
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.DeliveryPeriod.ThisQuarter">
            <summary>
            This quarter
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.DeliveryPeriod.NextQuarter">
            <summary>
            Next quarter
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.DeliveryStatus">
            <summary>
            Delivery status
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.DeliveryStatus.Normal">
            <summary>
            Trading normally
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.DeliveryStatus.DeliveryBefore">
            <summary>
            10 minutes before delivery, opening positions are prohibited
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.DeliveryStatus.DeliveryPeriod">
            <summary>
            Delivery, opening, closing, and canceling orders are prohibited
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.GroupType">
            <summary>
            Group type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.GroupType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.GroupType.Withdraw">
            <summary>
            Withdraw
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.GroupType.Transaction">
            <summary>
            Transaction
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.GroupType.Transfer">
            <summary>
            Transfer
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.GroupType.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.KlineInterval">
            <summary>
            Kline interval
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.OneMinute">
            <summary>
            1 minute
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.FiveMinutes">
            <summary>
            5 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.FifteenMinutes">
            <summary>
            15 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.ThirtyMinutes">
            <summary>
            30 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.OneHour">
            <summary>
            1 hour
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.FourHours">
            <summary>
            4 hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.SixHours">
            <summary>
            6 hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.TwelveHours">
            <summary>
            12 hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.OneDay">
            <summary>
            1 day
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.ThreeDays">
            <summary>
            3 days
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.OneWeek">
            <summary>
            1 week
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.OneMonth">
            <summary>
            1 month
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.SixHourUtc">
            <summary>
            6 hour UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.TwelfHourUtc">
            <summary>
            12 hour UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.OneDayUtc">
            <summary>
            1 day UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.ThreeDayUTC">
            <summary>
            3 day UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.OneWeekUtc">
            <summary>
            1 week UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineInterval.OneMonthUtc">
            <summary>
            1 month UTC 0
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.KlineType">
            <summary>
            Kline type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineType.Market">
            <summary>
            Market price
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineType.Mark">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.KlineType.Index">
            <summary>
            Index price
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.MarginMode.CrossMargin">
            <summary>
            Cross margin
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.MarginMode.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.OrderSide.Buy">
            <summary>
            Buy order
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.OrderSide.Sell">
            <summary>
            Sell order
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.OrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.OrderStatus.Initial">
            <summary>
            Initial
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.OrderStatus.Live">
            <summary>
            Pending match
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.OrderStatus.New">
            <summary>
            Unfilled, waiting for match
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.OrderStatus.PartiallyFilled">
            <summary>
            Partially filled
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.OrderStatus.Filled">
            <summary>
            Filled
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.OrderStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.OrderType.Limit">
            <summary>
            Limit order
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.OrderType.Market">
            <summary>
            Market order
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.PlanType">
            <summary>
            Plan type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.PlanType.TriggerOrder">
            <summary>
            Trigger order
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.PlanType.TakeProfit">
            <summary>
            Take profit
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.PlanType.StopLoss">
            <summary>
            Stop loss
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.PlanType.TailingStop">
            <summary>
            Trailing stop
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.PlanType.TailingTpSl">
            <summary>
            Trailing TP/SL
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.PlanType.PositionTakeProfit">
            <summary>
            Position take profit
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.PlanType.PositionStopLoss">
            <summary>
            Position stop loss
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.PositionMode.OneWay">
            <summary>
            One way mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.PositionMode.Hedge">
            <summary>
            Hedge mode
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.PositionSide.Long">
            <summary>
            Long position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.PositionSide.Short">
            <summary>
            Short position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.PositionSide.Oneway">
            <summary>
            One way position
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.QuantityType">
            <summary>
            Trigger plan type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.QuantityType.BaseAsset">
            <summary>
            Base asset quantity
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.QuantityType.QuoteAsset">
            <summary>
            Quote asset quantity
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.Role.Taker">
            <summary>
            Taker
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.Role.Maker">
            <summary>
            Maker
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.SubTriggerOrderStatus">
            <summary>
            Tirgger sub order status
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.SubTriggerOrderStatus.Success">
            <summary>
            Trigger success
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.SubTriggerOrderStatus.Fail">
            <summary>
            Trigger failed
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.SubTriggerOrderStatus.Cancelled">
            <summary>
            Cancelled
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.SubTriggerOrderStatus.InProgress">
            <summary>
            Placing order
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.SubTriggerOrderStatus.InProgressTracking">
            <summary>
            Tracking in progress
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.SymbolStatus">
            <summary>
            Symbol status
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.SymbolStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.SymbolStatus.Maintainance">
            <summary>
            In maintenance
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.SymbolStatus.Limited">
            <summary>
            Order placement restricted
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.SymbolStatus.RestrictedApi">
            <summary>
            API order placement restricted
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.TakeProfitStopLossType">
            <summary>
            Tpsl type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TakeProfitStopLossType.Normal">
            <summary>
            Normal order
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TakeProfitStopLossType.Tpsl">
            <summary>
            Take profit/Stop loss order
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TimeInForce.GoodTillCanceled">
            <summary>
            Good till canceled
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TimeInForce.PostOnly">
            <summary>
            Post only
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TimeInForce.FillOrKill">
            <summary>
            Fill or kill
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TimeInForce.ImmediateOrCancel">
            <summary>
            Immediate or cancel
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TradeSide.Open">
            <summary>
            Open
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TradeSide.Close">
            <summary>
            Close
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TradeSide.ReduceCloseLong">
            <summary>
            Reduce close long
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TradeSide.ReduceCloseShort">
            <summary>
            Reduce close short
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TradeSide.OffsetCloseLong">
            <summary>
            Offset close long
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TradeSide.OffsetCloseShort">
            <summary>
            Offset close short
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TradeSide.BurstCloseLong">
            <summary>
            Burst close long
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TradeSide.BurstCloseShort">
            <summary>
            Burst close short
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TradeSide.DeliveryCloseLong">
            <summary>
            Delivery close long
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TradeSide.DeliveryCloseShort">
            <summary>
            Delivery close short
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TradeSide.BuySingle">
            <summary>
            Buy single
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TradeSide.SellSingle">
            <summary>
            Sell single
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.TransferAccountType">
            <summary>
            Transfer account type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TransferAccountType.Spot">
            <summary>
            Spot account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TransferAccountType.Funding">
            <summary>
            P2P/funding account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TransferAccountType.CoinFutures">
            <summary>
            Coin-M futures account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TransferAccountType.UsdtFutures">
            <summary>
            USDT-M futures account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TransferAccountType.UsdcFutures">
            <summary>
            USDC-M futures account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TransferAccountType.CrossMargin">
            <summary>
            Cross margin account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TransferAccountType.IsolatedMargin">
            <summary>
            Isolated margin account
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.TransferStatus">
            <summary>
            Transfer status 
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TransferStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TransferStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TransferStatus.Processing">
            <summary>
            Processing
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.TransferType">
            <summary>
            Type of transfer
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TransferType.OnChain">
            <summary>
            Withdraw on chain
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TransferType.InternalTransfer">
            <summary>
            Withdraw to another Bitget user
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.TriggerOrderStatus">
            <summary>
            Trigger order status
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TriggerOrderStatus.Live">
            <summary>
            Not triggered yet
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TriggerOrderStatus.Executing">
            <summary>
            Order executing
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TriggerOrderStatus.Executed">
            <summary>
            Order executed
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.TriggerPlanType">
            <summary>
            Trigger plan type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TriggerPlanType.Normal">
            <summary>
            Normal trigger order
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TriggerPlanType.TrailingStop">
            <summary>
            Trailing stop
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.TriggerPriceType">
            <summary>
            Trigger order price type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TriggerPriceType.LastPrice">
            <summary>
            Last fill price
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.V2.TriggerPriceType.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.V2.BitgetCancelOrderRequest">
            <summary>
            Order cancel request
            </summary>
        </member>
        <member name="P:Bitget.Net.Enums.V2.BitgetCancelOrderRequest.OrderId">
            <summary>
            Order id. Either this or ClientOrderId should be provided
            </summary>
        </member>
        <member name="P:Bitget.Net.Enums.V2.BitgetCancelOrderRequest.ClientOrderId">
            <summary>
            Client order id. Either this or OrderId should be provided
            </summary>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApi">
            <summary>
            Futures API endpoints
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApi.Trading">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiAccount">
            <summary>
            Bitget account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiAccount.GetBalanceAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get balance
            <para><a href="https://www.bitget.com/api-doc/contract/account/Get-Single-Account" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="marginAsset">Margin asset, for example `USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiAccount.GetBalancesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Threading.CancellationToken)">
            <summary>
            Get balances
            <para><a href="https://www.bitget.com/api-doc/contract/account/Get-Account-List" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiAccount.SetLeverageAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Decimal,System.Nullable{Bitget.Net.Enums.V2.PositionSide},System.Threading.CancellationToken)">
            <summary>
            Set leverage
            <para><a href="https://www.bitget.com/api-doc/contract/account/Get-Account-List" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="marginAsset">Margin asset, for example `USDT`</param>
            <param name="leverage">New leverage</param>
            <param name="side">Position side</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiAccount.AdjustMarginAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Decimal,System.Nullable{Bitget.Net.Enums.V2.PositionSide},System.Threading.CancellationToken)">
            <summary>
            Adjust margin
            <para><a href="https://www.bitget.com/api-doc/contract/account/Change-Margin" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="marginAsset">Margin asset, for example `USDT`</param>
            <param name="quantity">Margin amount, positive means increase, and negative means decrease</param>
            <param name="side">Position side</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiAccount.SetMarginModeAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Nullable{Bitget.Net.Enums.V2.MarginMode},System.Threading.CancellationToken)">
            <summary>
            Set margin mode
            <para><a href="https://www.bitget.com/api-doc/contract/account/Change-Margin-Mode" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="marginAsset">Margin asset, for example `ETHT`</param>
            <param name="mode">Margin mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiAccount.SetPositionModeAsync(Bitget.Net.Enums.BitgetProductTypeV2,Bitget.Net.Enums.V2.PositionMode,System.Threading.CancellationToken)">
            <summary>
            Set position mode
            <para><a href="https://www.bitget.com/api-doc/contract/account/Change-Hold-Mode" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="mode">Position mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiAccount.GetLedgerAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get account ledger
            <para><a href="https://www.bitget.com/api-doc/contract/account/Get-Account-Bill" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="asset">Filter by asset, for example `USDT`</param>
            <param name="businessType">Filter by business type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData">
            <summary>
            Bitget exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get the server time
            <para><a href="https://www.bitget.com/api-doc/common/public/Get-Server-Time" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetContractsAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <summary>
            Get list of contracts
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-All-Symbols-Contracts" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="productType">Product type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetVipFeeRatesAsync(System.Threading.CancellationToken)">
            <summary>
            Get list of VIP levels and fee rates
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-VIP-Fee-Rate" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetOrderBookAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get futures order book
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-Merge-Depth" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="productType">Product type</param>
            <param name="mergeStep">Merge step</param>
            <param name="limit">The book depth, 1, 5, 15, 50, 100 or -1. -1 will request the max gear of the symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetTickerAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <summary>
            Get futures ticker
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-Ticker" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="productType">Product type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetTickersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Threading.CancellationToken)">
            <summary>
            Get all futures tickers
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-All-Symbol-Ticker" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetRecentTradesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get recent trades
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-Recent-Fills" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetTradesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get trades
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-Fills-History" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetKlinesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.Nullable{Bitget.Net.Enums.V2.KlineType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get kline/candlestick data
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-Candle-Data" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="klineType">Price type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetHistoricalKlinesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get historical market price kline/candlestick data
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-History-Candle-Data" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetHistoricalIndexPriceKlinesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get historical index price kline/candlestick data
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-History-Index-Candle-Data" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetHistoricalMarkPriceKlinesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get historical mark price kline/candlestick data
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-History-Mark-Candle-Data" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetOpenInterestAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <summary>
            Get open interest
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-Open-Interest" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetNextFundingTimeAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <summary>
            Get next funding time
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-Symbol-Next-Funding-Time" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetPricesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <summary>
            Get prices
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-Symbol-Price" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetHistoricalFundingRateAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get historical funding rate
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-History-Funding-Rate" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="pageSize">Page size</param>
            <param name="page">Page number</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetFundingRateAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <summary>
            Get current funding rate
            <para><a href="https://www.bitget.com/api-doc/contract/market/Get-Current-Funding-Rate" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiExchangeData.GetPositionTiersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <summary>
            Get position tiers
            <para><a href="https://www.bitget.com/api-doc/contract/position/Get-Query-Position-Lever" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading">
            <summary>
            Bitget trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.GetPositionAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a position
            <para><a href="https://www.bitget.com/api-doc/contract/position/get-single-position" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="marginAsset">Margin asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.GetPositionsAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all positions
            <para><a href="https://www.bitget.com/api-doc/contract/position/get-all-position" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="marginAsset">Margin asset, for example `USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.GetPositionHistoryAsync(System.Nullable{Bitget.Net.Enums.BitgetProductTypeV2},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get position history
            <para><a href="https://www.bitget.com/api-doc/contract/position/Get-History-Position" /></para>
            </summary>
            <param name="productType">Filter by product type</param>
            <param name="marginAsset">Filter by margin asset, for example `USDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.PlaceOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,Bitget.Net.Enums.V2.OrderSide,Bitget.Net.Enums.V2.OrderType,Bitget.Net.Enums.V2.MarginMode,System.Decimal,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TimeInForce},System.Nullable{Bitget.Net.Enums.V2.TradeSide},System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://www.bitget.com/api-doc/contract/trade/Place-Order" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="marginAsset">Margin asset, for example `USDT`</param>
            <param name="side">Order side</param>
            <param name="type">Order type</param>
            <param name="marginMode">Margin mode</param>
            <param name="quantity">Quantity</param>
            <param name="price">Limit price</param>
            <param name="timeInForce">Time in force</param>
            <param name="tradeSide">Trade side</param>
            <param name="clientOrderId">Client order id</param>
            <param name="reduceOnly">Reduce only order</param>
            <param name="takeProfitPrice">Take profit price</param>
            <param name="stopLossPrice">Stop loss price</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.PlaceMultipleOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,Bitget.Net.Enums.V2.MarginMode,System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetFuturesPlaceOrderRequest},System.Threading.CancellationToken)">
            <summary>
            Place multiple orders in a single call
            <para><a href="https://www.bitget.com/api-doc/contract/trade/Batch-Order" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="marginAsset">Margin asset, for example `USDT`</param>
            <param name="marginMode">Margin mode</param>
            <param name="orders">Orders</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.EditOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Edit an order
            <para><a href="https://www.bitget.com/api-doc/contract/trade/Modify-Order" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Order id. Either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id. Either this or orderId should be provided</param>
            <param name="newClientOrderId">New client order id</param>
            <param name="newPrice">New price</param>
            <param name="newQuantity">New quantity</param>
            <param name="newTakeProfit">New take profit price</param>
            <param name="newStopLossPrice">New stop loss price</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.CancelOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel an order
            <para><a href="https://www.bitget.com/api-doc/contract/trade/Cancel-Order" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Order id. Either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id. Either this or orderId should be provided</param>
            <param name="marginAsset">Margin asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.CancelMultipleOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Collections.Generic.IEnumerable{Bitget.Net.Enums.V2.BitgetCancelOrderRequest},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel multiple orders. Make sure to check the individual order responses for success
            <para><a href="https://www.bitget.com/api-doc/contract/trade/Batch-Cancel-Orders" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="orders">Orders to cancel</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="marginAsset">Margin asset, for example `USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.GetOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get order details
            <para><a href="https://www.bitget.com/api-doc/contract/trade/Get-Order-Details" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Order id. Either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id. Either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.GetOpenOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.Nullable{Bitget.Net.Enums.V2.OrderStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get open orders
            <para><a href="https://www.bitget.com/api-doc/contract/trade/Get-Orders-Pending" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="status">Filter by status</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.GetClosedOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get closed orders
            <para><a href="https://www.bitget.com/api-doc/contract/trade/Get-Orders-History" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.CancelAllOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel all orders matching the filters
            <para><a href="https://www.bitget.com/api-doc/contract/trade/Cancel-All-Orders" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="marginAsset">Margin asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.GetUserTradesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get user trades
            <para><a href="https://www.bitget.com/api-doc/contract/trade/Get-Order-Fills" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.GetHistoricalUserTradesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get historical user trades
            <para><a href="https://www.bitget.com/api-doc/contract/trade/Get-Fill-History" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.ClosePositionsAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Nullable{Bitget.Net.Enums.V2.PositionSide},System.Threading.CancellationToken)">
            <summary>
            Close positions by market order
            <para><a href="https://www.bitget.com/api-doc/contract/trade/Flash-Close-Position" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="side">Position side; only respected if in hedge mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.PlaceTpSlOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,Bitget.Net.Enums.V2.PlanType,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Nullable{Bitget.Net.Enums.V2.PositionSide},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a take profit / stop loss order
            <para><a href="https://www.bitget.com/api-doc/contract/trade/Flash-Close-Position" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="marginAsset">Margin asset, for example `USDT`</param>
            <param name="planType">Plan type</param>
            <param name="quantity">Quantity</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="orderPrice">Order limit price</param>
            <param name="triggerPriceType">Trigger price type</param>
            <param name="positionSide">Position side</param>
            <param name="trailingStopRate">Tailing stop rate</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.PlaceTriggerOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,Bitget.Net.Enums.V2.TriggerPlanType,Bitget.Net.Enums.V2.MarginMode,Bitget.Net.Enums.V2.OrderSide,Bitget.Net.Enums.V2.OrderType,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Nullable{Bitget.Net.Enums.V2.TradeSide},System.Nullable{System.Decimal},System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Threading.CancellationToken)">
            <summary>
            Place a new trigger order
            <para><a href="https://www.bitget.com/api-doc/contract/plan/Place-Plan-Order" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="marginAsset">Margin asset, for example `USDT`</param>
            <param name="planType">Plan type</param>
            <param name="marginMode">Margin mode</param>
            <param name="side">Order side</param>
            <param name="orderType">Order type</param>
            <param name="quantity">Order quantity</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="orderPrice">Order limit price</param>
            <param name="triggerPriceType">Trigger price type</param>
            <param name="tradeSide">Trade side</param>
            <param name="trailingStopRate">Trailing stop rate</param>
            <param name="clientOrderId">Client order id</param>
            <param name="reduceOnly">Reduce only</param>
            <param name="takeProfitTriggerPrice">Take profit trigger price</param>
            <param name="takeProfitOrderPrice">Take profit order price</param>
            <param name="takeProfitPriceType">Take profit price type</param>
            <param name="stopLossTriggerPrice">Stop loss trigger price</param>
            <param name="stopLossOrderPrice">Stop loss order price</param>
            <param name="stopLossPriceType">Stop loss price type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.GetTriggerSubOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,Bitget.Net.Enums.V2.TriggerPlanType,System.Threading.CancellationToken)">
            <summary>
            Get trigger order sub orders
            <para><a href="https://www.bitget.com/api-doc/contract/plan/Plan-Sub-Orders" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="triggerOrderId">Trigger order id</param>
            <param name="planType">Plan type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.EditTriggerOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Threading.CancellationToken)">
            <summary>
            Edit an existing trigger order
            <para><a href="https://www.bitget.com/api-doc/contract/plan/Modify-Plan-Order" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="newQuantity">New quantity</param>
            <param name="newPrice">New price</param>
            <param name="newTrailingStopRate">New trailing stop rate</param>
            <param name="newTriggerPrice">New trigger price</param>
            <param name="newTriggerType">New trigger price type</param>
            <param name="newTakeProfitTriggerPrice">New take profit trigger price</param>
            <param name="newTakeProfitOrderPrice">New take profit order price</param>
            <param name="newTakeProfitPriceType">New take profit price type</param>
            <param name="newStopLossTriggerPrice">New stop loss trigger price</param>
            <param name="newStopLossOrderPrice">New stop loss order price</param>
            <param name="newStopLossPriceType">New stop loss trigger price</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.EditTpSlOrderAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Edit an existing tp/sl order
            <para><a href="https://www.bitget.com/api-doc/contract/plan/Modify-Tpsl-Order" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="marginAsset">Margin asset, for example `USDT`</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="newTriggerPrice">New trigger price</param>
            <param name="newTriggerType">New trigger type</param>
            <param name="newOrderPrice">New order price</param>
            <param name="newQuantity">New quantity</param>
            <param name="newTrailingStopRate">New trailing stop rate</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.GetOpenTriggerOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,Bitget.Net.Enums.BitgetFuturesPlanType,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get open trigger orders
            <para><a href="https://www.bitget.com/api-doc/contract/plan/get-orders-plan-pending" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="planType">Plan type</param>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.GetClosedTriggerOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,Bitget.Net.Enums.BitgetFuturesPlanType,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get closed trigger orders
            <para><a href="https://www.bitget.com/api-doc/contract/plan/orders-plan-history" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="planType">Plan type</param>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetRestClientFuturesApiTrading.CancelTriggerOrdersAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Nullable{Bitget.Net.Enums.BitgetFuturesPlanType},System.String,System.String,System.Collections.Generic.IEnumerable{Bitget.Net.Enums.V2.BitgetCancelOrderRequest},System.Threading.CancellationToken)">
            <summary>
            Cancel trigger orders matching the parameters
            <para><a href="https://www.bitget.com/api-doc/contract/plan/Cancel-Plan-Order" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="planType">Plan type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="marginCoin">Margin coin</param>
            <param name="orderIds">Order ids</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetSocketClientFuturesApi">
            <summary>
            Bitget futures streams
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ticker updates for a symbol
            <para><a href="https://www.bitget.com/api-doc/contract/websocket/public/Tickers-Channel" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ticker updates for multiple symbols
            <para><a href="https://www.bitget.com/api-doc/contract/websocket/public/Tickers-Channel" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetSocketClientFuturesApi.SubscribeToTradeUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to trade updates for a symbol
            <para><a href="https://www.bitget.com/api-doc/contract/websocket/public/New-Trades-Channel" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetSocketClientFuturesApi.SubscribeToTradeUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to trade updates for multiple symbols
            <para><a href="https://www.bitget.com/api-doc/contract/websocket/public/New-Trades-Channel" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,Bitget.Net.Enums.BitgetStreamKlineIntervalV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetFuturesKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates for a symbol
            <para><a href="https://www.bitget.com/api-doc/contract/websocket/public/Candlesticks-Channel" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="interval">Interval</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Collections.Generic.IEnumerable{System.String},Bitget.Net.Enums.BitgetStreamKlineIntervalV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetFuturesKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates for symbols
            <para><a href="https://www.bitget.com/api-doc/contract/websocket/public/Candlesticks-Channel" /></para>
            </summary>
            <param name="productType"></param>
            <param name="symbols">Symbols, for example `ETHUSDT`</param>
            <param name="interval">Interval</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates for a symbol
            <para><a href="https://www.bitget.com/api-doc/contract/websocket/public/Order-Book-Channel" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbol">Symbols, for example `ETHUSDT`</param>
            <param name="limit">Order book depth. 1, 5 or 15 for full updates of these levels, or null for initial snapshot and only incremental updates after</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates for symbols
            <para><a href="https://www.bitget.com/api-doc/contract/websocket/public/Order-Book-Channel" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="symbols">Symbols, for example `ETHUSDT`</param>
            <param name="limit">Order book depth. 1, 5 or 15 for full updates of these levels, or null for initial snapshot and only incremental updates after</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetSocketClientFuturesApi.SubscribeToBalanceUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetFuturesBalanceUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to account balance updates
            <para><a href="https://www.bitget.com/api-doc/contract/websocket/private/Account-Channel" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetSocketClientFuturesApi.SubscribeToPositionUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetPositionUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to position updates
            <para><a href="https://www.bitget.com/api-doc/contract/websocket/private/Positions-Channel" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetSocketClientFuturesApi.SubscribeToUserTradeUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user trade updates
            <para><a href="https://www.bitget.com/api-doc/contract/websocket/private/Positions-Channel" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetSocketClientFuturesApi.SubscribeToOrderUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user order updates
            <para><a href="https://www.bitget.com/api-doc/contract/websocket/private/Positions-Channel" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetSocketClientFuturesApi.SubscribeToTriggerOrderUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to trigger order updates
            <para><a href="https://www.bitget.com/api-doc/contract/websocket/private/Plan-Order-Channel" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApiV2.IBitgetSocketClientFuturesApi.SubscribeToPositionHistoryUpdatesAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to position history/closing updates
            <para><a href="https://www.bitget.com/api-doc/contract/websocket/private/History-Positions-Channel" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApi">
            <summary>
            Futures API endpoints
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApi.Trading">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount">
            <summary>
            Bitget account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetAccountAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get account info
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-single-account" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="marginAsset">Margin asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetAccountsAsync(Bitget.Net.Enums.BitgetProductType,System.Threading.CancellationToken)">
            <summary>
            Get account list
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-account-list" /></para>
            </summary>
            <param name="type">The type of product</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetMaxOpenPositionsAsync(System.String,System.String,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Get max open positions
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-open-count" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">The margin asset</param>
            <param name="openPrice">Open price</param>
            <param name="openQuantity">Open quantity</param>
            <param name="leverage">Leverage</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.SetLeverageAsync(System.String,System.String,System.Decimal,System.Nullable{Bitget.Net.Enums.BitgetPositionSide},System.Threading.CancellationToken)">
            <summary>
            Set the leverage
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#change-leverage" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="leverage">Leverage</param>
            <param name="positionSide">Position direction (ignore this field if marginMode is crossed）</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.SetMarginAsync(System.String,System.String,System.Decimal,System.Nullable{Bitget.Net.Enums.BitgetPositionSide},System.Threading.CancellationToken)">
            <summary>
            Set the margin
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#change-margin" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="margin">Margin amount</param>
            <param name="positionSide">Position direction (ignore this field if marginMode is crossed）</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.SetMarginModeAsync(System.String,System.String,Bitget.Net.Enums.BitgetMarginMode,System.Threading.CancellationToken)">
            <summary>
            Change the margin mode
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#change-margin-mode" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="mode">Margin mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.SetAutoMarginAsync(System.String,System.String,Bitget.Net.Enums.BitgetPositionSide,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Set auto margin
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#set-auto-margin" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="side">Position side</param>
            <param name="autoMargin">Auto margin on or off</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.SetHoldModeAsync(Bitget.Net.Enums.BitgetProductType,Bitget.Net.Enums.BitgetHoldMode,System.Threading.CancellationToken)">
            <summary>
            Set position hold mode
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#change-hold-mode" /></para>
            </summary>
            <param name="type">Product type</param>
            <param name="mode">New hold mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetPositionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get symbol position
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-symbol-position-v2" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetPositionsAsync(Bitget.Net.Enums.BitgetProductType,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all postions
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-all-position-v2" /></para>
            </summary>
            <param name="type">Product type</param>
            <param name="marginAsset">Margin asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetHistoryPositionAsync(System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetProductType},System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get history position (max 3 months ago)
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-history-position" /></para>
            </summary>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="type">Product type</param>
            <param name="symbol">Symbol</param>
            <param name="pageSize">Page size</param>
            <param name="endId">Last end id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetBillsAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get account bill
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-account-bill" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="symbol">Symbol</param>
            <param name="pageSize">Page size</param>
            <param name="endId">Last end id</param>
            <param name="bizType">Business type</param>
            <param name="asset">Asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetBusinessBillsAsync(Bitget.Net.Enums.BitgetProductType,System.DateTime,System.DateTime,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get business account bills
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-business-account-bill" /></para>
            </summary>
            <param name="type">Product type</param>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="pageSize">Page size</param>
            <param name="business">Business type</param>
            <param name="endId">Last end id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData">
            <summary>
            Bitget exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get the server time
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-server-time" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetSymbolsAsync(Bitget.Net.Enums.BitgetProductType,System.Threading.CancellationToken)">
            <summary>
            Get symbols
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-all-symbols" /></para>
            </summary>
            <param name="type">Product type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetMergedOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get merged order book
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-merged-depth-data" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="mergeLevel">Merge level for entries</param>
            <param name="limit">Results to return, 1/5/15/50, defaults to 100</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get order book
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-depth" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="limit">Results to return, 1/5/15/50/100</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get ticker
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-single-symbol-ticker" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetTickersAsync(Bitget.Net.Enums.BitgetProductType,System.Threading.CancellationToken)">
            <summary>
            Get tickers
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-all-symbol-ticker" /></para>
            </summary>
            <param name="type">Type of symbols</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetFeeRatesAsync(System.Threading.CancellationToken)">
            <summary>
            Get fee information
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#vip-fee-rate" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get recent trades for a symbol
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-recent-fills" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetTradeHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get trade history for a symbol
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-fills" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="maxTradeId">Return trades before this id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get klines/candlestick data
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-candle-data" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="interval">Kline interval</param>
            <param name="priceType">Price type</param>
            <param name="startTime">Start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetHistoricalKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get klines/candlestick data
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-history-candle-data" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="interval">Kline interval</param>
            <param name="priceType">Price type</param>
            <param name="startTime">Start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetHistoricalIndexKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get index klines/candlestick data
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-history-index-candle-data" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="interval">Kline interval</param>
            <param name="priceType">Price type</param>
            <param name="startTime">Start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetHistoricalMarkKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get mark klines/candlestick data
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-history-mark-candle-data" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="interval">Kline interval</param>
            <param name="priceType">Price type</param>
            <param name="startTime">Start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetIndexPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the index price for a symbol
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-symbol-index-price" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetNextFundingTimeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get next funding time
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-symbol-next-funding-time" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetFundingRateHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get funding rate history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-history-funding-rate" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="page">Page number</param>
            <param name="pageSize">Page size</param>
            <param name="nextPage">Whether to query the next page default false</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetFundingRateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get current funding rate
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-current-funding-rate" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetOpenInterestAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get open interest rate
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-current-funding-rate" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetMarkPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get mark price
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-symbol-mark-price" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetLeverageInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get leverage info
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-symbol-leverage" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetPositionsTiersAsync(Bitget.Net.Enums.BitgetProductType,System.String,System.Threading.CancellationToken)">
            <summary>
            Get position tiers
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-position-tier" /></para>
            </summary>
            <param name="type">Product type</param>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetPositionRiskLimitAsync(System.Threading.CancellationToken)">
            <summary>
            Get position risk limit
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-risk-position-limit" /></para>
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading">
            <summary>
            Bitget trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.PlaceOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetFuturesOrderSide,Bitget.Net.Enums.BitgetOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.BitgetTimeInForce},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#place-order" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="marginAsset">Margin asset</param>
            <param name="side">Position side</param>
            <param name="type">Position side</param>
            <param name="quantity">Quantity</param>
            <param name="price">Price</param>
            <param name="timeInForce">Time in force</param>
            <param name="reduceOnly">Reduce only</param>
            <param name="takeProfitPrice">Preset take profit price</param>
            <param name="stopLossPrice">Preset stop loss price</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.CancelOrderAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel an order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#cancel-order" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="marginAsset">Margin asset</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.EditOrderAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Edit an order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#modify-order" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="newClientOrderId">New client order id</param>
            <param name="price">New price</param>
            <param name="quantity">New quantity</param>
            <param name="takeProfitPrice">new take profit price</param>
            <param name="stopLossPrice">New stop loss price</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetOpenOrdersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get list of open orders for a symbol
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-open-order" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetOpenOrdersByProductAsync(Bitget.Net.Enums.BitgetProductType,System.String,System.Threading.CancellationToken)">
            <summary>
            Get list of open order for a product type
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-all-open-order" /></para>
            </summary>
            <param name="type">Type</param>
            <param name="marginAsset">Filter by margin asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetOrderHistoryAsync(System.String,System.DateTime,System.DateTime,System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get order history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-history-orders" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="pageSize">Page size</param>
            <param name="endId">Last end Id of last query</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetOrderHistoryAsync(Bitget.Net.Enums.BitgetProductType,System.DateTime,System.DateTime,System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get order history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-producttype-history-orders" /></para>
            </summary>
            <param name="type">Product type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="pageSize">Page size</param>
            <param name="endId">Last end Id of last query</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetOrderAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get an order by id
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-order-details" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetUserTradesAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)">
            <summary>
            Get user trades
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-order-fill-detail" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="orderId">Filter by order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="endId">Last end Id of last query</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetUserTradesAsync(Bitget.Net.Enums.BitgetProductType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)">
            <summary>
            Get user trades
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-producttype-order-fill-detail" /></para>
            </summary>
            <param name="type">Product type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="endId">Last end Id of last query</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.PlacePlanOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetFuturesOrderSide,Bitget.Net.Enums.BitgetOrderType,Bitget.Net.Enums.BitgetTriggerType,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new plan order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#place-plan-order" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="marginAsset">Margin asset</param>
            <param name="side">Position side</param>
            <param name="type">Position side</param>
            <param name="quantity">Quantity</param>
            <param name="triggerType">Trigger type</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="executePrice">Execute price</param>
            <param name="reduceOnly">Reduce only</param>
            <param name="takeProfitPrice">Preset take profit price</param>
            <param name="stopLossPrice">Preset stop loss price</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.EditPlanOrderAsync(System.String,System.String,System.Decimal,Bitget.Net.Enums.BitgetTriggerType,Bitget.Net.Enums.BitgetOrderType,System.String,System.String,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Edit a plan order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#modify-plan-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="triggerType">Trigger type</param>
            <param name="orderType">Order type</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="executePrice">Execute price</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.EditPlanOrderTpSlAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Edit the take profit / stop loss of a plan order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#modify-plan-order-tpsl" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="takeProfitPrice">New take profit price</param>
            <param name="stopLossPrice">New stop loss price</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.PlaceStopOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.Decimal,Bitget.Net.Enums.BitgetPositionSide,System.Nullable{Bitget.Net.Enums.BitgetTriggerType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new stop order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#place-stop-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="planType">Plan type</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="side">Position side</param>
            <param name="triggerType">Trigger type</param>
            <param name="quantity">Quantity</param>
            <param name="executePrice">Execution price</param>
            <param name="rangeRate">Only works when planType is "MovingPlan", "1" means 1.0% price correction, two decimal places</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.PlaceTrailingStopOrderAsync(System.String,System.String,System.Decimal,Bitget.Net.Enums.BitgetFuturesOrderSide,System.Decimal,System.Decimal,System.Nullable{Bitget.Net.Enums.BitgetTriggerType},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new trailling stop order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#place-trailing-stop-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="side">Order side</param>
            <param name="triggerType">Trigger type</param>
            <param name="quantity">Quantity</param>
            <param name="rangeRate">"1" means 1.0% price correction, max 10</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.PlacePositionTpSlAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.Decimal,Bitget.Net.Enums.BitgetTriggerType,Bitget.Net.Enums.BitgetPositionSide,System.String,System.Threading.CancellationToken)">
            <summary>
            Set stop loss / take profit price for an position. When the position take profit / stop loss are triggered, the full amount of the position will be entrusted at the market price by default
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#place-position-tpsl" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="side">Order side</param>
            <param name="triggerType">Trigger type</param>
            <param name="planType">Plan type</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.EditStopOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.Decimal,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Edit an existing stop order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#modify-stop-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="planType">Plan type</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.CancelPlanOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a plan order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#modify-stop-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="planType">Plan type</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetPlanOrderHistoryAsync(System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetProductType},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get plan order history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-history-plan-orders-tpsl" /></para>
            </summary>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="type">Filter by product type</param>
            <param name="symbol">Filter by symbol</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetPlanOrdersAsync(System.String,System.Nullable{Bitget.Net.Enums.BitgetProductType},System.Nullable{Bitget.Net.Enums.BitgetPlanFilter},System.Threading.CancellationToken)">
            <summary>
            Get current open plan orders
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-plan-order-tpsl-list" /></para>
            </summary>
            <param name="symbol">Symbol, either this or type should be provided</param>
            <param name="type">Product type, either this or symbol should be provided</param>
            <param name="planType">Filter by plan type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi">
            <summary>
            Bitget futures streams
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.String,Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#candlesticks-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="interval">Kline interval</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#candlesticks-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="interval">Kline interval</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol ticker updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#tickers-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol ticker updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#tickers-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook changes updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#order-book-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook snapshot updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#order-book-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="limit">The book depth, either 5 or 15</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook changes updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#order-book-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook snapshot updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#order-book-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="limit">The book depth, either 5 or 15</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol trade updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#trades-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol trade updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#trades-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToBalanceUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to updates to the account balance
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#account-channel" /></para>
            </summary>
            <param name="instrumentType">Instrument type</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToPositionUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetPositionUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to position updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#positions-channel" /></para>
            </summary>
            <param name="instrumentType">Instrument type</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToOrderUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to account order updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#order-channel" /></para>
            </summary>
            <param name="instrumentType">Instrument type</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToPlanOrderUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to plan order updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#plan-order-channel" /></para>
            </summary>
            <param name="instrumentType">Instrument type</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.IBitgetRestClient">
            <summary>
            Client for accessing the Bitget API. 
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.IBitgetRestClient.SpotApi">
            <summary>
            Spot API endpoints
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.IBitgetRestClient.SpotApiV2">
            <summary>
            Spot API endpoints
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.IBitgetRestClient.FuturesApi">
            <summary>
            Futures API endpoints
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.IBitgetRestClient.FuturesApiV2">
            <summary>
            Futures API endpoints
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.IBitgetRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.IBitgetSocketClient">
            <summary>
            Client for accessing the Bitget websocket API
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.IBitgetSocketClient.SpotApi">
            <summary>
            Spot streams
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.IBitgetSocketClient.SpotApiV2">
            <summary>
            Spot streams
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.IBitgetSocketClient.FuturesApi">
            <summary>
            Futures streams
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.IBitgetSocketClient.FuturesApiV2">
            <summary>
            Futures streams
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.IBitgetSocketClient.SetApiCredentials(Bitget.Net.Objects.BitgetApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApi">
            <summary>
            Spot API endpoints
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApi.Trading">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApi.CommonSpotClient">
            <summary>
            Get the ISpotClient for this client. This is a common interface which allows for some basic operations without knowing any details of the exchange.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount">
            <summary>
            Bitget account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.GetFundingBalancesAsync(System.Threading.CancellationToken)">
            <summary>
            Get funding balances
            <para><a href="https://www.bitget.com/api-doc/common/account/Funding-Assets" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.GetTradeFeeAsync(System.String,Bitget.Net.Enums.BitgetBusinessType,System.Threading.CancellationToken)">
            <summary>
            Get trading fee for a symbol
            <para><a href="https://www.bitget.com/api-doc/common/public/Get-Trade-Rate" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.GetAssetsValuationAsync(System.Threading.CancellationToken)">
            <summary>
            Get asset valuation per account type
            <para><a href="https://www.bitget.com/api-doc/common/account/All-Account-Balance" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.GetAccountInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get account info
            <para><a href="https://www.bitget.com/api-doc/spot/account/Get-Account-Info" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.GetSpotBalancesAsync(System.Threading.CancellationToken)">
            <summary>
            Get spot account balances
            <para><a href="https://www.bitget.com/api-doc/spot/account/Get-Account-Assets" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.SetDepositAccountAsync(System.String,Bitget.Net.Enums.V2.AccountType,System.Threading.CancellationToken)">
            <summary>
            Set the account to receive deposits in for an asset
            <para><a href="https://www.bitget.com/api-doc/spot/account/Modify-Deposit-Account" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="accountType">The account type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.GetLedgerAsync(System.String,System.Nullable{Bitget.Net.Enums.V2.GroupType},System.Nullable{Bitget.Net.Enums.V2.BusinessType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get account ledger
            <para><a href="https://www.bitget.com/api-doc/spot/account/Get-Account-Bills" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="groupType">Filter by group type</param>
            <param name="businessType">Filter by business type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.TransferAsync(System.String,Bitget.Net.Enums.V2.TransferAccountType,Bitget.Net.Enums.V2.TransferAccountType,System.Decimal,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Transfer funds between accounts
            <para><a href="https://www.bitget.com/api-doc/spot/account/Wallet-Transfer" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="fromAccount">From account</param>
            <param name="toAccount">To account</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="symbol">Symbol, required when transferring to or from an account type that is a leveraged position-by-position account.</param>
            <param name="clientId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.GetTransferableAssetsAsync(Bitget.Net.Enums.V2.TransferAccountType,Bitget.Net.Enums.V2.TransferAccountType,System.Threading.CancellationToken)">
            <summary>
            Get list of assets that can be transfered between accounts
            <para><a href="https://www.bitget.com/api-doc/spot/account/Get-Transfer-Coins" /></para>
            </summary>
            <param name="fromAccount">From account</param>
            <param name="toAccount">To account</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.WithdrawAsync(System.String,Bitget.Net.Enums.V2.TransferType,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Withdraw asset
            <para><a href="https://www.bitget.com/api-doc/spot/account/Wallet-Withdrawal" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="transferType">Transfer type</param>
            <param name="address">Target address</param>
            <param name="quantity">Quantity</param>
            <param name="network">Network to use</param>
            <param name="innerTargetType">Inner transfer target type</param>
            <param name="areaCode">Area code for inner transfer</param>
            <param name="tag">Tag</param>
            <param name="remark">Remark</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.GetTransferHistoryAsync(System.String,Bitget.Net.Enums.V2.TransferAccountType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get transfer history
            <para><a href="https://www.bitget.com/api-doc/spot/account/Wallet-Withdrawal" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="fromAccount">From account</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="limit">Max number of results</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.SetBgbDeductEnabledAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Set BGB fee deduction enabled status
            <para><a href="https://www.bitget.com/api-doc/spot/account/Switch-Deduct" /></para>
            </summary>
            <param name="enable">Enabled</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.GetBgbDeductEnabledAsync(System.Threading.CancellationToken)">
            <summary>
            Get BGB deduct status
            <para><a href="https://www.bitget.com/api-doc/spot/account/Get-Deduct-Info" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.GetDepositAddressAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get deposit address
            <para><a href="https://www.bitget.com/api-doc/spot/account/Get-Deposit-Address" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="network">Network</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.CancelWithdrawalAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a withdrawal
            <para><a href="https://www.bitget.com/api-doc/spot/account/Cancel-Withdrawal" /></para>
            </summary>
            <param name="withdrawalOrderId">Withdrawal order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.GetWithdrawalHistoryAsync(System.DateTime,System.DateTime,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get withdrawal history 
            <para><a href="https://www.bitget.com/api-doc/spot/account/Get-Withdraw-Record" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="orderId">Filter by order id</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="limit">Max number of results</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiAccount.GetDepositHistoryAsync(System.DateTime,System.DateTime,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get deposit history
            <para><a href="https://www.bitget.com/api-doc/spot/account/Get-Deposit-Record" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="orderId">Filter by order id</param>
            <param name="limit">Max number of results</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiExchangeData">
            <summary>
            Bitget exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get the server time
            <para><a href="https://www.bitget.com/api-doc/common/public/Get-Server-Time" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiExchangeData.GetAssetsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get list of supported assets and their networks
            <para><a href="https://www.bitget.com/api-doc/spot/market/Get-Coin-List" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiExchangeData.GetSymbolsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get list of supported symbols and their trading rules
            <para><a href="https://www.bitget.com/api-doc/spot/market/Get-Symbols" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiExchangeData.GetVipFeeRatesAsync(System.Threading.CancellationToken)">
            <summary>
            Get list of VIP levels and fee rates
            <para><a href="https://www.bitget.com/api-doc/spot/market/Get-VIP-Fee-Rate" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiExchangeData.GetTickersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get tickers
            <para><a href="https://www.bitget.com/api-doc/spot/market/Get-Tickers" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get order book
            <para><a href="https://www.bitget.com/api-doc/spot/market/Get-Orderbook" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="mergeStep">Merge step</param>
            <param name="limit">Max number of rows</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiExchangeData.GetKlinesAsync(System.String,Bitget.Net.Enums.V2.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get kline/candlestick data
            <para><a href="https://www.bitget.com/api-doc/spot/market/Get-Candle-Data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiExchangeData.GetHistoricalKlinesAsync(System.String,Bitget.Net.Enums.V2.KlineInterval,System.DateTime,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get historical kline data
            <para><a href="https://www.bitget.com/api-doc/spot/market/Get-History-Candle-Data" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the most recent trades on the symbol
            <para><a href="https://www.bitget.com/api-doc/spot/market/Get-Recent-Trades" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiExchangeData.GetTradesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get trades
            <para><a href="https://www.bitget.com/api-doc/spot/market/Get-Market-Trades" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading">
            <summary>
            Bitget trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.PlaceOrderAsync(System.String,Bitget.Net.Enums.V2.OrderSide,Bitget.Net.Enums.V2.OrderType,System.Decimal,Bitget.Net.Enums.V2.TimeInForce,System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TakeProfitStopLossType},System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://www.bitget.com/api-doc/spot/trade/Place-Order" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="side">Order side</param>
            <param name="type">Order type</param>
            <param name="quantity">Quantity. For limit and market-sell orders this is in base asset, for market-buy orders it is in quote asset.</param>
            <param name="timeInForce">Time in force</param>
            <param name="price">Limit price</param>
            <param name="clientOrderId">Client order id</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="tpslType">Tpsl type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.PlaceMultipleOrdersAsync(System.String,System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetPlaceOrderRequest},System.Threading.CancellationToken)">
            <summary>
            Place multiple orders in a single call
            <para><a href="https://www.bitget.com/api-doc/spot/trade/Batch-Place-Orders" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orders">Orders to place</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.CancelOrderAsync(System.String,System.String,System.String,System.Nullable{Bitget.Net.Enums.V2.TakeProfitStopLossType},System.Threading.CancellationToken)">
            <summary>
            Cancel an order
            <para><a href="https://www.bitget.com/api-doc/spot/trade/Place-Order" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Order id. Either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id. Either this or orderId should be provided</param>
            <param name="tpslType">Tpsl type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.CancelMultipleOrdersAsync(System.String,System.Collections.Generic.IEnumerable{Bitget.Net.Enums.V2.BitgetCancelOrderRequest},System.Threading.CancellationToken)">
            <summary>
            Cancel multiple orders in a single call
            <para><a href="https://www.bitget.com/api-doc/spot/trade/Batch-Cancel-Orders" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orders">Orders to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.CancelOrdersBySymbolAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel all orders on a symbol
            <para><a href="https://www.bitget.com/api-doc/spot/trade/Cancel-Symbol-Orders" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.GetOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get order info
            <para><a href="https://www.bitget.com/api-doc/spot/trade/Get-Order-Info" /></para>
            </summary>
            <param name="orderId">Order id. Either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id. Either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.GetOpenOrdersAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{Bitget.Net.Enums.V2.TakeProfitStopLossType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get current open orders
            <para><a href="https://www.bitget.com/api-doc/spot/trade/Get-Unfilled-Orders" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="tpslType">Tpsl type</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.GetClosedOrdersAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{Bitget.Net.Enums.V2.TakeProfitStopLossType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get closed orders
            <para><a href="https://www.bitget.com/api-doc/spot/trade/Get-History-Orders" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="tpslType">Tpsl type</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get user trade history
            <para><a href="https://www.bitget.com/api-doc/spot/trade/Get-Fills" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.PlaceTriggerOrderAsync(System.String,Bitget.Net.Enums.V2.OrderSide,Bitget.Net.Enums.V2.OrderType,System.Decimal,System.Decimal,System.Nullable{Bitget.Net.Enums.V2.QuantityType},System.Nullable{Bitget.Net.Enums.V2.TriggerPriceType},System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.V2.TimeInForce},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a trigger order
            <para><a href="https://www.bitget.com/api-doc/spot/plan/Place-Plan-Order" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="side">Order side</param>
            <param name="type">Order type</param>
            <param name="quantity">Quantity</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="quantityType">Asset the quantity is in</param>
            <param name="triggerPriceType">Trigger price type</param>
            <param name="orderPrice">Order price (when orderType is limit)</param>
            <param name="timeInForce">Time in force</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.EditTriggerOrderAsync(System.Decimal,Bitget.Net.Enums.V2.OrderType,System.Decimal,System.Nullable{System.Decimal},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Edit a trigger order
            <para><a href="https://www.bitget.com/api-doc/spot/plan/Modify-Plan-Order" /></para>
            </summary>
            <param name="triggerPrice">Trigger price</param>
            <param name="orderType">Order type</param>
            <param name="quantity">Quantity</param>
            <param name="orderPrice">Order price for limit orders</param>
            <param name="orderId">Order id. Either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client Order id. Either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.CancelTriggerOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a trigger order
            <para><a href="https://www.bitget.com/api-doc/spot/plan/Cancel-Plan-Order" /></para>
            </summary>
            <param name="orderId">Order id. Either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client Order id. Either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.CancelAllTriggerOrdersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Cancel all trigger orders
            <para><a href="https://www.bitget.com/api-doc/spot/plan/Batch-Cancel-Plan-Order" /></para>
            </summary>
            <param name="symbols">Only cancel trigger orders on these symbols, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.GetOpenTriggerOrdersAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get list of currently open trigger orders
            <para><a href="https://www.bitget.com/api-doc/spot/plan/Get-Current-Plan-Order" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="idLessThan">Return results before this id</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.GetTriggerSubOrdersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get trigger order sub orders
            <para><a href="https://www.bitget.com/api-doc/spot/plan/Get-Plan-Sub-Order" /></para>
            </summary>
            <param name="triggerOrderId">Trigger order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApiTrading.GetClosedTriggerOrdersAsync(System.String,System.DateTime,System.DateTime,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get closed trigger orders
            <para><a href="https://www.bitget.com/api-doc/spot/plan/Get-History-Plan-Order" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETHUSDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetSocketClientSpotApi">
            <summary>
            Bitget spot streams
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ticker updates for a symbol
            <para><a href="https://www.bitget.com/api-doc/spot/websocket/public/Tickers-Channel" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ticker updates for multiple symbols
            <para><a href="https://www.bitget.com/api-doc/spot/websocket/public/Tickers-Channel" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to trade updates for a symbol
            <para><a href="https://www.bitget.com/api-doc/spot/websocket/public/Trades-Channel" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to trade updates for multiple symbols
            <para><a href="https://www.bitget.com/api-doc/spot/websocket/public/Trades-Channel" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,Bitget.Net.Enums.BitgetStreamKlineIntervalV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates for a symbol
            <para><a href="https://www.bitget.com/api-doc/spot/websocket/public/Candlesticks-Channel" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bitget.Net.Enums.BitgetStreamKlineIntervalV2,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates for multiple symbols
            <para><a href="https://www.bitget.com/api-doc/spot/websocket/public/Candlesticks-Channel" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="interval">Kline interval</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates for a symbol
            <para><a href="https://www.bitget.com/api-doc/spot/websocket/public/Depth-Channel" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="limit">Order book depth. 1, 5 or 15 for full updates of these levels, or null for initial snapshot and only incremental updates after</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.V2.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates for multiple symbols
            <para><a href="https://www.bitget.com/api-doc/spot/websocket/public/Depth-Channel" /></para>
            </summary>
            <param name="symbols">The symbols, for example `ETHUSDT`</param>
            <param name="limit">Order book depth. 1, 5 or 15 for full updates of these levels, or null for initial snapshot and only incremental updatesa after</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetSocketClientSpotApi.SubscribeToOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetOrderUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user order updates
            <para><a href="https://www.bitget.com/api-doc/spot/websocket/private/Order-Channel" /></para>
            </summary>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetSocketClientSpotApi.SubscribeToUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetUserTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user trade updates
            <para><a href="https://www.bitget.com/api-doc/spot/websocket/private/Fill-Channel" /></para>
            </summary>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetSocketClientSpotApi.SubscribeToTriggerOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user trigger order updates
            <para><a href="https://www.bitget.com/api-doc/spot/websocket/private/Plan-Order-Channel" /></para>
            </summary>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetSocketClientSpotApi.SubscribeToBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.V2.BitgetBalanceUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user balance updates
            <para><a href="https://www.bitget.com/api-doc/spot/websocket/private/Account-Channel" /></para>
            </summary>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApi">
            <summary>
            DEPRECATED, use <see cref="T:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApi">V2</see> instead. Spot API endpoints
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApi.Account">
            <summary>
            DEPRECATED, use <see cref="T:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApi">V2</see> instead.Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApi.ExchangeData">
            <summary>
            DEPRECATED, use <see cref="T:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApi">V2</see> instead. Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApi.Trading">
            <summary>
            DEPRECATED, use <see cref="T:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApi">V2</see> instead. Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApi.CommonSpotClient">
            <summary>
            DEPRECATED, use <see cref="T:Bitget.Net.Interfaces.Clients.SpotApiV2.IBitgetRestClientSpotApi">V2</see> instead. Get the ISpotClient for this client. This is a common interface which allows for some basic operations without knowing any details of the exchange.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount">
            <summary>
            Bitget account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetBalancesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get account asset balances
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-account-assets" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetBalancesLiteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get account assets, only returns assets with balance > 0
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-account-assets-lite" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetApiKeyInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get API key info
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-apikey-info" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetBillsAsync(System.String,System.Nullable{Bitget.Net.Enums.BitgetGroupType},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get bills history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-bills" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="groupType">Transaction group type</param>
            <param name="bizType">	Business type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="pageSize">Max amount of results</param>
            <param name="endId">Last end id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetTransferHistoryAsync(System.String,Bitget.Net.Enums.BitgetAccountType,System.DateTime,System.DateTime,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get transfer history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-transfer-list" /></para>
            </summary>
            <param name="assetId">Asset id</param>
            <param name="fromType">Filter by account source</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.TransferAsync(System.String,System.Decimal,Bitget.Net.Enums.BitgetTransferAccountType,Bitget.Net.Enums.BitgetTransferAccountType,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Transfer between account types
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#transfer-v2" /></para>
            </summary>
            <param name="asset">Asset name</param>
            <param name="quantity">Transfer quantity</param>
            <param name="fromType">From account type</param>
            <param name="toType">To account type</param>
            <param name="symbol">Must provide when fromType or toType = IsolatedMargin</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.SubTransferAsync(System.String,System.Decimal,Bitget.Net.Enums.BitgetTransferAccountType,Bitget.Net.Enums.BitgetTransferAccountType,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Transfer between subaccounts or sub and main account
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#sub-transfer" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="quantity">Transfer quantity</param>
            <param name="fromType">From account type</param>
            <param name="toType">To account type</param>
            <param name="clientOrderId">Client order id</param>
            <param name="fromUserId">From user id</param>
            <param name="toUserId">To user id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetDepositAddressAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deposit address
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-coin-address" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="network">Network</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.WithdrawAsync(System.String,System.String,System.String,System.Decimal,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Withdraw funds
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#withdraw-v2" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="address">Target address</param>
            <param name="network">Network</param>
            <param name="quantity">Quantity</param>
            <param name="tag">Tag</param>
            <param name="remark">Remard</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.InnerWithdrawAsync(System.String,System.String,System.Decimal,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Withdraw funds internally
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#inner-withdraw-v2" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="toUserId">Target user id</param>
            <param name="quantity">Quantity</param>
            <param name="toType">'email/mobile/uid', default 'uid'</param>
            <param name="areaCode">	Tel area code, This field is mandatory when the toType equals to 'mobile'</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetWithdrawalHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get withdrawal history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-withdraw-list" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="clientOrderId">Client order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetDepositHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get deposit history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-deposit-list" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetUserFeeRatioAsync(System.String,Bitget.Net.Enums.BitgetBusinessType,System.Threading.CancellationToken)">
            <summary>
            Get user maker / taker fees
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-user-fee-ratio" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="businessType"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData">
            <summary>
            Bitget exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get the server time
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-server-time" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetNotificationsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get server notifications of the last month
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#notice" /></para>
            </summary>
            <param name="languageType">The language type</param>
            <param name="noticeType">Filter by notice type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <summary>
            Get a list of supported assets on the platform
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-coin-list" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <summary>
            Get a list of supported symbols on the platform
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-symbols" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a single symbol ticker
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-single-ticker" /></para>
            </summary>
            <param name="symbol">The id of the symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <summary>
            Get all symbol tickers
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-all-tickers" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get recent trades
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-recent-trades" /></para>
            </summary>
            <param name="symbol">The id of the symbol</param>
            <param name="limit">Results to return, max 500</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetTradesAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get trade history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-market-trades" /></para>
            </summary>
            <param name="symbol">The id of the symbol</param>
            <param name="tradeId">Filter by trade id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Results to return, max 500</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetKlinesAsync(System.String,Bitget.Net.Enums.BitgetKlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get kline/candlestick data
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-candle-data" /></para>
            </summary>
            <param name="symbol">The id of the symbol</param>
            <param name="interval">The kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Results to return, max 1000</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetHistoricalKlinesAsync(System.String,Bitget.Net.Enums.BitgetKlineInterval,System.DateTime,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get historical kline/candlestick data
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-history-candle-data" /></para>
            </summary>
            <param name="symbol">The id of the symbol</param>
            <param name="interval">The kline interval</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Results to return, max 1000</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get order book
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-depth" /></para>
            </summary>
            <param name="symbol">The id of the symbol</param>
            <param name="mergeLevel">Merge level for entries</param>
            <param name="limit">Results to return, max 1000</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetMergedOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get merged order book
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-merged-depth-data" /></para>
            </summary>
            <param name="symbol">The id of the symbol</param>
            <param name="mergeLevel">Merge level for entires</param>
            <param name="limit">Results to return, max 1000</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetFeeRatesAsync(System.Threading.CancellationToken)">
            <summary>
            Get limits according to the VIP levels
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading">
            <summary>
            Bitget trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.PlaceOrderAsync(System.String,Bitget.Net.Enums.BitgetOrderSide,Bitget.Net.Enums.BitgetOrderType,System.Decimal,Bitget.Net.Enums.BitgetTimeInForce,System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#trade" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="side">Order side</param>
            <param name="type">Order type</param>
            <param name="quantity">Order quantity, base coin when orderType is limit; quote asset when orderType is buy-market, base asset when orderType is sell-market</param>
            <param name="timeInForce">Time in force</param>
            <param name="price">Limit order price</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.CancelOrderAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel an order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#cancel-order-v2" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="orderId">Order id. Either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id. Either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.CancelOrdersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel all orders for a symbol
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#cancel-order-by-symbol" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.GetOrderAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get order info by id
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-order-details" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="orderId">Order id. Either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id. Either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.GetOrdersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get orders
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-order-list" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.GetOrderHistoryAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get order history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-order-history" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="startId">Return results with id after this</param>
            <param name="endId">Return results with id before this</param>
            <param name="limit">Max results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get trade history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-transaction-details" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="orderId">Filter by order id</param>
            <param name="startId">Filter by start id</param>
            <param name="endId">Filter by end id</param>
            <param name="limit">Max results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.PlacePlanOrderAsync(System.String,Bitget.Net.Enums.BitgetOrderSide,Bitget.Net.Enums.BitgetOrderType,System.Decimal,System.Decimal,Bitget.Net.Enums.BitgetTriggerType,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.BitgetTimeInForce},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new planned order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#place-plan-order" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="side">Order side</param>
            <param name="type">Order type</param>
            <param name="quantity">Order quantity, base coin when orderType is limit; quote asset when orderType is buy-market, base asset when orderType is sell-market</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="triggerType">Trigger type</param>
            <param name="executePrice">Execution price (if limit order)</param>
            <param name="timeInForce">Time in force</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.EditPlanOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetOrderType,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Modify an existing plan order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#modify-plan-order" /></para>
            </summary>
            <param name="orderId">Order id of order to edit, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id of order to edit, either this or orderId should be provided</param>
            <param name="type">Order type</param>
            <param name="quantity">Order quantity, base coin when orderType is limit; quote asset when orderType is buy-market, base asset when orderType is sell-market</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="executePrice">Execution price (if limit order)</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.CancelPlanOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a plan order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#cancel-plan-order" /></para>
            </summary>
            <param name="orderId">Order id of order to cancel, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id of order to cancel, either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.GetPlanOrdersAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get current plan orders
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-current-plan-orders" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="pageSize">Page size</param>
            <param name="fromId">Return results after this order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.GetPlanOrderHistoryAsync(System.String,System.Int32,System.DateTime,System.DateTime,System.String,System.Threading.CancellationToken)">
            <summary>
            Get historic plan orders
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-history-plan-orders" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="pageSize">Page size</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="fromId">Return results after this order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi">
            <summary>
            Bitget spot streams
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetBalanceUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to updates to the account balance
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#account-channel" /></para>
            </summary>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#candlesticks-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="interval">Kline interval</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#candlesticks-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="interval">Kline interval</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook changes updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#depth-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook snapshot updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#depth-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="limit">The book depth, either 5 or 15</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook changes updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#depth-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook snapshot updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#depth-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="limit">The book depth, either 5 or 15</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetOrderUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to account order updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#order-channel" /></para>
            </summary>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol ticker updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#tickers-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol ticker updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#tickers-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol trade updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#trades-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol trade updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#trades-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.IBitgetOrderBookFactory">
            <summary>
            Bitget order book factory
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.IBitgetOrderBookFactory.Spot">
            <summary>
            Spot order book factory methods
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.IBitgetOrderBookFactory.UsdtFutures">
            <summary>
            Usdt futures order book factory methods
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.IBitgetOrderBookFactory.CoinFutures">
            <summary>
            Coin futures order book factory methods
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.IBitgetOrderBookFactory.UsdcFutures">
            <summary>
            Usdc futures order book factory methods
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.IBitgetOrderBookFactory.CreateSpot(System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for a spot symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Book options</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.IBitgetOrderBookFactory.CreateFutures(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for a futures symbol
            </summary>
            <param name="productType">The product type</param>
            <param name="symbol">The symbol</param>
            <param name="options">Book options</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Objects.BitgetApiAddresses">
            <summary>
            Bitget Api addresses
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.BitgetApiAddresses.RestBaseAddress">
            <summary>
            The address used by the library for the Bitget rest API
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.BitgetApiAddresses.SocketBaseAddress">
            <summary>
            The address used by the library for the Bitget socket API
            </summary>
        </member>
        <member name="F:Bitget.Net.Objects.BitgetApiAddresses.Default">
            <summary>
            The default addresses to connect to the bitget.com API
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.BitgetApiCredentials">
            <summary>
            Credentials for the Bitget API
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.BitgetApiCredentials.PassPhrase">
            <summary>
            The pass phrase
            </summary>
        </member>
        <member name="M:Bitget.Net.Objects.BitgetApiCredentials.#ctor(System.String,System.String,System.String,CryptoExchange.Net.Authentication.ApiCredentialsType)">
            <summary>
            Creates new api credentials. Keep this information safe.
            </summary>
            <param name="apiKey">The API key</param>
            <param name="apiSecret">The API secret</param>
            <param name="apiPassPhrase">The API passPhrase</param>
            <param name="credentialsType">The type of credentials</param>
        </member>
        <member name="M:Bitget.Net.Objects.BitgetApiCredentials.#ctor(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Create Api credentials providing a stream containing json data. The json data should include three values: apiKey, apiSecret and apiPassPhrase
            </summary>
            <param name="inputStream">The stream containing the json data</param>
            <param name="identifierKey">A key to identify the credentials for the API. For example, when set to `binanceKey` the json data should contain a value for the property `binanceKey`. Defaults to 'apiKey'.</param>
            <param name="identifierSecret">A key to identify the credentials for the API. For example, when set to `binanceSecret` the json data should contain a value for the property `binanceSecret`. Defaults to 'apiSecret'.</param>
            <param name="identifierPassPhrase">A key to identify the credentials for the API. For example, when set to `BitgetPass` the json data should contain a value for the property `BitgetPass`. Defaults to 'apiPassPhrase'.</param>
        </member>
        <member name="M:Bitget.Net.Objects.BitgetApiCredentials.Copy">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetApiKeyInfo">
            <summary>
            Api key info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.InviterId">
            <summary>
            Inviter id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.AgentInviterId">
            <summary>
            Agent inviter code
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.Channel">
            <summary>
            Channel
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.Ips">
            <summary>
            Whitelist ips
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.ParentId">
            <summary>
            Parent uid
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.Trader">
            <summary>
            True if trade
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.IsSpotTrader">
            <summary>
            True if spot trader
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.Permissions">
            <summary>
            List of permissions
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetAsset">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetAsset.AssetId">
            <summary>
            Asset id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetAsset.AssetName">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetAsset.Transferable">
            <summary>
            Transferable
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetAsset.Networks">
            <summary>
            Networks for this asset
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetBalance">
            <summary>
            Balance info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalance.AssetId">
            <summary>
            Asset id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalance.AssetName">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalance.Available">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalance.Frozen">
            <summary>
            Frozen balance
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalance.Locked">
            <summary>
            Locked balance
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalance.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetBalanceUpdate">
            <summary>
            Balance update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalanceUpdate.AssetId">
            <summary>
            Asset id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalanceUpdate.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalanceUpdate.Available">
            <summary>
            Available quantity
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetBill">
            <summary>
            Bill info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.Asset">
            <summary>
            Asset id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.GroupType">
            <summary>
            Group type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.Type">
            <summary>
            Transaction type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.Balance">
            <summary>
            Balance Before transfer
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.Fees">
            <summary>
            Fees
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.BillId">
            <summary>
            Bill id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetDeposit">
            <summary>
            Deposit info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Status">
            <summary>
            Withdrawal status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.ToAddress">
            <summary>
            To address
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Confirm">
            <summary>
            Confirmations
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetDepositAddress">
            <summary>
            Deposit address
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDepositAddress.Address">
            <summary>
            Deposit address
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDepositAddress.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDepositAddress.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDepositAddress.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDepositAddress.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFeeLevel">
            <summary>
            Fee info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFeeLevel.Level">
            <summary>
            VIP level
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFeeLevel.TransactionVolume">
            <summary>
            30 day USDT transaction volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFeeLevel.AssetQuantity">
            <summary>
            Asset quantity USDT
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFeeLevel.TakerFeeRate">
            <summary>
            Taker fee rate, actual fee rate please refer to official announcement when '0'
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFeeLevel.MakerFeeRate">
            <summary>
            Maker fee rate, actual fee rate please refer to official announcement when '0'
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFeeLevel.WithdrawQuantity">
            <summary>
            24 hours withdraw amount (BTC)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFeeLevel.WithdrawQuantityUsdt">
            <summary>
            24 hours withdraw amount (USDT)
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFundingRate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFundingRate.FundingRate">
            <summary>
            Current funding rate
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFundingRateHistory">
            <summary>
            Historical funding rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFundingRateHistory.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFundingRateHistory.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFundingRateHistory.SettleTime">
            <summary>
            Settle time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFundingTime">
            <summary>
            Next funding time info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFundingTime.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFundingTime.FundingTime">
            <summary>
            Funding time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo">
            <summary>
            Account info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.Locked">
            <summary>
            Locked amount (margin asset), system will lock when close position
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.Available">
            <summary>
            Available balance(margin asset)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.CrossMaxAvailable">
            <summary>
            The maximum available balance for crossed margin mode(margin currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.FixedMaxAvailable">
            <summary>
            The maximum available balance for fixed margin mode(margin currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.MaxTransferOut">
            <summary>
            Maximum transferable
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.Equity">
            <summary>
            Account equity (margin asset), includes uPnL (calculated by mark price)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.UsdtEquity">
            <summary>
            Account equity convert to USDT
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.BtcEquity">
            <summary>
            Account equity convert to BTC
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.CrossRiskRate">
            <summary>
            Risk ratio at crossed margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.CrossMarginLeverage">
            <summary>
            Leverage level for crossed margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.FixedLongLeverage">
            <summary>
            Long leverage with isolated(fixed) margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.FixedShortLeverage">
            <summary>
            Short leverage with isolated(fixed) margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.UnrealizedProfitLoss">
            <summary>
            Urealized profit and loss at crossed margin mode, unit in USDT
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.Bonus">
            <summary>
            Coupon
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate">
            <summary>
            Balance update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate.Locked">
            <summary>
            Locked quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate.Available">
            <summary>
            Available quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate.MaxOpenPosAvailable">
            <summary>
            Max available to open position
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate.MaxTransferOut">
            <summary>
            Max available to transfer out
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate.Equity">
            <summary>
            Equity of the currency
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate.EquityUsdt">
            <summary>
            Equity of the currency USD
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesBills">
            <summary>
            Bills page
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBills.Bills">
            <summary>
            Bills list
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesBill">
            <summary>
            Bill info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.Type">
            <summary>
            Transaction type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.FeeDeduct">
            <summary>
            Fees
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.Id">
            <summary>
            Bill id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesKline">
            <summary>
            Kline info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesKline.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesKline.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesKline.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesKline.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesKline.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesKline.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesKline.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesOrder">
            <summary>
            Bitget futures order
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.Quantity">
            <summary>
            Order quantity (base asset when orderType=limit; quote asset when orderType=market)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.AveragePrice">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.TotalProfits">
            <summary>
            Total profits
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.FilledValue">
            <summary>
            Filled value
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.PlaceSource">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.StopLossPrice">
            <summary>
            Stop loss price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.TakeProfitPrice">
            <summary>
            Take profit price
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderBook.Asks">
            <summary>
            Ask entries
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderBook.Bids">
            <summary>
            Bid entries
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderBook.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderBook.Precision">
            <summary>
            Current gear, for example: scale 1
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderBook.Scale">
            <summary>
            Precision value
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderBook.IsMaxPrecision">
            <summary>
            Is max precision
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate">
            <summary>
            Bitget futures order update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Quantity">
            <summary>
            Order quantity (base asset when orderType=limit; quote asset when orderType=market)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.AveragePrice">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.ProfitAndLoss">
            <summary>
            Total profits
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.NotionalValue">
            <summary>
            Estimated national value in USD of order
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.PlaceSource">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.LastFillPrice">
            <summary>
            Last filled price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.LastFillQuantity">
            <summary>
            Last filled quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.LastFillFee">
            <summary>
            Last filled fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.LastFillFeeAsset">
            <summary>
            Last filled fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.LastFillTime">
            <summary>
            Last filled time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.LastTradeId">
            <summary>
            Last traded id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.ExecutionType">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.NotionalValueFilled">
            <summary>
            Filled notional value in USD of order
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Fees">
            <summary>
            Paid order fees
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder">
            <summary>
            Plan order
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.ExecuteOrderId">
            <summary>
            Execute order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.ExecutePrice">
            <summary>
            Execution price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.PlanType">
            <summary>
            Plan type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.Side">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.TriggerType">
            <summary>
            Order trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.TakeProfitPrice">
            <summary>
            Take profit price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.StopLossPrice">
            <summary>
            Stop loss price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.RangeRate">
            <summary>
            PlanType is "MovingPlan", "1" means 1.0% price correction, two decimal places
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.Source">
            <summary>
            Order trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.ExecuteTime">
            <summary>
            Execute time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.ExecutedQuantity">
            <summary>
            Executed quantity
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate">
            <summary>
            Plan order update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.ActualPrice">
            <summary>
            Actual price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.ActualQuantity">
            <summary>
            Actual quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.PlanType">
            <summary>
            Plan type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.TriggerType">
            <summary>
            Order trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.Source">
            <summary>
            Order trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.TriggerTime">
            <summary>
            Trigger time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.ExecutedQuantity">
            <summary>
            Executed quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.KeyId">
            <summary>
            Key id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesSymbol">
            <summary>
            Futures symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.Id">
            <summary>
            Symbol id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.Name">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.BuyLimitPriceRatio">
            <summary>
            Buy limit price ratio
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.SellLimitPriceRatio">
            <summary>
            Sell limit price ratio
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.FeeRateUpRatio">
            <summary>
            Rate of increase in handling fee, 0.005 means 0.5%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.MakerFeeRate">
            <summary>
            Maker fee rate, 0.0002 means 0.02%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.TakerFeeRate">
            <summary>
            Taker fee rate, 0.0006 means 0.06%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.OpenCostUpRatio">
            <summary>
            Percentage of increase in opening cost, 0.01 means 1%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.SupportMarginAssets">
            <summary>
            	Support margin currency array
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.MinTradeNum">
            <summary>
            Minimum number of openings(Base Currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.PriceEndStep">
            <summary>
            Price step, i.e. when pricePlace=1, priceEndStep=5 means the price would only accept numbers like 10.0, 10.5, and reject numbers like 10.2(10.2 divided by 0.5 not equals to 0)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.QuantityDecimals">
            <summary>
            Number of decimal places
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.PriceDecimals">
            <summary>
            Price scale precision, i.e. 1 means 0.1; 2 means 0.01
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.SizeMultiplier">
            <summary>
            Quantity Multiplier The order size must be greater than minTradeNum and satisfy the multiple of sizeMultiplier
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.Type">
            <summary>
            Futures symbol type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.Status">
            <summary>
            Symbol status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.DelistTime">
            <summary>
            Delist time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.LimitOpenTime">
            <summary>
            Prohibit create order time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesTicker">
            <summary>
            Ticker info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.HighPrice24h">
            <summary>
            High price in last 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.LowPrice24h">
            <summary>
            Low price in last 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.UsdtVolume">
            <summary>
            Usdt volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.BestAskPrice">
            <summary>
            Best sell price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.BestAskQuantity">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.OpenPriceUtc0">
            <summary>
            Open price at UTC 0
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.ChangePercentageUtc0">
            <summary>
            Change percentage since UTC 0, 0.01 means 1%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.ChangePercentage">
            <summary>
            Change percentage, 0.01 means 1%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.HoldingAmount">
            <summary>
            Holding amount
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate">
            <summary>
            Futures ticker update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.LastTradePrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.HighPrice24h">
            <summary>
            High price in last 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.LowPrice24h">
            <summary>
            Low price in last 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.ChangePercentage24h">
            <summary>
            Price change percentage last 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.NextSettlementTime">
            <summary>
            Next settlement time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.SystemTime">
            <summary>
            System time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.OpenPriceUtc0">
            <summary>
            Open price at UTC 00:00
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.PriceChangeUtc0">
            <summary>
            Price change since UTC 00:00
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.SymbolType">
            <summary>
            Type of symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.SymbolId">
            <summary>
            Symbol id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.DeliveryPrice">
            <summary>
            Delivery price (0 if perpetual)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTrade.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTrade.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesUserTrade">
            <summary>
            Futures user trade
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.Side">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.Profit">
            <summary>
            Profit
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.PlaceSource">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.ExecutionType">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetIndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetIndexPrice.Symbol">
            <summary>
            Symbol id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetIndexPrice.Index">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetIndexPrice.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetKline">
            <summary>
            Kline info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.UsdtVolume">
            <summary>
            Usdt volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetKlineUpdate">
            <summary>
            Kline update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKlineUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKlineUpdate.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKlineUpdate.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKlineUpdate.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKlineUpdate.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKlineUpdate.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetLeverageInfo">
            <summary>
            Leverage info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetLeverageInfo.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetLeverageInfo.MinLeverage">
            <summary>
            Min leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetLeverageInfo.MaxLeverage">
            <summary>
            Max leverage
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetMarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetMarkPrice.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetMarkPrice.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetMarkPrice.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetMaxPositions">
            <summary>
            Max positions info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetMaxPositions.OpenCount">
            <summary>
            Max open positions
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetNetwork">
            <summary>
            Network info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.Name">
            <summary>
            Network name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.NeedTag">
            <summary>
            Whether tag is needed
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.Withdrawable">
            <summary>
            Whether it is possible to withdraw
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.Depositable">
            <summary>
            Wheter it is possible to deposit
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.WithdrawFee">
            <summary>
            Withdraw fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.DepositConfirmations">
            <summary>
            Deposit confirmations required
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.WithdrawConfimations">
            <summary>
            Withdraw confirmations required
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.MinDepositQuantity">
            <summary>
            Min deposit quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.MinWithdrawQuantity">
            <summary>
            Min withdrawal quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.Url">
            <summary>
            Explorer url
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetNotification">
            <summary>
            Notification
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNotification.NoticeId">
            <summary>
            Id of the notice
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNotification.NoticeTitle">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNotification.NoticeDescription">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNotification.CreateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNotification.LanguageType">
            <summary>
            Language
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNotification.NoticeUrl">
            <summary>
            Notice url
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOpenInterest.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOpenInterest.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOpenInterest.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrder">
            <summary>
            Bitget order
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.Quantity">
            <summary>
            Order quantity (base asset when orderType=limit; quote asset when orderType=market)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.FillPrice">
            <summary>
            Transaction price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.ValueFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.PlaceSource">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.FeeDetails">
            <summary>
            Fee details
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrderFee">
            <summary>
            Order fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderFee.Deduction">
            <summary>
            Deduction
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderFee.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderFee.DeductionFee">
            <summary>
            Total deduction fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderFee.TotalFee">
            <summary>
            Total fee
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBook.Asks">
            <summary>
            Ask entries
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBook.Bids">
            <summary>
            Bid entries
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBook.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrderBookEntry">
            <summary>
            Order book entry
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBookEntry.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBookEntry.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrderBookUpdate">
            <summary>
            Book update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBookUpdate.Asks">
            <summary>
            Asks
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBookUpdate.Bids">
            <summary>
            Bids
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBookUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrderResult">
            <summary>
            Order result
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderResult.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderResult.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrderUpdate">
            <summary>
            Order update info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.SymbolId">
            <summary>
            Symbol id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.Quantity">
            <summary>
            Order original quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.Notional">
            <summary>
            The purchase amount, which will be returned when the market price is purchased
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.OrderType">
            <summary>
            The order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.Force">
            <summary>
            The order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.OrderSide">
            <summary>
            The order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.FillPrice">
            <summary>
            Fill price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.FillQuantity">
            <summary>
            Fill quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.FillFee">
            <summary>
            Fill fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.FeeAsset">
            <summary>
            Fill fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.FillTime">
            <summary>
            Fill time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.ExecutionType">
            <summary>
            Fill type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.AverageTradePrice">
            <summary>
            Average trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.Source">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.OrderFees">
            <summary>
            Fee info
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrderFeeQuantity">
            <summary>
            Fee info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderFeeQuantity.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderFeeQuantity.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPagination`1">
            <summary>
            Paginated result
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPagination`1.HasNext">
            <summary>
            Has another page
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPagination`1.EndId">
            <summary>
            Last id of the results, can be used for requesting the next page
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPagination`1.Data">
            <summary>
            Paged data
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPaginationBase">
            <summary>
            Paginated result
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPaginationBase.EndId">
            <summary>
            Last id of the results, can be used for requesting the next page
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPlanOrder">
            <summary>
            Plan order
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.ExecutePrice">
            <summary>
            Execution price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.Type">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.TriggerType">
            <summary>
            	Order trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.Source">
            <summary>
            	Order trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.PlaceType">
            <summary>
            Place type
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPosition">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.HoldSide">
            <summary>
            Hold side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.OpenQuantity">
            <summary>
            Open pending to fill (base currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.Margin">
            <summary>
            Margin quantity (margin currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.AutoMargin">
            <summary>
            Auto suppliment margin
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.Available">
            <summary>
            Position available (Quote currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.Locked">
            <summary>
            Position locked (Quote currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.Total">
            <summary>
            Total position (available + locked)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.ProfitAndLoss">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.AverageOpenPrice">
            <summary>
            Average opening price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.UnrealizedProfitAndLoss">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.LiquidationPrice">
            <summary>
            Estimated liquidation price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.KeepMarginRate">
            <summary>
            Keep margin rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPositionHistory">
            <summary>
            Position history
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.Side">
            <summary>
            Hold side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.AverageOpenPrice">
            <summary>
            Average open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.CloseOpenPrice">
            <summary>
            Average close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.OpenPositionSize">
            <summary>
            Open position size
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.ClosePositionSize">
            <summary>
            Close position size
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.ProfitAndLoss">
            <summary>
            Profit and loss
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.Netprofit">
            <summary>
            Net profit
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.TotalFundingCost">
            <summary>
            Total funding cost
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.OpeningFee">
            <summary>
            Opening fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.ClosingFee">
            <summary>
            Closing fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionMode.Symbol">
            <summary>
            Symbol id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionMode.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionMode.DualSidePosition">
            <summary>
            True: DoubleHold, false: SingleHold
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPositionRisk">
            <summary>
            Position risk
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionRisk.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionRisk.PositionLimit">
            <summary>
            Position limit
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPositionTier">
            <summary>
            Position tier
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionTier.Level">
            <summary>
            Tier
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionTier.StartUnit">
            <summary>
            Start value
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionTier.EndUnit">
            <summary>
            End value
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionTier.Leverage">
            <summary>
            Leverage multiple
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionTier.KeepMarginRate">
            <summary>
            Margin Rate, The value corresponding to the position, when the margin rate of the position is less than the maintenance margin rate, forced decreased or liquidation will be triggered
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPositionUpdate">
            <summary>
            Position update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.SymbolId">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.HoldSide">
            <summary>
            Hold side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.Margin">
            <summary>
            Margin quantity (margin currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.AutoMargin">
            <summary>
            Auto suppliment margin
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.Available">
            <summary>
            Position available (Quote currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.Locked">
            <summary>
            Position locked (Quote currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.Total">
            <summary>
            Total position (available + locked)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.ProfitAndLoss">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.AverageOpenPrice">
            <summary>
            Average opening price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.UnrealizedProfitAndLoss">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.UnrealizedProfitAndLossRatio">
            <summary>
            Unrealized profit and loss ratio
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.LiquidationPrice">
            <summary>
            Estimated liquidation price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.KeepMarginRate">
            <summary>
            Keep margin rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.FixedMarginRate">
            <summary>
            Fixed margin rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetResult">
            <summary>
            Result
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetResult.Success">
            <summary>
            Is successful
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetSymbol">
            <summary>
            Symbol info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.Id">
            <summary>
            Symbol id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.MinOrderQuantity">
            <summary>
            Min order quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.MaxOrderQuantity">
            <summary>
            Max order quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.TakerFeeRate">
            <summary>
            Taker fee rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.MakerFeeRate">
            <summary>
            Maker fee rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.PriceDecimals">
            <summary>
            Price decimals
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.QuantityDecimals">
            <summary>
            Quantity decimals
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.MinOrderValueUsd">
            <summary>
            Min value of the order in USDT
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.Status">
            <summary>
            Symbol status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.BuyLimitPriceRatio">
            <summary>
            Buy price gap from market price, "0.05" means: 5%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.SellLimitPriceRatio">
            <summary>
            Sell price gap from market price, "0.05" means: 5%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.MaxOrders">
            <summary>
            Max number of orders
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetTicker">
            <summary>
            Ticker info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.HighPrice24h">
            <summary>
            High price in last 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.LowPrice24h">
            <summary>
            Low price in last 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.UsdtVolume">
            <summary>
            Usdt volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.BestAskPrice">
            <summary>
            Best sell price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.BestAskQuantity">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.OpenPriceUtc0">
            <summary>
            Open price at UTC 0
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.ChangePercentageUtc0">
            <summary>
            Change percentage since UTC 0, 0.01 means 1%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.ChangePercentage">
            <summary>
            Change percentage, 0.01 means 1%
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetTickerUpdate">
            <summary>
            Ticker update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.LastPrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.OpenPrice24h">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.OpenPriceUtc0">
            <summary>
            Open price at UTC 0
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.HighPrice24h">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.LowPrice24h">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.LabelId">
            <summary>
            Label id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.ChangePercentageUtc0">
            <summary>
            Change rate since openUtc, that is: (last - openUtc) / openUtc, scale e-5
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTrade.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTrade.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetTradeUpdate">
            <summary>
            Trade update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTradeUpdate.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTradeUpdate.Quantity">
            <summary>
            Trade quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTradeUpdate.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTradeUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetTransfer">
            <summary>
            Transfer info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.Asset">
            <summary>
            Asset transfered
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.ToType">
            <summary>
            To type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.ToSymbol">
            <summary>
            To symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.FromType">
            <summary>
            From type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.FromSymbol">
            <summary>
            From symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.TransferId">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetTransferResult">
            <summary>
            Transfer result
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransferResult.TransferId">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransferResult.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetUserFee">
            <summary>
            User fee info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserFee.MakerRate">
            <summary>
            Maker fee rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserFee.TakerRate">
            <summary>
            Taker fee rate
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetUserLeverage">
            <summary>
            User leverage info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserLeverage.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserLeverage.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserLeverage.LongLeverage">
            <summary>
            Long leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserLeverage.ShortLeverage">
            <summary>
            Short leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserLeverage.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetUserTrade">
            <summary>
            User trade info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.Symbol">
            <summary>
            Symbol id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.Quantity">
            <summary>
            Filled quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.Value">
            <summary>
            Filled value
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.Fee">
            <summary>
            Fee paid
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetWithdrawal">
            <summary>
            Withdrawal info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Status">
            <summary>
            Withdrawal status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.ToAddress">
            <summary>
            To address
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Confirm">
            <summary>
            Confirmations
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetWithdrawResult">
            <summary>
            Withdraw result
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawResult.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawResult.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetAccountInfo">
            <summary>
            Account information
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAccountInfo.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAccountInfo.InviterId">
            <summary>
            User id of the user who invited
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAccountInfo.IpWhitelist">
            <summary>
            IP whitelist
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAccountInfo.Permissions">
            <summary>
            Premissions list
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAccountInfo.ParentId">
            <summary>
            Main account id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAccountInfo.TraderType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAccountInfo.ReferralCode">
            <summary>
            Affiliate referral code
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAccountInfo.Affiliate">
            <summary>
            Affiliate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAccountInfo.RegistrationTime">
            <summary>
            Registration time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetAsset">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAsset.AssetId">
            <summary>
            Asset id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAsset.Name">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAsset.Transferable">
            <summary>
            Is the asset transferable
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAsset.Networks">
            <summary>
            Supported networks
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetAssetNetwork">
            <summary>
            Network info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetNetwork.Network">
            <summary>
            Network name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetNetwork.NeedsTag">
            <summary>
            Whether a tag is needed for withdrawals
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetNetwork.Withdrawable">
            <summary>
            Whether the asset is withdrawable
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetNetwork.Depositable">
            <summary>
            Whether the asset is depositable
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetNetwork.WithdrawFee">
            <summary>
            Withdrawal fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetNetwork.ExtraWithdrawFee">
            <summary>
            Extra withdrawal fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetNetwork.DepositConfirm">
            <summary>
            Deposit confirmations needed
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetNetwork.WithdrawConfirm">
            <summary>
            Withdrawal confirmations
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetNetwork.MinDepositQuantity">
            <summary>
            Minimal deposit quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetNetwork.MinWithdrawQuantity">
            <summary>
            Minimal withdrawal quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetNetwork.BrowserUrl">
            <summary>
            Browser url
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetNetwork.ContractAddress">
            <summary>
            Contract address
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetNetwork.WithdrawQuantityStep">
            <summary>
            If not null, withdrawal quantities should be a multiple of this
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetNetwork.WithdrawQuantityPrecision">
            <summary>
            Decimal places of withdrawal quantity
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetAssetValue">
            <summary>
            Asset valudation
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetValue.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetAssetValue.UsdtBalance">
            <summary>
            Usdt value
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetBalance">
            <summary>
            Balance info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetBalance.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetBalance.Available">
            <summary>
            Available quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetBalance.Frozen">
            <summary>
            Frozen quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetBalance.UsdtValue">
            <summary>
            Usdt value
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetBalanceUpdate">
            <summary>
            Balance update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetBalanceUpdate.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetBalanceUpdate.Available">
            <summary>
            Available quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetBalanceUpdate.Frozen">
            <summary>
            Frozen quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetBalanceUpdate.Locked">
            <summary>
            Frozen quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetBalanceUpdate.LimitAvailable">
            <summary>
            Limit available
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetBalanceUpdate.UsdtValue">
            <summary>
            Usdt value
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetBalanceUpdate.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetBgbDeduct">
            <summary>
            BGB deduct status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetBgbDeduct.Enabled">
            <summary>
            Deduct enabled
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetContract">
            <summary>
            Contract info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.BuyLimitPriceRatio">
            <summary>
            Max percentage spread between buy limit price and current price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.SellLimitPriceRatio">
            <summary>
            Max percentage spread between sell limit price and current price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.FeeRateUpRatio">
            <summary>
            Transaction fee increase ratio
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.MakerFeeRate">
            <summary>
            Maker fee rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.TakerFeeRate">
            <summary>
            Taker fee rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.OpenCostUpRatio">
            <summary>
            Opening cost increase ratio
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.SupportMarginAsset">
            <summary>
            Supported margin assets
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.MinOrderQuantity">
            <summary>
            Minimal position open quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.PriceStep">
            <summary>
            Price step
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.QuantityDecimals">
            <summary>
            Quantity decimal places
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.PriceDecimals">
            <summary>
            Price decimal places
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.QuantityStep">
            <summary>
            Quantity step
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.MinTradeValue">
            <summary>
            Minimal trade value in USDT
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.MaxSymbolOpenOrders">
            <summary>
            Max open orders on symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.MaxProductOpenOrders">
            <summary>
            Max open orders on product
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.MaxPositions">
            <summary>
            Max number of positions
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.OfflineTime">
            <summary>
            Removal time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.LimitOpenTime">
            <summary>
            Planned order restriction time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.DeliveryTime">
            <summary>
            Delivery time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.DeliveryStartTime">
            <summary>
            Delivery start time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.DeliveryPeriod">
            <summary>
            Delivery period
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.LaunchTime">
            <summary>
            Listing time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.FundingInterval">
            <summary>
            Funding interval
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.MinLeverage">
            <summary>
            Minimal leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.MaxLeverage">
            <summary>
            Maximal leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.PosLimit">
            <summary>
            Position limit
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetContract.MaintenanceTime">
            <summary>
            Planned maintenance time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetDepositAddress">
            <summary>
            Deposit address
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositAddress.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositAddress.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositAddress.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositAddress.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositAddress.Url">
            <summary>
            Deposit address url
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetDepositRecord">
            <summary>
            Deposit record
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositRecord.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositRecord.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositRecord.Destination">
            <summary>
            Destination
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositRecord.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositRecord.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositRecord.ToAddress">
            <summary>
            Target address
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositRecord.FromAddress">
            <summary>
            From address
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositRecord.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositRecord.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetDepositRecord.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFundingRate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFundingRate.FundingRate">
            <summary>
            Current funding rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFundingRate.FundingTime">
            <summary>
            Funding time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFundingTime">
            <summary>
            Funding time info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFundingTime.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFundingTime.NextFundingTime">
            <summary>
            Next funding time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFundingTime.RatePeriod">
            <summary>
            Rate settlement cycle in hours
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance">
            <summary>
            Futures balance
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.Locked">
            <summary>
            Quantity locked
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.Available">
            <summary>
            Quantity available
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.CrossMarginMaxAvailable">
            <summary>
            Maximum available balance to open positions under the cross margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.IsolatedMarginMaxAvailable">
            <summary>
            Maximum available balance to open positions under the isolated margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.MaxTransferable">
            <summary>
            Max transferable quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.Equity">
            <summary>
            Account equity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.UsdtEquity">
            <summary>
            Usdt equity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.BtcEquity">
            <summary>
            BTC equity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.CrossMarginRiskRate">
            <summary>
            Risk ratio in cross margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.UnrealizedProfitAndLoss">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.CrossMarginUnrealizedProfitAndLoss">
            <summary>
            Unrealized profit and loss cross margin
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.IosaltedMarginProfitAndLoss">
            <summary>
            Unrealized profit and loss isolated margin
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.Coupon">
            <summary>
            Trading bonus
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.CrossMarginLeverage">
            <summary>
            Cross margin leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.IsolatedMarginLongLeverage">
            <summary>
            Isolated margin long leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.IsolatedMarginShortLeverage">
            <summary>
            Isolated margin short leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalance.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesBalanceUpdate">
            <summary>
            Futures balance
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalanceUpdate.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalanceUpdate.Frozen">
            <summary>
            Quantity locked
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalanceUpdate.Available">
            <summary>
            Quantity available
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalanceUpdate.MaxOpenPosAvailable">
            <summary>
            Maximum available balance to open positions
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalanceUpdate.MaxTransferable">
            <summary>
            Max transferable quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalanceUpdate.Equity">
            <summary>
            Account equity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesBalanceUpdate.UsdtEquity">
            <summary>
            Usdt equity
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesKline">
            <summary>
            Kline/candlestick info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesKline.OpenTime">
            <summary>
            Open time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesKline.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesKline.HighPrice">
            <summary>
            Highest price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesKline.LowPrice">
            <summary>
            Lowest price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesKline.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesKline.Volume">
            <summary>
            Volume in base asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesKline.QuoteVolume">
            <summary>
            Volume in quote asset
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesKlineUpdate">
            <summary>
            Kline/candlestick info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesKlineUpdate.OpenTime">
            <summary>
            Open time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesKlineUpdate.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesKlineUpdate.HighPrice">
            <summary>
            Highest price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesKlineUpdate.LowPrice">
            <summary>
            Lowest price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesKlineUpdate.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesKlineUpdate.Volume">
            <summary>
            Volume in base asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesKlineUpdate.QuoteVolume">
            <summary>
            Volume in quote asset
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesLedger">
            <summary>
            Ledger
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesLedger.EndId">
            <summary>
            The final transaction order ID.
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesLedger.Entries">
            <summary>
            Entries
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesLedgerEntry">
            <summary>
            Ledger entry
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesLedgerEntry.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesLedgerEntry.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesLedgerEntry.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesLedgerEntry.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesLedgerEntry.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesLedgerEntry.Fees">
            <summary>
            Fees
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesLedgerEntry.CouponFees">
            <summary>
            Fees paid with coupon
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesLedgerEntry.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesLedgerEntry.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesOrders">
            <summary>
            Futures orders
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrders.EndId">
            <summary>
            End id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrders.Orders">
            <summary>
            Order list
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder">
            <summary>
            Future order info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.AveragePrice">
            <summary>
            Average fill price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.Fee">
            <summary>
            Fee paid
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.TotalProfitAndLoss">
            <summary>
            Total profit and loss
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.TakeProfitPrice">
            <summary>
            Take profit price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.StopLossPrice">
            <summary>
            Stop loss price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.QuoteQuantityFilled">
            <summary>
            Quote quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.EnterPointSource">
            <summary>
            Entry point
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.Source">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrder.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderBook">
            <summary>
            Order book info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderBook.Asks">
            <summary>
            Asks
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderBook.Bids">
            <summary>
            Bids
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderBook.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderBook.Scale">
            <summary>
            Scale
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderBook.Precision">
            <summary>
            Precision
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderBook.IsMaxPrecision">
            <summary>
            Is max precision
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate">
            <summary>
            Futures order update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.LastTradeId">
            <summary>
            Last trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.LastTradeQuantity">
            <summary>
            Quantity filled of last trade
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.LastTradeRole">
            <summary>
            Role
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.AveragePrice">
            <summary>
            Average fill price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.TakeProfitPrice">
            <summary>
            Take profit price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.StopLossPrice">
            <summary>
            Stop loss price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.QuoteQuantityFilled">
            <summary>
            Estimated USD value of orders
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.ProfitAndLoss">
            <summary>
            Profit and loss
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.EnterPointSource">
            <summary>
            Entry point
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.QuantityFilled">
            <summary>
            Total filled quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.LastTradeFee">
            <summary>
            Last trade fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.LastTradeFeeAsset">
            <summary>
            Last trade fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.LastTradeUsdValue">
            <summary>
            Last trade usd value
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.LastTradeFillPrice">
            <summary>
            Last trade fill price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.LastTradeFillTime">
            <summary>
            Last trade fill time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesOrderUpdate.Fees">
            <summary>
            Total filled quantity
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesPlaceOrderRequest">
            <summary>
            Order request
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesPlaceOrderRequest.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesPlaceOrderRequest.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesPlaceOrderRequest.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesPlaceOrderRequest.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesPlaceOrderRequest.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesPlaceOrderRequest.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesPlaceOrderRequest.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesPlaceOrderRequest.ReduceOnly">
            <summary>
            Reduce only, YES or NO
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesPlaceOrderRequest.TakeProfitPrice">
            <summary>
            Take profit price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesPlaceOrderRequest.StopLossPrice">
            <summary>
            Stop loss price
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesPrices">
            <summary>
            Futures prices
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesPrices.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesPrices.Price">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesPrices.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesPrices.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesPrices.Timestamp">
            <summary>
            Data timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker">
            <summary>
            Ticker info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.OpenPrice">
            <summary>
            Open price 24h ago
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.HighPrice">
            <summary>
            Highest price in 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.LowPrice">
            <summary>
            Lowest price in 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.LastPrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.QuoteVolume">
            <summary>
            Volume in quote asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.Volume">
            <summary>
            Volume in base asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.UsdtVolume">
            <summary>
            Volume in USDT
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.OpenPriceUtc">
            <summary>
            Price at last UTC+0
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.Timestamp">
            <summary>
            Data timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.ChangePercentageUtc">
            <summary>
            Price change compared to UTC+0. Returned as factor, 0.01 means 1%.
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.ChangePercentage24H">
            <summary>
            Price change compared to 24h ago. Returned as factor, 0.01 means 1%.
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.HoldingPositions">
            <summary>
            Holding positions
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.DeliveryStartTime">
            <summary>
            Delivery start timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.DeliveryTime">
            <summary>
            Delivery timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTicker.DeliveryStatus">
            <summary>
            Delivery status
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate">
            <summary>
            Ticker info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.OpenPrice">
            <summary>
            Open price 24h ago
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.HighPrice">
            <summary>
            Highest price in 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.LowPrice">
            <summary>
            Lowest price in 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.LastPrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.QuoteVolume">
            <summary>
            Volume in quote asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.Volume">
            <summary>
            Volume in base asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.OpenPriceUtc">
            <summary>
            Price at last UTC+0
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.Timestamp">
            <summary>
            Data timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.NextFundingTime">
            <summary>
            Next funding time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.ChangePercentage24H">
            <summary>
            Price change compared to 24h ago. Returned as factor, 0.01 means 1%.
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.HoldingPositions">
            <summary>
            Holding positions
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.DeliveryPrice">
            <summary>
            Delivery price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTickerUpdate.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrders">
            <summary>
            Futures orders
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrders.EndId">
            <summary>
            End id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrders.Orders">
            <summary>
            Order list
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder">
            <summary>
            Future order info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.PlanType">
            <summary>
            Plan type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.ExecutedOrderId">
            <summary>
            Executed order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.AveragePrice">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.TriggerType">
            <summary>
            Trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.Status">
            <summary>
            Trigger order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.CallbackRatio">
            <summary>
            Callback ratio
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.EnterPointSource">
            <summary>
            Entry point
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.Source">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.TakeProfitPrice">
            <summary>
            Take profit price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.TakeProfitTriggerPrice">
            <summary>
            Take profit trigger price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.TakeProfitTriggerType">
            <summary>
            Take profit trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.StopLossPrice">
            <summary>
            Stop loss price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.StopLossTriggerPrice">
            <summary>
            Stop loss trigger price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrder.StopLossTriggerType">
            <summary>
            Stop loss trigger type
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate">
            <summary>
            Future trigger order update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.PlanType">
            <summary>
            Plan type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.ActualQuantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.TriggerType">
            <summary>
            Trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.TriggerTime">
            <summary>
            Trigger time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.Status">
            <summary>
            Trigger order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.EnterPointSource">
            <summary>
            Entry point
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.TakeProfitPrice">
            <summary>
            Take profit price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.TakeProfitTriggerPrice">
            <summary>
            Take profit trigger price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.TakeProfitTriggerType">
            <summary>
            Take profit trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.StopLossPrice">
            <summary>
            Stop loss price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.StopLossTriggerPrice">
            <summary>
            Stop loss trigger price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesTriggerOrderUpdate.StopLossTriggerType">
            <summary>
            Stop loss trigger type
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrades">
            <summary>
            Futures user trades
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrades.EndId">
            <summary>
            End id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrades.Trades">
            <summary>
            Trades
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrade.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrade.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrade.QuoteQuantity">
            <summary>
            Quote quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrade.Profit">
            <summary>
            Profit
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrade.EntryPointSource">
            <summary>
            Entry point source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrade.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrade.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrade.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrade.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTrade.Fees">
            <summary>
            Fees
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate">
            <summary>
            User trade update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate.QuoteQuantity">
            <summary>
            Quote quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate.Profit">
            <summary>
            Profit
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetFuturesUserTradeUpdate.Fees">
            <summary>
            Fees
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetKline">
            <summary>
            Kline/candlestick info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKline.OpenTime">
            <summary>
            Open time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKline.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKline.HighPrice">
            <summary>
            Highest price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKline.LowPrice">
            <summary>
            Lowest price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKline.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKline.Volume">
            <summary>
            Volume in base asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKline.QuoteVolume">
            <summary>
            Volume in quote asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKline.UsdtVolume">
            <summary>
            Volume in USDT
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetKlineUpdate">
            <summary>
            Kline update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKlineUpdate.OpenTime">
            <summary>
            Open time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKlineUpdate.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKlineUpdate.HighPrice">
            <summary>
            Highest price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKlineUpdate.LowPrice">
            <summary>
            Lowest price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKlineUpdate.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKlineUpdate.Volume">
            <summary>
            Volume in base asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKlineUpdate.QuoteVolume">
            <summary>
            Volume in quote asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetKlineUpdate.UsdtVolume">
            <summary>
            Volume in USDT
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetOpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOpenInterest.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOpenInterest.Quantity">
            <summary>
            Open interest quantity
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetOrder">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.BasePrice">
            <summary>
            Base price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.TpslType">
            <summary>
            Take profit / stop loss type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.AveragePrice">
            <summary>
            Average fill price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.QuantityFilled">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.QuoteQuantityFilled">
            <summary>
            Quote quantity volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.EnterPointSource">
            <summary>
            Entry point
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrder.Fees">
            <summary>
            Fee info
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetOrderFees">
            <summary>
            Order fees
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderFees.NewFees">
            <summary>
            New fee info
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetOrderNewFees">
            <summary>
            Order fee info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderNewFees.CouponDeduction">
            <summary>
            Amount deducted by coupons, unit：currency obtained from the transaction.
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderNewFees.BgbDeduction">
            <summary>
            Amount deducted in BGB (Bitget Coin), unit：BGB
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderNewFees.RemainingFeeDeduction">
            <summary>
            If the BGB balance is insufficient to cover the fees, the remaining amount is deducted from the currency obtained from the transaction.
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderNewFees.TotalFee">
            <summary>
            The total fee amount to be paid
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetOrderBook">
            <summary>
            Order book info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderBook.Asks">
            <summary>
            Asks
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderBook.Bids">
            <summary>
            Bids
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderBook.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetOrderBookEntry">
            <summary>
            Order book entry
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderBookEntry.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderBookEntry.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetOrderBookUpdate">
            <summary>
            Order book update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderBookUpdate.Asks">
            <summary>
            Asks
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderBookUpdate.Bids">
            <summary>
            Bids
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderBookUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderBookUpdate.Checksum">
            <summary>
            Checksum
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetOrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderId.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderId.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetOrderList">
            <summary>
            Order list
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderList.NextFlag">
            <summary>
            Next flag
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderList.IdLessThan">
            <summary>
            Id for pagination
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderList.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetOrderMultipleResult">
            <summary>
            Multiple orders result
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderMultipleResult.Success">
            <summary>
            Successful orders
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderMultipleResult.Failed">
            <summary>
            Failed orders
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetPlaceFailure">
            <summary>
            Place order failure info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPlaceFailure.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPlaceFailure.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPlaceFailure.ErrorMessage">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPlaceFailure.ErrorCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate">
            <summary>
            Order update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.Quantity">
            <summary>
            Order amount. When Side = Buy, it represents the amount of quote asset; When Side = Sell, it represents the amount of base asset.
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.OrderQuantity">
            <summary>
            Order quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.Notional">
            <summary>
            Buy value for market order
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.LastTradePrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.BaseVolume">
            <summary>
            Number of latest filled orders
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.LastTradeTime">
            <summary>
            Last trade time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.LastTradeFee">
            <summary>
            Last trade fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.LastTradeRole">
            <summary>
            Last trade role
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.QuantityFilled">
            <summary>
            Total quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.AveragePrice">
            <summary>
            Average trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.EnterPointSource">
            <summary>
            Entry point
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.Fees">
            <summary>
            Fees
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdate.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetOrderUpdateFee">
            <summary>
            Trade fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdateFee.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetOrderUpdateFee.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetPlaceOrderRequest">
            <summary>
            Order request
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPlaceOrderRequest.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPlaceOrderRequest.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPlaceOrderRequest.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPlaceOrderRequest.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPlaceOrderRequest.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPlaceOrderRequest.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetPosition">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.QuantityOpen">
            <summary>
            Quantity open for order
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.MarginQuantity">
            <summary>
            Margin quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.Available">
            <summary>
            Available quantity for positions
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.Locked">
            <summary>
            Frozen quantity in the position
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.Total">
            <summary>
            Total quantity of all positions
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.RealizedProfitAndLoss">
            <summary>
            Realized pnl
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.AverageOpenPrice">
            <summary>
            Average open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.UnrealizedProfitAndLoss">
            <summary>
            Unrealized pnl
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.MaintenanceMarginRate">
            <summary>
            Maintenance margin rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.BreakEvenPrice">
            <summary>
            Break even price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.TotalFee">
            <summary>
            Funding fee, the accumulated value of funding fee during the position
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.DeductedFee">
            <summary>
            Deducted transaction fees: transaction fees deducted during the position
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.MarginRatio">
            <summary>
            Margin ratio
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPosition.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetPositionHistory">
            <summary>
            Position history
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistory.EndId">
            <summary>
            End id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistory.Entries">
            <summary>
            Entries
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry">
            <summary>
            Position history entry
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.Side">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.AverageOpenPrice">
            <summary>
            Average open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.AverageClosePrice">
            <summary>
            Average close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.OpenTotalPosition">
            <summary>
            Total long positions
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.CloseTotalPosition">
            <summary>
            Total short positions
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.ProfitAndLoss">
            <summary>
            Profit and loss
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.NetProfit">
            <summary>
            Net profit
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.TotalFunding">
            <summary>
            Total funding costs
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.OpenFee">
            <summary>
            Open fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.CloseFee">
            <summary>
            Close fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryEntry.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate">
            <summary>
            Position history entry
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.Side">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.AverageOpenPrice">
            <summary>
            Average open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.AverageClosePrice">
            <summary>
            Average close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.OpenQuantity">
            <summary>
            Open quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.CloseQuantity">
            <summary>
            Close quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.ProfitAndLoss">
            <summary>
            Profit and loss
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.SettleFee">
            <summary>
            Settle fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.OpenFee">
            <summary>
            Open fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.CloseFee">
            <summary>
            Close fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionHistoryUpdate.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetPositionLeverage">
            <summary>
            Position leverage info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionLeverage.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionLeverage.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionLeverage.LongLeverage">
            <summary>
            Long position leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionLeverage.ShortLeverage">
            <summary>
            Short position leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionLeverage.CrossMarginLeverage">
            <summary>
            Cross margin position leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionLeverage.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetPositionMode">
            <summary>
            Position mode info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionMode.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetPositionTier">
            <summary>
            Position tier
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionTier.Symbol">
            <summary>
            Symbol 
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionTier.Level">
            <summary>
            Level 
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionTier.StartUnit">
            <summary>
            Start  unit
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionTier.EndUnit">
            <summary>
            End unit 
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionTier.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionTier.MaintenanceMarginRate">
            <summary>
            Maintenance margin rate
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate">
            <summary>
            Position update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.MarginQuantity">
            <summary>
            Margin quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.Available">
            <summary>
            Available quantity for positions
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.Frozen">
            <summary>
            Frozen quantity in the position
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.Total">
            <summary>
            Total quantity of all positions
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.RealizedProfitAndLoss">
            <summary>
            Realized pnl
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.AverageOpenPrice">
            <summary>
            Average open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.UnrealizedProfitAndLoss">
            <summary>
            Unrealized pnl
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.UnrealizedRoi">
            <summary>
            Unrealized ROI
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.MaintenanceMarginRate">
            <summary>
            Maintenance margin rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.MarginRate">
            <summary>
            Margin rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.BreakEvenPrice">
            <summary>
            Break even price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.TotalFee">
            <summary>
            Funding fee, the accumulated value of funding fee during the position
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.DeductedFee">
            <summary>
            Deducted transaction fees: transaction fees deducted during the position
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.MarginRatio">
            <summary>
            Margin ratio
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetPositionUpdate.AutoMargin">
            <summary>
            Auto margin
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetSpotBalance">
            <summary>
            Spot balance
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSpotBalance.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSpotBalance.Available">
            <summary>
            Available quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSpotBalance.Frozen">
            <summary>
            Frozen quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSpotBalance.Locked">
            <summary>
            Locked quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSpotBalance.RetrictedAvailable">
            <summary>
            Restricted availability, for spot copy trading
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSpotBalance.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetSpotLedgerEntry">
            <summary>
            Ledger entry
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSpotLedgerEntry.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSpotLedgerEntry.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSpotLedgerEntry.GroupType">
            <summary>
            Group type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSpotLedgerEntry.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSpotLedgerEntry.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSpotLedgerEntry.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSpotLedgerEntry.Fees">
            <summary>
            Fees
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSpotLedgerEntry.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetSymbol">
            <summary>
            Symbol info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSymbol.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSymbol.MinOrderQuantity">
            <summary>
            Minimal order quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSymbol.MaxOrderQuantity">
            <summary>
            Maximal order quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSymbol.TakerFeeRate">
            <summary>
            Taker fee rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSymbol.MakerFeeRate">
            <summary>
            Maker fee rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSymbol.PricePrecision">
            <summary>
            The number of decimals used for price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSymbol.QuantityPrecision">
            <summary>
            The number of decimals used for quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSymbol.QuoteQuantityPrecision">
            <summary>
            The number of decimals used for quote quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSymbol.MinOrderValue">
            <summary>
            Minimal order value in USDT
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSymbol.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSymbol.BuyLimitPriceRatio">
            <summary>
            Max percentage spread between buy limit price and current price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetSymbol.SellLimitPriceRatio">
            <summary>
            Max percentage spread between sell limit price and current price
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetTicker">
            <summary>
            Ticker info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.HighPrice">
            <summary>
            Highest price in 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.OpenPrice">
            <summary>
            Open price 24h ago
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.LowPrice">
            <summary>
            Lowest price in 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.LastPrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.QuoteVolume">
            <summary>
            Volume in quote asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.Volume">
            <summary>
            Volume in base asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.UsdtVolume">
            <summary>
            Volume in USDT
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.OpenPriceUtc">
            <summary>
            Price at last UTC+0
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.Timestamp">
            <summary>
            Data timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.ChangePercentageUtc">
            <summary>
            Price change compared to UTC+0. Returned as factor, 0.01 means 1%.
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTicker.ChangePercentage24H">
            <summary>
            Price change compared to 24h ago. Returned as factor, 0.01 means 1%.
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate">
            <summary>
            Ticker update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate.LastPrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate.OpenPrice24h">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate.OpenPriceUtc0">
            <summary>
            Open price at UTC 0
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate.HighPrice24h">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate.LowPrice24h">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate.ChangePercentage">
            <summary>
            Change rate since 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTickerUpdate.ChangePercentageUtc0">
            <summary>
            Change rate since openUtc, that is: (last - openUtc) / openUtc, scale e-5
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTrade.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTrade.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTrade.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTrade.Quantity">
            <summary>
            Trade quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTrade.Timestamp">
            <summary>
            Trade time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetTradeUpdate">
            <summary>
            Trade update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTradeUpdate.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTradeUpdate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTradeUpdate.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTradeUpdate.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTradeUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetTransferRecord">
            <summary>
            Transfer record
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTransferRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTransferRecord.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTransferRecord.ToAccount">
            <summary>
            To account
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTransferRecord.FromAccount">
            <summary>
            From account
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTransferRecord.ToSymbol">
            <summary>
            To symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTransferRecord.FromSymbol">
            <summary>
            From symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTransferRecord.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTransferRecord.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTransferRecord.TransferId">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTransferRecord.Timestamp">
            <summary>
            Transfer time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetTransferResult">
            <summary>
            Transfer result
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTransferResult.TransferId">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTransferResult.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetTriggerOrder">
            <summary>
            Trigger order info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrder.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrder.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrder.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrder.QuantityType">
            <summary>
            Quantity type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrder.TriggerPriceType">
            <summary>
            Trigger price type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrder.Status">
            <summary>
            Trigger order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrder.EnterPointSource">
            <summary>
            Entry point
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrder.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate">
            <summary>
            Trigger order update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.ActualQuantity">
            <summary>
            Actual quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.QuantityType">
            <summary>
            Quantity type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.TriggerPriceType">
            <summary>
            Trigger price type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.Status">
            <summary>
            Trigger order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.EnterPointSource">
            <summary>
            Entry point
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerOrderUpdate.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetTriggerSubOrder">
            <summary>
            Trigger sub order
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerSubOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerSubOrder.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerSubOrder.Type">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTriggerSubOrder.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetUserFee">
            <summary>
            User fee info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserFee.MakerRate">
            <summary>
            Maker fee rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserFee.TakerRate">
            <summary>
            Taker fee rate
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetUserTrade">
            <summary>
            User trade info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTrade.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTrade.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTrade.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTrade.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTrade.QuoteQuantity">
            <summary>
            Quote quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTrade.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTrade.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTrade.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTrade.Fees">
            <summary>
            Fees
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetTradeFee">
            <summary>
            Trade fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTradeFee.Deduction">
            <summary>
            Deduction
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTradeFee.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTradeFee.TotalDeductionFee">
            <summary>
            Total deduction fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetTradeFee.TotalFee">
            <summary>
            Total fee
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetUserTradeUpdate">
            <summary>
            User trade update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeUpdate.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeUpdate.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeUpdate.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeUpdate.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeUpdate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeUpdate.QuoteQuantity">
            <summary>
            Quote quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeUpdate.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeUpdate.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeUpdate.Fees">
            <summary>
            Fees
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetUserTradeFee">
            <summary>
            Trade fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeFee.Deduction">
            <summary>
            Deduction
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeFee.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeFee.TotalDeductionFee">
            <summary>
            Total deduction fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetUserTradeFee.TotalFee">
            <summary>
            Total fee
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetVipFeeRate">
            <summary>
            VIP fee rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetVipFeeRate.Level">
            <summary>
            VIP level
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetVipFeeRate.TradingVolume">
            <summary>
            Trading volume for reaching this level
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetVipFeeRate.AssetValue">
            <summary>
            Asset value for reaching this level
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetVipFeeRate.TakerFeeRate">
            <summary>
            Taker fee rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetVipFeeRate.MakerFeeRate">
            <summary>
            Maker fee rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetVipFeeRate.BtcWithdrawQuantity">
            <summary>
            BTC max withdrawal quantity per 24 hours
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetVipFeeRate.UsdtWithdrawQuantity">
            <summary>
            USDT max withdrawal quantity per 24 hours
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord">
            <summary>
            Withdrawal record
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord.Destination">
            <summary>
            Destination
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord.ToAddress">
            <summary>
            Target address
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord.FromAddress">
            <summary>
            From address
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord.Confirmations">
            <summary>
            Number of confirmed blocks
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawalRecord.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.V2.BitgetWithdrawResult">
            <summary>
            Withdraw result
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawResult.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.V2.BitgetWithdrawResult.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Options.BitgetOrderBookOptions">
            <summary>
            Order book options
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetOrderBookOptions.Default">
            <summary>
            Default options for new order books
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetOrderBookOptions.Limit">
            <summary>
            The limit of entries in the order book, either 5, 15 or null
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Options.BitgetRestOptions">
            <summary>
            Bitget rest client options
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetRestOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetRestOptions.ChannelCode">
            <summary>
            Channel code
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetRestOptions.SpotOptions">
            <summary>
            Spot API options
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetRestOptions.FuturesOptions">
            <summary>
            Futures API options
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Options.BitgetSocketOptions">
            <summary>
            Bitget socket client options
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetSocketOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetSocketOptions.SpotOptions">
            <summary>
            Spot API options
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetSocketOptions.FuturesOptions">
            <summary>
            Futures API options
            </summary>
        </member>
        <member name="T:Bitget.Net.SymbolOrderBooks.BitgetFuturesSymbolOrderBook">
            <summary>
            Live order book implementation
            </summary>
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetFuturesSymbolOrderBook.#ctor(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="productType">The product type</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetFuturesSymbolOrderBook.#ctor(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions},Microsoft.Extensions.Logging.ILoggerFactory,Bitget.Net.Interfaces.Clients.IBitgetSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="productType">The product type</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetFuturesSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetFuturesSymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetFuturesSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetFuturesSymbolOrderBook.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:Bitget.Net.SymbolOrderBooks.BitgetOrderBookFactory">
            <summary>
            Bitget order book factory
            </summary>
        </member>
        <member name="P:Bitget.Net.SymbolOrderBooks.BitgetOrderBookFactory.Spot">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.SymbolOrderBooks.BitgetOrderBookFactory.UsdtFutures">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.SymbolOrderBooks.BitgetOrderBookFactory.UsdcFutures">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.SymbolOrderBooks.BitgetOrderBookFactory.CoinFutures">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetOrderBookFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetOrderBookFactory.CreateSpot(System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetOrderBookFactory.CreateFutures(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.SymbolOrderBooks.BitgetSpotSymbolOrderBook">
            <summary>
            Live order book implementation
            </summary>
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetSpotSymbolOrderBook.#ctor(System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetSpotSymbolOrderBook.#ctor(System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions},Microsoft.Extensions.Logging.ILoggerFactory,Bitget.Net.Interfaces.Clients.IBitgetSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetSpotSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetSpotSymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetSpotSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetSpotSymbolOrderBook.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:CryptoExchange.Net.Interfaces.CryptoClientExtensions">
            <summary>
            Extensions for the ICryptoRestClient and ICryptoSocketClient interfaces
            </summary>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.Bitget(CryptoExchange.Net.Interfaces.ICryptoRestClient)">
            <summary>
            Get the Bitget REST Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.Bitget(CryptoExchange.Net.Interfaces.ICryptoSocketClient)">
            <summary>
            Get the Bitget Websocket Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Extensions for DI
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddBitget(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Bitget.Net.Objects.Options.BitgetRestOptions},System.Action{Bitget.Net.Objects.Options.BitgetSocketOptions},System.Nullable{Microsoft.Extensions.DependencyInjection.ServiceLifetime})">
            <summary>
            Add the IBitgetClient and IBitgetSocketClient to the sevice collection so they can be injected
            </summary>
            <param name="services">The service collection</param>
            <param name="defaultRestOptionsDelegate">Set default options for the rest client</param>
            <param name="defaultSocketOptionsDelegate">Set default options for the socket client</param>
            <param name="socketClientLifeTime">The lifetime of the IBitgetSocketClient for the service collection. Defaults to Singleton.</param>
            <returns></returns>
        </member>
    </members>
</doc>
