<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bitget.Net</name>
    </assembly>
    <members>
        <member name="T:Bitget.Net.BitgetEnvironment">
            <summary>
            Bitget environment
            </summary>
        </member>
        <member name="P:Bitget.Net.BitgetEnvironment.RestBaseAddress">
            <summary>
            Base rest API address
            </summary>
        </member>
        <member name="P:Bitget.Net.BitgetEnvironment.SocketBaseAddress">
            <summary>
            Base socket API address
            </summary>
        </member>
        <member name="P:Bitget.Net.BitgetEnvironment.Live">
            <summary>
            Live environment
            </summary>
        </member>
        <member name="M:Bitget.Net.BitgetEnvironment.CreateCustom(System.String,System.String,System.String)">
            <summary>
            Create a custom environment
            </summary>
            <param name="name"></param>
            <param name="baseRestAddress"></param>
            <param name="socketRestAddress"></param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Clients.BitgetRestClient">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.BitgetRestClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.BitgetRestClient.FuturesApi">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.BitgetRestClient.#ctor(System.Action{Bitget.Net.Objects.Options.BitgetRestOptions})">
            <summary> 
            Create a new instance of BitgetRestClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitget.Net.Clients.BitgetRestClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory,System.Action{Bitget.Net.Objects.Options.BitgetRestOptions})">
            <summary>
            Create a new instance of BitgetRestClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="loggerFactory">The logger factory</param>
            <param name="httpClient">Http client for this client</param>
        </member>
        <member name="M:Bitget.Net.Clients.BitgetRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.BitgetRestClient.SetDefaultOptions(System.Action{Bitget.Net.Objects.Options.BitgetRestOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsFunc">Option configuration delegate</param>
        </member>
        <member name="T:Bitget.Net.Clients.BitgetSocketClient">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.BitgetSocketClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.BitgetSocketClient.FuturesApi">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.BitgetSocketClient.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of the BitgetSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
        </member>
        <member name="M:Bitget.Net.Clients.BitgetSocketClient.#ctor(System.Action{Bitget.Net.Objects.Options.BitgetSocketOptions})">
            <summary>
            Create a new instance of the BitgetSocketClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitget.Net.Clients.BitgetSocketClient.#ctor(System.Action{Bitget.Net.Objects.Options.BitgetSocketOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of the BitgetSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitget.Net.Clients.BitgetSocketClient.SetDefaultOptions(System.Action{Bitget.Net.Objects.Options.BitgetSocketOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitget.Net.Clients.BitgetSocketClient.SetApiCredentials(Bitget.Net.Objects.BitgetApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.Account">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.Trading">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetAccountAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetAccountsAsync(Bitget.Net.Enums.BitgetProductType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetMaxOpenPositionsAsync(System.String,System.String,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.SetLeverageAsync(System.String,System.String,System.Decimal,System.Nullable{Bitget.Net.Enums.BitgetPositionSide},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.SetMarginAsync(System.String,System.String,System.Decimal,System.Nullable{Bitget.Net.Enums.BitgetPositionSide},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.SetMarginModeAsync(System.String,System.String,Bitget.Net.Enums.BitgetMarginMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.SetAutoMarginAsync(System.String,System.String,Bitget.Net.Enums.BitgetPositionSide,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.SetHoldModeAsync(Bitget.Net.Enums.BitgetProductType,Bitget.Net.Enums.BitgetHoldMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetPositionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetPositionsAsync(Bitget.Net.Enums.BitgetProductType,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetHistoryPositionAsync(System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetProductType},System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetBillsAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.FuturesApi.BitgetRestClientFuturesApiAccount.GetBusinessBillsAsync(Bitget.Net.Enums.BitgetProductType,System.DateTime,System.DateTime,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetSymbolsAsync(Bitget.Net.Enums.BitgetProductType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetMergedOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetTickersAsync(Bitget.Net.Enums.BitgetProductType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetFeeRatesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetTradeHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetHistoricalKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetHistoricalIndexKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetHistoricalMarkKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetIndexPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetNextFundingTimeAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetFundingRateHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetFundingRateAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetOpenInterestAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetMarkPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetLeverageInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetPositionsTiersAsync(Bitget.Net.Enums.BitgetProductType,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiExchangeData.GetPositionRiskLimitAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.PlaceOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetFuturesOrderSide,Bitget.Net.Enums.BitgetOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.BitgetTimeInForce},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.CancelOrderAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.EditOrderAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetOpenOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetOpenOrdersByProductAsync(Bitget.Net.Enums.BitgetProductType,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetOrderHistoryAsync(System.String,System.DateTime,System.DateTime,System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetOrderHistoryAsync(Bitget.Net.Enums.BitgetProductType,System.DateTime,System.DateTime,System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetOrderAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetUserTradesAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetUserTradesAsync(Bitget.Net.Enums.BitgetProductType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.PlacePlanOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetFuturesOrderSide,Bitget.Net.Enums.BitgetOrderType,Bitget.Net.Enums.BitgetTriggerType,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.EditPlanOrderAsync(System.String,System.String,System.Decimal,Bitget.Net.Enums.BitgetTriggerType,Bitget.Net.Enums.BitgetOrderType,System.String,System.String,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.EditPlanOrderTpSlAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.PlaceStopOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.Decimal,Bitget.Net.Enums.BitgetPositionSide,System.Nullable{Bitget.Net.Enums.BitgetTriggerType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.PlaceTrailingStopOrderAsync(System.String,System.String,System.Decimal,Bitget.Net.Enums.BitgetFuturesOrderSide,System.Decimal,System.Decimal,System.Nullable{Bitget.Net.Enums.BitgetTriggerType},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.PlacePositionTpSlAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.Decimal,Bitget.Net.Enums.BitgetTriggerType,Bitget.Net.Enums.BitgetPositionSide,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.EditStopOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.Decimal,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.CancelPlanOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetPlanOrderHistoryAsync(System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetProductType},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientFuturesApiTrading.GetPlanOrdersAsync(System.String,System.Nullable{Bitget.Net.Enums.BitgetProductType},System.Nullable{Bitget.Net.Enums.BitgetPlanFilter},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.String,Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.SubscribeToBalanceUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.SubscribeToPositionUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetPositionUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.SubscribeToOrderUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.SubscribeToPlanOrderUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.GetAuthenticationRequest">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.Account">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CommonSpotClient">
            <inheritdoc />
        </member>
        <member name="P:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="E:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.OnOrderPlaced">
            <inheritdoc />
        </member>
        <member name="E:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.OnOrderCanceled">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#ISpotClient#PlaceOrderAsync(System.String,CryptoExchange.Net.CommonObjects.CommonOrderSide,CryptoExchange.Net.CommonObjects.CommonOrderType,System.Decimal,System.Nullable{System.Decimal},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetSymbolName(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetKlinesAsync(System.String,System.TimeSpan,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetOrderBookAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetRecentTradesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetBalancesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetOrderTradesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetOpenOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#GetClosedOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApi.CryptoExchange#Net#Interfaces#CommonClients#IBaseRestClient#CancelOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetBalancesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetBalancesLiteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetApiKeyInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetBillsAsync(System.String,System.Nullable{Bitget.Net.Enums.BitgetGroupType},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetTransferHistoryAsync(System.String,Bitget.Net.Enums.BitgetAccountType,System.DateTime,System.DateTime,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.TransferAsync(System.String,System.Decimal,Bitget.Net.Enums.BitgetTransferAccountType,Bitget.Net.Enums.BitgetTransferAccountType,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.SubTransferAsync(System.String,System.Decimal,Bitget.Net.Enums.BitgetTransferAccountType,Bitget.Net.Enums.BitgetTransferAccountType,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetDepositAddressAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.WithdrawAsync(System.String,System.String,System.String,System.Decimal,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.InnerWithdrawAsync(System.String,System.String,System.Decimal,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetWithdrawalHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetDepositHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiAccount.GetUserFeeRatioAsync(System.String,Bitget.Net.Enums.BitgetBusinessType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetNotificationsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetTradesAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetKlinesAsync(System.String,Bitget.Net.Enums.BitgetKlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetHistoricalKlinesAsync(System.String,Bitget.Net.Enums.BitgetKlineInterval,System.DateTime,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetMergedOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiExchangeData.GetFeeRatesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.PlaceOrderAsync(System.String,Bitget.Net.Enums.BitgetOrderSide,Bitget.Net.Enums.BitgetOrderType,System.Decimal,Bitget.Net.Enums.BitgetTimeInForce,System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.CancelOrderAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.CancelOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.GetOrderAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.GetOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.GetOrderHistoryAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.PlacePlanOrderAsync(System.String,Bitget.Net.Enums.BitgetOrderSide,Bitget.Net.Enums.BitgetOrderType,System.Decimal,System.Decimal,Bitget.Net.Enums.BitgetTriggerType,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.BitgetTimeInForce},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.EditPlanOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetOrderType,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.CancelPlanOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.GetPlanOrdersAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetRestClientSpotApiTrading.GetPlanOrderHistoryAsync(System.String,System.Int32,System.DateTime,System.DateTime,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetBalanceUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.SubscribeToOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetOrderUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.Clients.SpotApi.BitgetSocketClientSpotApi.GetAuthenticationRequest">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Enums.BitgetAccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetAccountType.Exchange">
            <summary>
            Spot account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetAccountType.Contract">
            <summary>
            Contract account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetAccountType.UsdtMix">
            <summary>
            USDT futures account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetAccountType.UsdMix">
            <summary>
            USD futures account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetAccountType.UsdcMix">
            <summary>
            USDC futures account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetAccountType.MarginCross">
            <summary>
            Cross margin account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetAccountType.MarginIsolated">
            <summary>
            Isolated margin account
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetBusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetBusinessType.Mix">
            <summary>
            Mix
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetBusinessType.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetBusinessType.SpotMargin">
            <summary>
            Spot margin
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetExecutionType">
            <summary>
            Execution type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetExecutionType.Taker">
            <summary>
            Taker
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetExecutionType.Maker">
            <summary>
            Maker
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetFuturesKlineInterval">
            <summary>
            Kline interval
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneMinute">
            <summary>
            1 minute
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.FiveMinutes">
            <summary>
            5 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.FifteenMinutes">
            <summary>
            15 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.ThirtyMinutes">
            <summary>
            30 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneHour">
            <summary>
            1 hour
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.FourHours">
            <summary>
            4 hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.SixHours">
            <summary>
            6 hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.TwelveHours">
            <summary>
            12 hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneDay">
            <summary>
            1 day
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.ThreeDays">
            <summary>
            3 days
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneWeek">
            <summary>
            1 week
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneMonth">
            <summary>
            1 month
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.SixHourUtc">
            <summary>
            6 hour UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.TwelfHourUtc">
            <summary>
            12 hour UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneDayUtc">
            <summary>
            1 day UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.ThreeDayUTC">
            <summary>
            3 day UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneWeekUtc">
            <summary>
            1 week UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesKlineInterval.OneMonthUtc">
            <summary>
            1 month UTC 0
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetFuturesOrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesOrderSide.OpenLong">
            <summary>
            Open long position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesOrderSide.OpenShort">
            <summary>
            Open short position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesOrderSide.CloseLong">
            <summary>
            Close long position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesOrderSide.CloseShort">
            <summary>
            Close short position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesOrderSide.BuySingle">
            <summary>
            Buy under SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesOrderSide.SellSingle">
            <summary>
            Sell under SingleHold mode
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetFuturesPlanType">
            <summary>
            Plan type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesPlanType.ProfitPlan">
            <summary>
            Profit order
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesPlanType.LossPlan">
            <summary>
            Loss order
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesPlanType.NormalPlan">
            <summary>
            Plan order
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesPlanType.PositionProfitPlan">
            <summary>
            Position profit
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesPlanType.PositionLossPlan">
            <summary>
            Position loss
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesPlanType.MovingPlan">
            <summary>
            Trailing TP/SL
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesPlanType.TrackPlan">
            <summary>
            Trailing Stop
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetFuturesSymbolStatus">
            <summary>
            Symbol status
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesSymbolStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesSymbolStatus.Maintainance">
            <summary>
            Maintenance
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesSymbolStatus.Offline">
            <summary>
            Offline
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesSymbolStatus.Restricted">
            <summary>
            Restricted API
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesSymbolStatus.NoNewOrders">
            <summary>
            No new openings
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetFuturesSymbolType">
            <summary>
            Symbol type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesSymbolType.Perpetual">
            <summary>
            Perpetual contract
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetFuturesSymbolType.Delivery">
            <summary>
            Delivery contract
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetGroupType">
            <summary>
            Group type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetGroupType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetGroupType.Withdrawal">
            <summary>
            Withdrawal
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetGroupType.Trade">
            <summary>
            Trade
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetGroupType.Transfer">
            <summary>
            Transfer
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetGroupType.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetHoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetHoldMode.SingleHold">
            <summary>
            Single hold
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetHoldMode.DoubleHold">
            <summary>
            Double hold
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetInstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetInstrumentType.UsdtPerpetual">
            <summary>
            USDT Perpetual Contract
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetInstrumentType.CoinPerpetual">
            <summary>
            Coin Margin Perpetual Contract
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetInstrumentType.UsdcPerpetual">
            <summary>
            USDC margin Perpetual Contract
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetKlineInterval">
            <summary>
            Kline interval
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneMinute">
            <summary>
            1 minute
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.FiveMinutes">
            <summary>
            5 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.FifteenMinutes">
            <summary>
            15 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.ThirtyMinutes">
            <summary>
            30 minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneHour">
            <summary>
            1 hour
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.FourHours">
            <summary>
            4 hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.SixHours">
            <summary>
            6 hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.TwelveHours">
            <summary>
            12 hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneDay">
            <summary>
            1 day
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.ThreeDays">
            <summary>
            3 days
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneWeek">
            <summary>
            1 week
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneMonth">
            <summary>
            1 month
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.SixHourUtc">
            <summary>
            6 hour UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.TwelfHourUtc">
            <summary>
            12 hour UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneDayUtc">
            <summary>
            1 day UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.ThreeDayUTC">
            <summary>
            3 day UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneWeekUtc">
            <summary>
            1 week UTC 0
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineInterval.OneMonthUtc">
            <summary>
            1 month UTC 0
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetKlineType">
            <summary>
            Kline type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineType.Market">
            <summary>
            Market price
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineType.Mark">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetKlineType.Index">
            <summary>
            Index price
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetMarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetMarginMode.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetMarginMode.CrossMargin">
            <summary>
            Cross margin
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetOrderForce">
            <summary>
            Order force
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderForce.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderForce.Twap">
            <summary>
            Twap
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderForce.Adl">
            <summary>
            Adl
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderForce.FullLiquidation">
            <summary>
            Full liquidation
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderForce.PartialLiquidation">
            <summary>
            Partial liquidation
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetOrderPlacementSource">
            <summary>
            Placement source
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderPlacementSource.Web">
            <summary>
            Web
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderPlacementSource.App">
            <summary>
            App
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderPlacementSource.Api">
            <summary>
            Api
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderPlacementSource.Sys">
            <summary>
            Sys
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderPlacementSource.Android">
            <summary>
            Android
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderPlacementSource.Ios">
            <summary>
            Ios
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetOrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderSide.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderSide.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetOrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderStatus.Initial">
            <summary>
            Initial
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderStatus.New">
            <summary>
            New
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderStatus.PartiallyFilled">
            <summary>
            Partially filled
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderStatus.Filled">
            <summary>
            Filled
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderStatus.Cancelled">
            <summary>
            Cancelled
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetOrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderType.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetOrderType.Market">
            <summary>
            Market
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetPlanFilter">
            <summary>
            Plan filter
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanFilter.TrailingStop">
            <summary>
            Trailing stop plan
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanFilter.Other">
            <summary>
            profit order, loss order, position profit, position loss, Trailing TP/SL
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetPlanOrderStatus">
            <summary>
            Plan order status
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderStatus.NotTriggered">
            <summary>
            Not triggered
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderStatus.Triggered">
            <summary>
            Triggered
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderStatus.FailTrigger">
            <summary>
            Failed trigger
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderStatus.Cancel">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetPlanType">
            <summary>
            Plan type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanType.Profit">
            <summary>
            Profit plan
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanType.Loss">
            <summary>
            Loss plan
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanType.Moving">
            <summary>
            Moving plan
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanType.PositionProfit">
            <summary>
            Position profit
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanType.PositionLoss">
            <summary>
            Position loss
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanType.TrailingStop">
            <summary>
            Trailing stop
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanType.NormalPlan">
            <summary>
            Plan order
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetPlanOrderEvent">
            <summary>
            Plan type 
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderEvent.PlanOrderEvent">
            <summary>
            Whenever a plan order is created/cancelled/modified/triggered
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderEvent.TakeProfitEvent">
            <summary>
            When a take profit order(partial position) is created/cancelled/modified/triggered
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderEvent.StopLossEvent">
            <summary>
            When a stop loss order(partial position) is created/cancelled/modified/triggered
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderEvent.PositionTakeProfitEvent">
            <summary>
            When a position take profit order(whole position) is created/cancelled/modified/triggered
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPlanOrderEvent.PositionStopLossEvent">
            <summary>
            When a position stop loss order(whole position) is created/cancelled/modified/triggered
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetPositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPositionSide.Long">
            <summary>
            Long position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPositionSide.Short">
            <summary>
            Short position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetPositionSide.Net">
            <summary>
            Net
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetProductType">
            <summary>
            Product type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductType.UsdtPerpetual">
            <summary>
            Usdt perpetual contracts
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductType.UniversalMarginPerpetual">
            <summary>
            Universal margin perpetual contracts
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductType.UsdcPerpetual">
            <summary>
            Usdc perpetual contracts
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductType.SimUsdtPerpetual">
            <summary>
            Simulation usdt perpetual contracts
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductType.SimUniversalMarginPerpetual">
            <summary>
            Simulation universal margin perpetual contracts
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductType.SimUsdcPerpetual">
            <summary>
            Simulation usdc perpetual contracts
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetProductTypeV2">
            <summary>
            Product type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductTypeV2.UsdtFutures">
            <summary>
            USDT futures
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductTypeV2.CoinFutures">
            <summary>
            Mixed futures
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductTypeV2.UsdcFutures">
            <summary>
            USDC Futures
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductTypeV2.SimUsdtFutures">
            <summary>
            DEMO USDT futures
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductTypeV2.SimCoinFutures">
            <summary>
            DEMO Mixed futures
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetProductTypeV2.SimUsdcFutures">
            <summary>
            DEMO USDC futures
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetStreamKlineInterval">
            <summary>
            Kline interval
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.OneMinute">
            <summary>
            One minute
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.FiveMinutes">
            <summary>
            Five minute
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.FifteenMinutes">
            <summary>
            Fifteen minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.ThirtyMinutes">
            <summary>
            Thirty minutes
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.OneHour">
            <summary>
            One hour
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.FourHours">
            <summary>
            Four hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.TwelveHours">
            <summary>
            Twelve hours
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.OneDay">
            <summary>
            One day
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetStreamKlineInterval.OneWeek">
            <summary>
            One week
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetSymbolStatus">
            <summary>
            Status of a symbol
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetSymbolStatus.Offline">
            <summary>
            Offline
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetSymbolStatus.Gray">
            <summary>
            Gray
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetSymbolStatus.Online">
            <summary>
            Online
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetTimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTimeInForce.GoodTillCanceled">
            <summary>
            Good till canceled
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTimeInForce.PostOnly">
            <summary>
            Post only
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTimeInForce.FillOrKill">
            <summary>
            Fill or kill
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTimeInForce.ImmediatOrCancel">
            <summary>
            Immediate or cancel
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetTradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.OpenLong">
            <summary>
            Open long
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.OpenShot">
            <summary>
            Open short
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.CloseLong">
            <summary>
            Close long
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.CloseShort">
            <summary>
            Close short
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.ReduceCloseLong">
            <summary>
            Force reduce long position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.ReduceCloseShort">
            <summary>
            Force reduce short position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.OffSetCloseLong">
            <summary>
            Force netting: close long position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.OffsetCloseShort">
            <summary>
            Force netting: close short position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.BurstCloseLong">
            <summary>
            Force liquidation: close long position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.BurstCloseShort">
            <summary>
            Force liquidation: close short position
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.DeliveryCloseLong">
            <summary>
            Future delivery close long
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.DeliveryCloseShort">
            <summary>
            Future delivery close short
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.BuySingle">
            <summary>
            Buy in SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.SellSingle">
            <summary>
            Sell in SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.ReduceBuySingle">
            <summary>
            Force reduce buy in SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.ReduceSellSingle">
            <summary>
            Force reduce sell in SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.BurstBuySingle">
            <summary>
            Force liquidation: buy in SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.BurstSellSingle">
            <summary>
            Force liquidation: sell in SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.DeliveryBuySingle">
            <summary>
            Future delivery buy in SingleHold mode
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTradeSide.DeliverySellSingle">
            <summary>
            Future delivery sell in SingleHold mode
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetTransferAccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferAccountType.Spot">
            <summary>
            Spot account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferAccountType.UsdtMix">
            <summary>
            USDT futures account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferAccountType.UsdMix">
            <summary>
            USD futures account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferAccountType.UsdcMix">
            <summary>
            USDC futures account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferAccountType.MarginCross">
            <summary>
            Cross margin account
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferAccountType.MarginIsolated">
            <summary>
            Isolated margin account
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetTransferStatus">
            <summary>
            Transfer status
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferStatus.Successful">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTransferStatus.Processing">
            <summary>
            In progress
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BitgetTriggerType">
            <summary>
            Trigger type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTriggerType.FillPrice">
            <summary>
            Fill price
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BitgetTriggerType.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="T:Bitget.Net.Enums.BizType">
            <summary>
            Biz type
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.Withdrawal">
            <summary>
            Withdrawal
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.DeductionFeeHandling">
            <summary>
            Deduction of handling fee
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.TransferIn">
            <summary>
            Transfer in
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.TransferOut">
            <summary>
            Transfer out
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.RebateRewards">
            <summary>
            Rebate rewards
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.AirdropRewards">
            <summary>
            Airdrop rewards
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.UsdtContractRewards">
            <summary>
            Usdt contract rewards
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.MixContractRewards">
            <summary>
            Mix contract rewards
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.SystemLock">
            <summary>
            System lock
            </summary>
        </member>
        <member name="F:Bitget.Net.Enums.BizType.UserLock">
            <summary>
            User lock
            </summary>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientFuturesApi">
            <summary>
            Futures API endpoints
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientFuturesApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientFuturesApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientFuturesApi.Trading">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApi">
            <summary>
            Spot API endpoints
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApi.Trading">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApi.CommonSpotClient">
            <summary>
            Get the ISpotClient for this client. This is a common interface which allows for some basic operations without knowing any details of the exchange.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount">
            <summary>
            Bitget account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetBalancesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get account asset balances
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-account-assets" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetBalancesLiteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get account assets, only returns assets with balance > 0
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-account-assets-lite" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetApiKeyInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get API key info
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-apikey-info" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetBillsAsync(System.String,System.Nullable{Bitget.Net.Enums.BitgetGroupType},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get bills history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-bills" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="groupType">Transaction group type</param>
            <param name="bizType">	Business type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="pageSize">Max amount of results</param>
            <param name="endId">Last end id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetTransferHistoryAsync(System.String,Bitget.Net.Enums.BitgetAccountType,System.DateTime,System.DateTime,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get transfer history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-transfer-list" /></para>
            </summary>
            <param name="assetId">Asset id</param>
            <param name="fromType">Filter by account source</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.TransferAsync(System.String,System.Decimal,Bitget.Net.Enums.BitgetTransferAccountType,Bitget.Net.Enums.BitgetTransferAccountType,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Transfer between account types
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#transfer-v2" /></para>
            </summary>
            <param name="asset">Asset name</param>
            <param name="quantity">Transfer quantity</param>
            <param name="fromType">From account type</param>
            <param name="toType">To account type</param>
            <param name="symbol">Must provide when fromType or toType = IsolatedMargin</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.SubTransferAsync(System.String,System.Decimal,Bitget.Net.Enums.BitgetTransferAccountType,Bitget.Net.Enums.BitgetTransferAccountType,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Transfer between subaccounts or sub and main account
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#sub-transfer" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="quantity">Transfer quantity</param>
            <param name="fromType">From account type</param>
            <param name="toType">To account type</param>
            <param name="clientOrderId">Client order id</param>
            <param name="fromUserId">From user id</param>
            <param name="toUserId">To user id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetDepositAddressAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deposit address
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-coin-address" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="network">Network</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.WithdrawAsync(System.String,System.String,System.String,System.Decimal,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Withdraw funds
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#withdraw-v2" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="address">Target address</param>
            <param name="network">Network</param>
            <param name="quantity">Quantity</param>
            <param name="tag">Tag</param>
            <param name="remark">Remard</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.InnerWithdrawAsync(System.String,System.String,System.Decimal,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Withdraw funds internally
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#inner-withdraw-v2" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="toUserId">Target user id</param>
            <param name="quantity">Quantity</param>
            <param name="toType">'email/mobile/uid', default 'uid'</param>
            <param name="areaCode">	Tel area code, This field is mandatory when the toType equals to 'mobile'</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetWithdrawalHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get withdrawal history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-withdraw-list" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="clientOrderId">Client order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetDepositHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get deposit history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-deposit-list" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiAccount.GetUserFeeRatioAsync(System.String,Bitget.Net.Enums.BitgetBusinessType,System.Threading.CancellationToken)">
            <summary>
            Get user maker / taker fees
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-user-fee-ratio" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="businessType"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData">
            <summary>
            Bitget exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get the server time
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-server-time" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetNotificationsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get server notifications of the last month
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#notice" /></para>
            </summary>
            <param name="languageType">The language type</param>
            <param name="noticeType">Filter by notice type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <summary>
            Get a list of supported assets on the platform
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-coin-list" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <summary>
            Get a list of supported symbols on the platform
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-symbols" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a single symbol ticker
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-single-ticker" /></para>
            </summary>
            <param name="symbol">The id of the symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <summary>
            Get all symbol tickers
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-all-tickers" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get recent trades
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-recent-trades" /></para>
            </summary>
            <param name="symbol">The id of the symbol</param>
            <param name="limit">Results to return, max 500</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetTradesAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get trade history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-market-trades" /></para>
            </summary>
            <param name="symbol">The id of the symbol</param>
            <param name="tradeId">Filter by trade id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Results to return, max 500</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetKlinesAsync(System.String,Bitget.Net.Enums.BitgetKlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get kline/candlestick data
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-candle-data" /></para>
            </summary>
            <param name="symbol">The id of the symbol</param>
            <param name="interval">The kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Results to return, max 1000</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetHistoricalKlinesAsync(System.String,Bitget.Net.Enums.BitgetKlineInterval,System.DateTime,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get historical kline/candlestick data
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-history-candle-data" /></para>
            </summary>
            <param name="symbol">The id of the symbol</param>
            <param name="interval">The kline interval</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Results to return, max 1000</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get order book
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-depth" /></para>
            </summary>
            <param name="symbol">The id of the symbol</param>
            <param name="mergeLevel">Merge level for entries</param>
            <param name="limit">Results to return, max 1000</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetMergedOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get merged order book
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-merged-depth-data" /></para>
            </summary>
            <param name="symbol">The id of the symbol</param>
            <param name="mergeLevel">Merge level for entires</param>
            <param name="limit">Results to return, max 1000</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiExchangeData.GetFeeRatesAsync(System.Threading.CancellationToken)">
            <summary>
            Get limits according to the VIP levels
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading">
            <summary>
            Bitget trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.PlaceOrderAsync(System.String,Bitget.Net.Enums.BitgetOrderSide,Bitget.Net.Enums.BitgetOrderType,System.Decimal,Bitget.Net.Enums.BitgetTimeInForce,System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#trade" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="side">Order side</param>
            <param name="type">Order type</param>
            <param name="quantity">Order quantity, base coin when orderType is limit; quote asset when orderType is buy-market, base asset when orderType is sell-market</param>
            <param name="timeInForce">Time in force</param>
            <param name="price">Limit order price</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.CancelOrderAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel an order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#cancel-order-v2" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="orderId">Order id. Either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id. Either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.CancelOrdersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel all orders for a symbol
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#cancel-order-by-symbol" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.GetOrderAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get order info by id
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-order-details" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="orderId">Order id. Either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id. Either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.GetOrdersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get orders
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-order-list" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.GetOrderHistoryAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get order history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-order-history" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="startId">Return results with id after this</param>
            <param name="endId">Return results with id before this</param>
            <param name="limit">Max results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get trade history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-transaction-details" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="orderId">Filter by order id</param>
            <param name="startId">Filter by start id</param>
            <param name="endId">Filter by end id</param>
            <param name="limit">Max results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.PlacePlanOrderAsync(System.String,Bitget.Net.Enums.BitgetOrderSide,Bitget.Net.Enums.BitgetOrderType,System.Decimal,System.Decimal,Bitget.Net.Enums.BitgetTriggerType,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.BitgetTimeInForce},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new planned order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#place-plan-order" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="side">Order side</param>
            <param name="type">Order type</param>
            <param name="quantity">Order quantity, base coin when orderType is limit; quote asset when orderType is buy-market, base asset when orderType is sell-market</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="triggerType">Trigger type</param>
            <param name="executePrice">Execution price (if limit order)</param>
            <param name="timeInForce">Time in force</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.EditPlanOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetOrderType,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Modify an existing plan order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#modify-plan-order" /></para>
            </summary>
            <param name="orderId">Order id of order to edit, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id of order to edit, either this or orderId should be provided</param>
            <param name="type">Order type</param>
            <param name="quantity">Order quantity, base coin when orderType is limit; quote asset when orderType is buy-market, base asset when orderType is sell-market</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="executePrice">Execution price (if limit order)</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.CancelPlanOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a plan order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#cancel-plan-order" /></para>
            </summary>
            <param name="orderId">Order id of order to cancel, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id of order to cancel, either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.GetPlanOrdersAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get current plan orders
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-current-plan-orders" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="pageSize">Page size</param>
            <param name="fromId">Return results after this order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetRestClientSpotApiTrading.GetPlanOrderHistoryAsync(System.String,System.Int32,System.DateTime,System.DateTime,System.String,System.Threading.CancellationToken)">
            <summary>
            Get historic plan orders
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-history-plan-orders" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="pageSize">Page size</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="fromId">Return results after this order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi">
            <summary>
            Bitget spot streams
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetBalanceUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to updates to the account balance
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#account-channel" /></para>
            </summary>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#candlesticks-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="interval">Kline interval</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#candlesticks-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="interval">Kline interval</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook changes updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#depth-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook snapshot updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#depth-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="limit">The book depth, either 5 or 15</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook changes updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#depth-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook snapshot updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#depth-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="limit">The book depth, either 5 or 15</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetOrderUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to account order updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#order-channel" /></para>
            </summary>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol ticker updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#tickers-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol ticker updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#tickers-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol trade updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#trades-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.SpotApi.IBitgetSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol trade updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#trades-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount">
            <summary>
            Bitget account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetAccountAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get account info
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-single-account" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="marginAsset">Margin asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetAccountsAsync(Bitget.Net.Enums.BitgetProductType,System.Threading.CancellationToken)">
            <summary>
            Get account list
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-account-list" /></para>
            </summary>
            <param name="type">The type of product</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetMaxOpenPositionsAsync(System.String,System.String,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Get max open positions
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-open-count" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">The margin asset</param>
            <param name="openPrice">Open price</param>
            <param name="openQuantity">Open quantity</param>
            <param name="leverage">Leverage</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.SetLeverageAsync(System.String,System.String,System.Decimal,System.Nullable{Bitget.Net.Enums.BitgetPositionSide},System.Threading.CancellationToken)">
            <summary>
            Set the leverage
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#change-leverage" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="leverage">Leverage</param>
            <param name="positionSide">Position direction (ignore this field if marginMode is crossed）</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.SetMarginAsync(System.String,System.String,System.Decimal,System.Nullable{Bitget.Net.Enums.BitgetPositionSide},System.Threading.CancellationToken)">
            <summary>
            Set the margin
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#change-margin" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="margin">Margin amount</param>
            <param name="positionSide">Position direction (ignore this field if marginMode is crossed）</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.SetMarginModeAsync(System.String,System.String,Bitget.Net.Enums.BitgetMarginMode,System.Threading.CancellationToken)">
            <summary>
            Change the margin mode
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#change-margin-mode" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="mode">Margin mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.SetAutoMarginAsync(System.String,System.String,Bitget.Net.Enums.BitgetPositionSide,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Set auto margin
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#set-auto-margin" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="side">Position side</param>
            <param name="autoMargin">Auto margin on or off</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.SetHoldModeAsync(Bitget.Net.Enums.BitgetProductType,Bitget.Net.Enums.BitgetHoldMode,System.Threading.CancellationToken)">
            <summary>
            Set position hold mode
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#change-hold-mode" /></para>
            </summary>
            <param name="type">Product type</param>
            <param name="mode">New hold mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetPositionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get symbol position
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-symbol-position-v2" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetPositionsAsync(Bitget.Net.Enums.BitgetProductType,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all postions
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-all-position-v2" /></para>
            </summary>
            <param name="type">Product type</param>
            <param name="marginAsset">Margin asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetHistoryPositionAsync(System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetProductType},System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get history position (max 3 months ago)
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-history-position" /></para>
            </summary>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="type">Product type</param>
            <param name="symbol">Symbol</param>
            <param name="pageSize">Page size</param>
            <param name="endId">Last end id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetBillsAsync(Bitget.Net.Enums.BitgetProductTypeV2,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get account bill
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-account-bill" /></para>
            </summary>
            <param name="productType">Product type</param>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="symbol">Symbol</param>
            <param name="pageSize">Page size</param>
            <param name="endId">Last end id</param>
            <param name="bizType">Business type</param>
            <param name="asset">Asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiAccount.GetBusinessBillsAsync(Bitget.Net.Enums.BitgetProductType,System.DateTime,System.DateTime,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get business account bills
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-business-account-bill" /></para>
            </summary>
            <param name="type">Product type</param>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="pageSize">Page size</param>
            <param name="business">Business type</param>
            <param name="endId">Last end id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData">
            <summary>
            Bitget exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get the server time
            <para><a href="https://bitgetlimited.github.io/apidoc/en/spot/#get-server-time" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetSymbolsAsync(Bitget.Net.Enums.BitgetProductType,System.Threading.CancellationToken)">
            <summary>
            Get symbols
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-all-symbols" /></para>
            </summary>
            <param name="type">Product type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetMergedOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get merged order book
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-merged-depth-data" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="mergeLevel">Merge level for entries</param>
            <param name="limit">Results to return, 1/5/15/50, defaults to 100</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get order book
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-depth" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="limit">Results to return, 1/5/15/50/100</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get ticker
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-single-symbol-ticker" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetTickersAsync(Bitget.Net.Enums.BitgetProductType,System.Threading.CancellationToken)">
            <summary>
            Get tickers
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-all-symbol-ticker" /></para>
            </summary>
            <param name="type">Type of symbols</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetFeeRatesAsync(System.Threading.CancellationToken)">
            <summary>
            Get fee information
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#vip-fee-rate" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get recent trades for a symbol
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-recent-fills" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetTradeHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get trade history for a symbol
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-fills" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="maxTradeId">Return trades before this id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get klines/candlestick data
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-candle-data" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="interval">Kline interval</param>
            <param name="priceType">Price type</param>
            <param name="startTime">Start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetHistoricalKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get klines/candlestick data
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-history-candle-data" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="interval">Kline interval</param>
            <param name="priceType">Price type</param>
            <param name="startTime">Start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetHistoricalIndexKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get index klines/candlestick data
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-history-index-candle-data" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="interval">Kline interval</param>
            <param name="priceType">Price type</param>
            <param name="startTime">Start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetHistoricalMarkKlinesAsync(System.String,Bitget.Net.Enums.BitgetFuturesKlineInterval,System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetKlineType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get mark klines/candlestick data
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-history-mark-candle-data" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="interval">Kline interval</param>
            <param name="priceType">Price type</param>
            <param name="startTime">Start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetIndexPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the index price for a symbol
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-symbol-index-price" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetNextFundingTimeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get next funding time
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-symbol-next-funding-time" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetFundingRateHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get funding rate history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-history-funding-rate" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="page">Page number</param>
            <param name="pageSize">Page size</param>
            <param name="nextPage">Whether to query the next page default false</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetFundingRateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get current funding rate
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-current-funding-rate" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetOpenInterestAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get open interest rate
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-current-funding-rate" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetMarkPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get mark price
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-symbol-mark-price" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetLeverageInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get leverage info
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-symbol-leverage" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetPositionsTiersAsync(Bitget.Net.Enums.BitgetProductType,System.String,System.Threading.CancellationToken)">
            <summary>
            Get position tiers
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-position-tier" /></para>
            </summary>
            <param name="type">Product type</param>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiExchangeData.GetPositionRiskLimitAsync(System.Threading.CancellationToken)">
            <summary>
            Get position risk limit
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-risk-position-limit" /></para>
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading">
            <summary>
            Bitget trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.PlaceOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetFuturesOrderSide,Bitget.Net.Enums.BitgetOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{Bitget.Net.Enums.BitgetTimeInForce},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#place-order" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="marginAsset">Margin asset</param>
            <param name="side">Position side</param>
            <param name="type">Position side</param>
            <param name="quantity">Quantity</param>
            <param name="price">Price</param>
            <param name="timeInForce">Time in force</param>
            <param name="reduceOnly">Reduce only</param>
            <param name="takeProfitPrice">Preset take profit price</param>
            <param name="stopLossPrice">Preset stop loss price</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.CancelOrderAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel an order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#cancel-order" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="marginAsset">Margin asset</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.EditOrderAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Edit an order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#modify-order" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="newClientOrderId">New client order id</param>
            <param name="price">New price</param>
            <param name="quantity">New quantity</param>
            <param name="takeProfitPrice">new take profit price</param>
            <param name="stopLossPrice">New stop loss price</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetOpenOrdersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get list of open orders for a symbol
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-open-order" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetOpenOrdersByProductAsync(Bitget.Net.Enums.BitgetProductType,System.String,System.Threading.CancellationToken)">
            <summary>
            Get list of open order for a product type
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-all-open-order" /></para>
            </summary>
            <param name="type">Type</param>
            <param name="marginAsset">Filter by margin asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetOrderHistoryAsync(System.String,System.DateTime,System.DateTime,System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get order history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-history-orders" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="pageSize">Page size</param>
            <param name="endId">Last end Id of last query</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetOrderHistoryAsync(Bitget.Net.Enums.BitgetProductType,System.DateTime,System.DateTime,System.Int32,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get order history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-producttype-history-orders" /></para>
            </summary>
            <param name="type">Product type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="pageSize">Page size</param>
            <param name="endId">Last end Id of last query</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetOrderAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get an order by id
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-order-details" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetUserTradesAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)">
            <summary>
            Get user trades
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-order-fill-detail" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="orderId">Filter by order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="endId">Last end Id of last query</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetUserTradesAsync(Bitget.Net.Enums.BitgetProductType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)">
            <summary>
            Get user trades
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-producttype-order-fill-detail" /></para>
            </summary>
            <param name="type">Product type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="endId">Last end Id of last query</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.PlacePlanOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetFuturesOrderSide,Bitget.Net.Enums.BitgetOrderType,Bitget.Net.Enums.BitgetTriggerType,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new plan order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#place-plan-order" /></para>
            </summary>
            <param name="symbol">Symbol id</param>
            <param name="marginAsset">Margin asset</param>
            <param name="side">Position side</param>
            <param name="type">Position side</param>
            <param name="quantity">Quantity</param>
            <param name="triggerType">Trigger type</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="executePrice">Execute price</param>
            <param name="reduceOnly">Reduce only</param>
            <param name="takeProfitPrice">Preset take profit price</param>
            <param name="stopLossPrice">Preset stop loss price</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.EditPlanOrderAsync(System.String,System.String,System.Decimal,Bitget.Net.Enums.BitgetTriggerType,Bitget.Net.Enums.BitgetOrderType,System.String,System.String,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Edit a plan order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#modify-plan-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="triggerType">Trigger type</param>
            <param name="orderType">Order type</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="executePrice">Execute price</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.EditPlanOrderTpSlAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Edit the take profit / stop loss of a plan order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#modify-plan-order-tpsl" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="takeProfitPrice">New take profit price</param>
            <param name="stopLossPrice">New stop loss price</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.PlaceStopOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.Decimal,Bitget.Net.Enums.BitgetPositionSide,System.Nullable{Bitget.Net.Enums.BitgetTriggerType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new stop order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#place-stop-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="planType">Plan type</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="side">Position side</param>
            <param name="triggerType">Trigger type</param>
            <param name="quantity">Quantity</param>
            <param name="executePrice">Execution price</param>
            <param name="rangeRate">Only works when planType is "MovingPlan", "1" means 1.0% price correction, two decimal places</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.PlaceTrailingStopOrderAsync(System.String,System.String,System.Decimal,Bitget.Net.Enums.BitgetFuturesOrderSide,System.Decimal,System.Decimal,System.Nullable{Bitget.Net.Enums.BitgetTriggerType},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new trailling stop order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#place-trailing-stop-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="side">Order side</param>
            <param name="triggerType">Trigger type</param>
            <param name="quantity">Quantity</param>
            <param name="rangeRate">"1" means 1.0% price correction, max 10</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.PlacePositionTpSlAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.Decimal,Bitget.Net.Enums.BitgetTriggerType,Bitget.Net.Enums.BitgetPositionSide,System.String,System.Threading.CancellationToken)">
            <summary>
            Set stop loss / take profit price for an position. When the position take profit / stop loss are triggered, the full amount of the position will be entrusted at the market price by default
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#place-position-tpsl" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="side">Order side</param>
            <param name="triggerType">Trigger type</param>
            <param name="planType">Plan type</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.EditStopOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.Decimal,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Edit an existing stop order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#modify-stop-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="planType">Plan type</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.CancelPlanOrderAsync(System.String,System.String,Bitget.Net.Enums.BitgetPlanType,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a plan order
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#modify-stop-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="marginAsset">Margin asset</param>
            <param name="planType">Plan type</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetPlanOrderHistoryAsync(System.DateTime,System.DateTime,System.Nullable{Bitget.Net.Enums.BitgetProductType},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get plan order history
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-history-plan-orders-tpsl" /></para>
            </summary>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="type">Filter by product type</param>
            <param name="symbol">Filter by symbol</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetRestClientFuturesApiTrading.GetPlanOrdersAsync(System.String,System.Nullable{Bitget.Net.Enums.BitgetProductType},System.Nullable{Bitget.Net.Enums.BitgetPlanFilter},System.Threading.CancellationToken)">
            <summary>
            Get current open plan orders
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#get-plan-order-tpsl-list" /></para>
            </summary>
            <param name="symbol">Symbol, either this or type should be provided</param>
            <param name="type">Product type, either this or symbol should be provided</param>
            <param name="planType">Filter by plan type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi">
            <summary>
            Bitget futures streams
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.String,Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#candlesticks-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="interval">Kline interval</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Bitget.Net.Enums.BitgetStreamKlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#candlesticks-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="interval">Kline interval</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol ticker updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#tickers-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol ticker updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#tickers-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook changes updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#order-book-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook snapshot updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#order-book-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="limit">The book depth, either 5 or 15</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook changes updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#order-book-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{Bitget.Net.Objects.Models.BitgetOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to orderbook snapshot updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#order-book-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="limit">The book depth, either 5 or 15</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol trade updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#trades-channel" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol trade updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#trades-channel" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToBalanceUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to updates to the account balance
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#account-channel" /></para>
            </summary>
            <param name="instrumentType">Instrument type</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToPositionUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetPositionUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to position updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#positions-channel" /></para>
            </summary>
            <param name="instrumentType">Instrument type</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToOrderUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to account order updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#order-channel" /></para>
            </summary>
            <param name="instrumentType">Instrument type</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.FuturesApi.IBitgetSocketClientFuturesApi.SubscribeToPlanOrderUpdatesAsync(Bitget.Net.Enums.BitgetInstrumentType,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to plan order updates
            <para><a href="https://bitgetlimited.github.io/apidoc/en/mix/#plan-order-channel" /></para>
            </summary>
            <param name="instrumentType">Instrument type</param>
            <param name="handler">The handler for the data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.IBitgetRestClient">
            <summary>
            Client for accessing the Bitget API. 
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.IBitgetRestClient.SpotApi">
            <summary>
            Spot API endpoints
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.IBitgetRestClient.FuturesApi">
            <summary>
            Futures API endpoints
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.IBitgetRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:Bitget.Net.Interfaces.Clients.IBitgetSocketClient">
            <summary>
            Client for accessing the Bitget websocket API
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.IBitgetSocketClient.SpotApi">
            <summary>
            Spot streams
            </summary>
        </member>
        <member name="P:Bitget.Net.Interfaces.Clients.IBitgetSocketClient.FuturesApi">
            <summary>
            Futures streams
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.Clients.IBitgetSocketClient.SetApiCredentials(Bitget.Net.Objects.BitgetApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:Bitget.Net.Interfaces.IBitgetOrderBookFactory">
            <summary>
            Bitget order book factory
            </summary>
        </member>
        <member name="M:Bitget.Net.Interfaces.IBitgetOrderBookFactory.CreateSpot(System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for a spot symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Book options</param>
            <returns></returns>
        </member>
        <member name="M:Bitget.Net.Interfaces.IBitgetOrderBookFactory.CreateFutures(System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for a futures symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Book options</param>
            <returns></returns>
        </member>
        <member name="T:Bitget.Net.Objects.BitgetApiAddresses">
            <summary>
            Bitget Api addresses
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.BitgetApiAddresses.RestBaseAddress">
            <summary>
            The address used by the library for the Bitget rest API
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.BitgetApiAddresses.SocketBaseAddress">
            <summary>
            The address used by the library for the Bitget socket API
            </summary>
        </member>
        <member name="F:Bitget.Net.Objects.BitgetApiAddresses.Default">
            <summary>
            The default addresses to connect to the bitget.com API
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.BitgetApiCredentials">
            <summary>
            Credentials for the Bitget API
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.BitgetApiCredentials.PassPhrase">
            <summary>
            The pass phrase
            </summary>
        </member>
        <member name="M:Bitget.Net.Objects.BitgetApiCredentials.#ctor(System.String,System.String,System.String,CryptoExchange.Net.Authentication.ApiCredentialsType)">
            <summary>
            Creates new api credentials. Keep this information safe.
            </summary>
            <param name="apiKey">The API key</param>
            <param name="apiSecret">The API secret</param>
            <param name="apiPassPhrase">The API passPhrase</param>
            <param name="credentialsType">The type of credentials</param>
        </member>
        <member name="M:Bitget.Net.Objects.BitgetApiCredentials.#ctor(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Create Api credentials providing a stream containing json data. The json data should include three values: apiKey, apiSecret and apiPassPhrase
            </summary>
            <param name="inputStream">The stream containing the json data</param>
            <param name="identifierKey">A key to identify the credentials for the API. For example, when set to `binanceKey` the json data should contain a value for the property `binanceKey`. Defaults to 'apiKey'.</param>
            <param name="identifierSecret">A key to identify the credentials for the API. For example, when set to `binanceSecret` the json data should contain a value for the property `binanceSecret`. Defaults to 'apiSecret'.</param>
            <param name="identifierPassPhrase">A key to identify the credentials for the API. For example, when set to `BitgetPass` the json data should contain a value for the property `BitgetPass`. Defaults to 'apiPassPhrase'.</param>
        </member>
        <member name="M:Bitget.Net.Objects.BitgetApiCredentials.Copy">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetApiKeyInfo">
            <summary>
            Api key info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.InviterId">
            <summary>
            Inviter id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.AgentInviterId">
            <summary>
            Agent inviter code
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.Channel">
            <summary>
            Channel
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.Ips">
            <summary>
            Whitelist ips
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.ParentId">
            <summary>
            Parent uid
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.Trader">
            <summary>
            True if trade
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.IsSpotTrader">
            <summary>
            True if spot trader
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetApiKeyInfo.Permissions">
            <summary>
            List of permissions
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetAsset">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetAsset.AssetId">
            <summary>
            Asset id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetAsset.AssetName">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetAsset.Transferable">
            <summary>
            Transferable
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetAsset.Networks">
            <summary>
            Networks for this asset
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetBalance">
            <summary>
            Balance info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalance.AssetId">
            <summary>
            Asset id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalance.AssetName">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalance.Available">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalance.Frozen">
            <summary>
            Frozen balance
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalance.Locked">
            <summary>
            Locked balance
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalance.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetBalanceUpdate">
            <summary>
            Balance update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalanceUpdate.AssetId">
            <summary>
            Asset id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalanceUpdate.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBalanceUpdate.Available">
            <summary>
            Available quantity
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetBill">
            <summary>
            Bill info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.Asset">
            <summary>
            Asset id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.GroupType">
            <summary>
            Group type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.Type">
            <summary>
            Transaction type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.Balance">
            <summary>
            Balance Before transfer
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.Fees">
            <summary>
            Fees
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetBill.BillId">
            <summary>
            Bill id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetDeposit">
            <summary>
            Deposit info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Status">
            <summary>
            Withdrawal status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.ToAddress">
            <summary>
            To address
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Confirm">
            <summary>
            Confirmations
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDeposit.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetDepositAddress">
            <summary>
            Deposit address
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDepositAddress.Address">
            <summary>
            Deposit address
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDepositAddress.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDepositAddress.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDepositAddress.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetDepositAddress.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFeeLevel">
            <summary>
            Fee info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFeeLevel.Level">
            <summary>
            VIP level
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFeeLevel.TransactionVolume">
            <summary>
            30 day USDT transaction volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFeeLevel.AssetQuantity">
            <summary>
            Asset quantity USDT
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFeeLevel.TakerFeeRate">
            <summary>
            Taker fee rate, actual fee rate please refer to official announcement when '0'
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFeeLevel.MakerFeeRate">
            <summary>
            Maker fee rate, actual fee rate please refer to official announcement when '0'
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFeeLevel.WithdrawQuantity">
            <summary>
            24 hours withdraw amount (BTC)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFeeLevel.WithdrawQuantityUsdt">
            <summary>
            24 hours withdraw amount (USDT)
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFundingRate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFundingRate.FundingRate">
            <summary>
            Current funding rate
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFundingRateHistory">
            <summary>
            Historical funding rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFundingRateHistory.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFundingRateHistory.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFundingRateHistory.SettleTime">
            <summary>
            Settle time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFundingTime">
            <summary>
            Next funding time info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFundingTime.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFundingTime.FundingTime">
            <summary>
            Funding time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo">
            <summary>
            Account info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.Locked">
            <summary>
            Locked amount (margin asset), system will lock when close position
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.Available">
            <summary>
            Available balance(margin asset)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.CrossMaxAvailable">
            <summary>
            The maximum available balance for crossed margin mode(margin currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.FixedMaxAvailable">
            <summary>
            The maximum available balance for fixed margin mode(margin currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.MaxTransferOut">
            <summary>
            Maximum transferable
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.Equity">
            <summary>
            Account equity (margin asset), includes uPnL (calculated by mark price)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.UsdtEquity">
            <summary>
            Account equity convert to USDT
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.BtcEquity">
            <summary>
            Account equity convert to BTC
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.CrossRiskRate">
            <summary>
            Risk ratio at crossed margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.CrossMarginLeverage">
            <summary>
            Leverage level for crossed margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.FixedLongLeverage">
            <summary>
            Long leverage with isolated(fixed) margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.FixedShortLeverage">
            <summary>
            Short leverage with isolated(fixed) margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.UnrealizedProfitLoss">
            <summary>
            Urealized profit and loss at crossed margin mode, unit in USDT
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesAccountInfo.Bonus">
            <summary>
            Coupon
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate">
            <summary>
            Balance update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate.Locked">
            <summary>
            Locked quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate.Available">
            <summary>
            Available quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate.MaxOpenPosAvailable">
            <summary>
            Max available to open position
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate.MaxTransferOut">
            <summary>
            Max available to transfer out
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate.Equity">
            <summary>
            Equity of the currency
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBalanceUpdate.EquityUsdt">
            <summary>
            Equity of the currency USD
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesBills">
            <summary>
            Bills page
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBills.Bills">
            <summary>
            Bills list
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesBill">
            <summary>
            Bill info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.Type">
            <summary>
            Transaction type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.FeeDeduct">
            <summary>
            Fees
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesBill.Id">
            <summary>
            Bill id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesKline">
            <summary>
            Kline info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesKline.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesKline.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesKline.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesKline.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesKline.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesKline.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesKline.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesOrder">
            <summary>
            Bitget futures order
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.Quantity">
            <summary>
            Order quantity (base asset when orderType=limit; quote asset when orderType=market)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.AveragePrice">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.TotalProfits">
            <summary>
            Total profits
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.FilledValue">
            <summary>
            Filled value
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.PlaceSource">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.StopLossPrice">
            <summary>
            Stop loss price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrder.TakeProfitPrice">
            <summary>
            Take profit price
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderBook.Asks">
            <summary>
            Ask entries
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderBook.Bids">
            <summary>
            Bid entries
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderBook.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderBook.Precision">
            <summary>
            Current gear, for example: scale 1
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderBook.Scale">
            <summary>
            Precision value
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderBook.IsMaxPrecision">
            <summary>
            Is max precision
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate">
            <summary>
            Bitget futures order update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Quantity">
            <summary>
            Order quantity (base asset when orderType=limit; quote asset when orderType=market)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.AveragePrice">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.ProfitAndLoss">
            <summary>
            Total profits
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.NotionalValue">
            <summary>
            Estimated national value in USD of order
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.PlaceSource">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.LastFillPrice">
            <summary>
            Last filled price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.LastFillQuantity">
            <summary>
            Last filled quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.LastFillFee">
            <summary>
            Last filled fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.LastFillFeeAsset">
            <summary>
            Last filled fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.LastFillTime">
            <summary>
            Last filled time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.LastTradeId">
            <summary>
            Last traded id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.ExecutionType">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.NotionalValueFilled">
            <summary>
            Filled notional value in USD of order
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesOrderUpdate.Fees">
            <summary>
            Paid order fees
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder">
            <summary>
            Plan order
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.ExecuteOrderId">
            <summary>
            Execute order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.ExecutePrice">
            <summary>
            Execution price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.PlanType">
            <summary>
            Plan type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.Side">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.TriggerType">
            <summary>
            Order trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.TakeProfitPrice">
            <summary>
            Take profit price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.StopLossPrice">
            <summary>
            Stop loss price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.RangeRate">
            <summary>
            PlanType is "MovingPlan", "1" means 1.0% price correction, two decimal places
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.Source">
            <summary>
            Order trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.ExecuteTime">
            <summary>
            Execute time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrder.ExecutedQuantity">
            <summary>
            Executed quantity
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate">
            <summary>
            Plan order update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.ActualPrice">
            <summary>
            Actual price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.ActualQuantity">
            <summary>
            Actual quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.PlanType">
            <summary>
            Plan type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.TriggerType">
            <summary>
            Order trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.Source">
            <summary>
            Order trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.TriggerTime">
            <summary>
            Trigger time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.ExecutedQuantity">
            <summary>
            Executed quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.KeyId">
            <summary>
            Key id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesPlanOrderUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesSymbol">
            <summary>
            Futures symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.Id">
            <summary>
            Symbol id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.Name">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.BuyLimitPriceRatio">
            <summary>
            Buy limit price ratio
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.SellLimitPriceRatio">
            <summary>
            Sell limit price ratio
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.FeeRateUpRatio">
            <summary>
            Rate of increase in handling fee, 0.005 means 0.5%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.MakerFeeRate">
            <summary>
            Maker fee rate, 0.0002 means 0.02%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.TakerFeeRate">
            <summary>
            Taker fee rate, 0.0006 means 0.06%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.OpenCostUpRatio">
            <summary>
            Percentage of increase in opening cost, 0.01 means 1%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.SupportMarginAssets">
            <summary>
            	Support margin currency array
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.MinTradeNum">
            <summary>
            Minimum number of openings(Base Currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.PriceEndStep">
            <summary>
            Price step, i.e. when pricePlace=1, priceEndStep=5 means the price would only accept numbers like 10.0, 10.5, and reject numbers like 10.2(10.2 divided by 0.5 not equals to 0)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.QuantityDecimals">
            <summary>
            Number of decimal places
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.PriceDecimals">
            <summary>
            Price scale precision, i.e. 1 means 0.1; 2 means 0.01
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.SizeMultiplier">
            <summary>
            Quantity Multiplier The order size must be greater than minTradeNum and satisfy the multiple of sizeMultiplier
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.Type">
            <summary>
            Futures symbol type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.Status">
            <summary>
            Symbol status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.DelistTime">
            <summary>
            Delist time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesSymbol.LimitOpenTime">
            <summary>
            Prohibit create order time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesTicker">
            <summary>
            Ticker info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.HighPrice24h">
            <summary>
            High price in last 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.LowPrice24h">
            <summary>
            Low price in last 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.UsdtVolume">
            <summary>
            Usdt volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.BestAskPrice">
            <summary>
            Best sell price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.BestAskQuantity">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.OpenPriceUtc0">
            <summary>
            Open price at UTC 0
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.ChangePercentageUtc0">
            <summary>
            Change percentage since UTC 0, 0.01 means 1%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.ChangePercentage">
            <summary>
            Change percentage, 0.01 means 1%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTicker.HoldingAmount">
            <summary>
            Holding amount
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate">
            <summary>
            Futures ticker update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.LastTradePrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.HighPrice24h">
            <summary>
            High price in last 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.LowPrice24h">
            <summary>
            Low price in last 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.ChangePercentage24h">
            <summary>
            Price change percentage last 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.NextSettlementTime">
            <summary>
            Next settlement time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.SystemTime">
            <summary>
            System time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.OpenPriceUtc0">
            <summary>
            Open price at UTC 00:00
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.PriceChangeUtc0">
            <summary>
            Price change since UTC 00:00
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.SymbolType">
            <summary>
            Type of symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.SymbolId">
            <summary>
            Symbol id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.DeliveryPrice">
            <summary>
            Delivery price (0 if perpetual)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTickerUpdate.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTrade.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTrade.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetFuturesUserTrade">
            <summary>
            Futures user trade
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.Side">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.TradeSide">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.Profit">
            <summary>
            Profit
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.PlaceSource">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.ExecutionType">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetFuturesUserTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetIndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetIndexPrice.Symbol">
            <summary>
            Symbol id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetIndexPrice.Index">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetIndexPrice.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetKline">
            <summary>
            Kline info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.UsdtVolume">
            <summary>
            Usdt volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKline.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetKlineUpdate">
            <summary>
            Kline update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKlineUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKlineUpdate.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKlineUpdate.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKlineUpdate.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKlineUpdate.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetKlineUpdate.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetLeverageInfo">
            <summary>
            Leverage info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetLeverageInfo.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetLeverageInfo.MinLeverage">
            <summary>
            Min leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetLeverageInfo.MaxLeverage">
            <summary>
            Max leverage
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetMarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetMarkPrice.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetMarkPrice.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetMarkPrice.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetMaxPositions">
            <summary>
            Max positions info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetMaxPositions.OpenCount">
            <summary>
            Max open positions
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetNetwork">
            <summary>
            Network info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.Name">
            <summary>
            Network name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.NeedTag">
            <summary>
            Whether tag is needed
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.Withdrawable">
            <summary>
            Whether it is possible to withdraw
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.Depositable">
            <summary>
            Wheter it is possible to deposit
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.WithdrawFee">
            <summary>
            Withdraw fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.DepositConfirmations">
            <summary>
            Deposit confirmations required
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.WithdrawConfimations">
            <summary>
            Withdraw confirmations required
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.MinDepositQuantity">
            <summary>
            Min deposit quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.MinWithdrawQuantity">
            <summary>
            Min withdrawal quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNetwork.Url">
            <summary>
            Explorer url
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetNotification">
            <summary>
            Notification
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNotification.NoticeId">
            <summary>
            Id of the notice
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNotification.NoticeTitle">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNotification.NoticeDescription">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNotification.CreateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNotification.LanguageType">
            <summary>
            Language
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetNotification.NoticeUrl">
            <summary>
            Notice url
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOpenInterest.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOpenInterest.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOpenInterest.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrder">
            <summary>
            Bitget order
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.Quantity">
            <summary>
            Order quantity (base asset when orderType=limit; quote asset when orderType=market)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.FillPrice">
            <summary>
            Transaction price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.ValueFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.PlaceSource">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrder.FeeDetails">
            <summary>
            Fee details
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrderFee">
            <summary>
            Order fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderFee.Deduction">
            <summary>
            Deduction
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderFee.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderFee.DeductionFee">
            <summary>
            Total deduction fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderFee.TotalFee">
            <summary>
            Total fee
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBook.Asks">
            <summary>
            Ask entries
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBook.Bids">
            <summary>
            Bid entries
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBook.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrderBookEntry">
            <summary>
            Order book entry
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBookEntry.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBookEntry.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrderBookUpdate">
            <summary>
            Book update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBookUpdate.Asks">
            <summary>
            Asks
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBookUpdate.Bids">
            <summary>
            Bids
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderBookUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrderResult">
            <summary>
            Order result
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderResult.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderResult.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrderUpdate">
            <summary>
            Order update info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.SymbolId">
            <summary>
            Symbol id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.Quantity">
            <summary>
            Order original quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.Notional">
            <summary>
            The purchase amount, which will be returned when the market price is purchased
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.OrderType">
            <summary>
            The order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.Force">
            <summary>
            The order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.OrderSide">
            <summary>
            The order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.FillPrice">
            <summary>
            Fill price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.FillQuantity">
            <summary>
            Fill quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.FillFee">
            <summary>
            Fill fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.FeeAsset">
            <summary>
            Fill fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.FillTime">
            <summary>
            Fill time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.ExecutionType">
            <summary>
            Fill type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.AverageTradePrice">
            <summary>
            Average trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.Source">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderUpdate.OrderFees">
            <summary>
            Fee info
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetOrderFeeQuantity">
            <summary>
            Fee info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderFeeQuantity.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetOrderFeeQuantity.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPagination`1">
            <summary>
            Paginated result
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPagination`1.HasNext">
            <summary>
            Has another page
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPagination`1.EndId">
            <summary>
            Last id of the results, can be used for requesting the next page
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPagination`1.Data">
            <summary>
            Paged data
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPaginationBase">
            <summary>
            Paginated result
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPaginationBase.EndId">
            <summary>
            Last id of the results, can be used for requesting the next page
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPlanOrder">
            <summary>
            Plan order
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.ExecutePrice">
            <summary>
            Execution price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.Type">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.TriggerType">
            <summary>
            	Order trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.Source">
            <summary>
            	Order trigger type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPlanOrder.PlaceType">
            <summary>
            Place type
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPosition">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.HoldSide">
            <summary>
            Hold side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.OpenQuantity">
            <summary>
            Open pending to fill (base currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.Margin">
            <summary>
            Margin quantity (margin currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.AutoMargin">
            <summary>
            Auto suppliment margin
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.Available">
            <summary>
            Position available (Quote currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.Locked">
            <summary>
            Position locked (Quote currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.Total">
            <summary>
            Total position (available + locked)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.ProfitAndLoss">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.AverageOpenPrice">
            <summary>
            Average opening price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.UnrealizedProfitAndLoss">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.LiquidationPrice">
            <summary>
            Estimated liquidation price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.KeepMarginRate">
            <summary>
            Keep margin rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPosition.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPositionHistory">
            <summary>
            Position history
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.Side">
            <summary>
            Hold side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.AverageOpenPrice">
            <summary>
            Average open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.CloseOpenPrice">
            <summary>
            Average close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.OpenPositionSize">
            <summary>
            Open position size
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.ClosePositionSize">
            <summary>
            Close position size
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.ProfitAndLoss">
            <summary>
            Profit and loss
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.Netprofit">
            <summary>
            Net profit
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.TotalFundingCost">
            <summary>
            Total funding cost
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.OpeningFee">
            <summary>
            Opening fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.ClosingFee">
            <summary>
            Closing fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionHistory.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionMode.Symbol">
            <summary>
            Symbol id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionMode.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionMode.DualSidePosition">
            <summary>
            True: DoubleHold, false: SingleHold
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPositionRisk">
            <summary>
            Position risk
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionRisk.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionRisk.PositionLimit">
            <summary>
            Position limit
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPositionTier">
            <summary>
            Position tier
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionTier.Level">
            <summary>
            Tier
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionTier.StartUnit">
            <summary>
            Start value
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionTier.EndUnit">
            <summary>
            End value
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionTier.Leverage">
            <summary>
            Leverage multiple
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionTier.KeepMarginRate">
            <summary>
            Margin Rate, The value corresponding to the position, when the margin rate of the position is less than the maintenance margin rate, forced decreased or liquidation will be triggered
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetPositionUpdate">
            <summary>
            Position update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.SymbolId">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.HoldSide">
            <summary>
            Hold side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.Margin">
            <summary>
            Margin quantity (margin currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.AutoMargin">
            <summary>
            Auto suppliment margin
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.Available">
            <summary>
            Position available (Quote currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.Locked">
            <summary>
            Position locked (Quote currency)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.Total">
            <summary>
            Total position (available + locked)
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.ProfitAndLoss">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.AverageOpenPrice">
            <summary>
            Average opening price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.HoldMode">
            <summary>
            Hold mode
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.UnrealizedProfitAndLoss">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.UnrealizedProfitAndLossRatio">
            <summary>
            Unrealized profit and loss ratio
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.LiquidationPrice">
            <summary>
            Estimated liquidation price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.KeepMarginRate">
            <summary>
            Keep margin rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.FixedMarginRate">
            <summary>
            Fixed margin rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetPositionUpdate.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetResult">
            <summary>
            Result
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetResult.Success">
            <summary>
            Is successful
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetSymbol">
            <summary>
            Symbol info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.Id">
            <summary>
            Symbol id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.MinOrderQuantity">
            <summary>
            Min order quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.MaxOrderQuantity">
            <summary>
            Max order quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.TakerFeeRate">
            <summary>
            Taker fee rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.MakerFeeRate">
            <summary>
            Maker fee rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.PriceDecimals">
            <summary>
            Price decimals
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.QuantityDecimals">
            <summary>
            Quantity decimals
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.MinOrderValueUsd">
            <summary>
            Min value of the order in USDT
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.Status">
            <summary>
            Symbol status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.BuyLimitPriceRatio">
            <summary>
            Buy price gap from market price, "0.05" means: 5%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.SellLimitPriceRatio">
            <summary>
            Sell price gap from market price, "0.05" means: 5%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetSymbol.MaxOrders">
            <summary>
            Max number of orders
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetTicker">
            <summary>
            Ticker info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.HighPrice24h">
            <summary>
            High price in last 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.LowPrice24h">
            <summary>
            Low price in last 24h
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.UsdtVolume">
            <summary>
            Usdt volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.BestAskPrice">
            <summary>
            Best sell price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.BestAskQuantity">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.OpenPriceUtc0">
            <summary>
            Open price at UTC 0
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.ChangePercentageUtc0">
            <summary>
            Change percentage since UTC 0, 0.01 means 1%
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTicker.ChangePercentage">
            <summary>
            Change percentage, 0.01 means 1%
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetTickerUpdate">
            <summary>
            Ticker update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.LastPrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.OpenPrice24h">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.OpenPriceUtc0">
            <summary>
            Open price at UTC 0
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.HighPrice24h">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.LowPrice24h">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.LabelId">
            <summary>
            Label id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTickerUpdate.ChangePercentageUtc0">
            <summary>
            Change rate since openUtc, that is: (last - openUtc) / openUtc, scale e-5
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTrade.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTrade.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetTradeUpdate">
            <summary>
            Trade update
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTradeUpdate.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTradeUpdate.Quantity">
            <summary>
            Trade quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTradeUpdate.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTradeUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetTransfer">
            <summary>
            Transfer info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.Asset">
            <summary>
            Asset transfered
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.ToType">
            <summary>
            To type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.ToSymbol">
            <summary>
            To symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.FromType">
            <summary>
            From type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.FromSymbol">
            <summary>
            From symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransfer.TransferId">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetTransferResult">
            <summary>
            Transfer result
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransferResult.TransferId">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetTransferResult.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetUserFee">
            <summary>
            User fee info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserFee.MakerRate">
            <summary>
            Maker fee rate
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserFee.TakerRate">
            <summary>
            Taker fee rate
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetUserLeverage">
            <summary>
            User leverage info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserLeverage.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserLeverage.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserLeverage.LongLeverage">
            <summary>
            Long leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserLeverage.ShortLeverage">
            <summary>
            Short leverage
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserLeverage.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetUserTrade">
            <summary>
            User trade info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.Symbol">
            <summary>
            Symbol id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.Quantity">
            <summary>
            Filled quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.Value">
            <summary>
            Filled value
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetUserTrade.Fee">
            <summary>
            Fee paid
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetWithdrawal">
            <summary>
            Withdrawal info
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Status">
            <summary>
            Withdrawal status
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.ToAddress">
            <summary>
            To address
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Confirm">
            <summary>
            Confirmations
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawal.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Models.BitgetWithdrawResult">
            <summary>
            Withdraw result
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawResult.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Models.BitgetWithdrawResult.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Options.BitgetOrderBookOptions">
            <summary>
            Order book options
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetOrderBookOptions.Default">
            <summary>
            Default options for new order books
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetOrderBookOptions.Limit">
            <summary>
            The limit of entries in the order book, either 5, 15 or null
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Options.BitgetRestOptions">
            <summary>
            Bitget rest client options
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetRestOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetRestOptions.ChannelCode">
            <summary>
            Channel code
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetRestOptions.SpotOptions">
            <summary>
            Spot API options
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetRestOptions.FuturesOptions">
            <summary>
            Futures API options
            </summary>
        </member>
        <member name="T:Bitget.Net.Objects.Options.BitgetSocketOptions">
            <summary>
            Bitget socket client options
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetSocketOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetSocketOptions.SpotOptions">
            <summary>
            Spot API options
            </summary>
        </member>
        <member name="P:Bitget.Net.Objects.Options.BitgetSocketOptions.FuturesOptions">
            <summary>
            Futures API options
            </summary>
        </member>
        <member name="T:Bitget.Net.SymbolOrderBooks.BitgetFuturesSymbolOrderBook">
            <summary>
            Live order book implementation
            </summary>
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetFuturesSymbolOrderBook.#ctor(System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetFuturesSymbolOrderBook.#ctor(System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions},Microsoft.Extensions.Logging.ILogger{Bitget.Net.SymbolOrderBooks.BitgetFuturesSymbolOrderBook},Bitget.Net.Interfaces.Clients.IBitgetSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetFuturesSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetFuturesSymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetFuturesSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetFuturesSymbolOrderBook.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:Bitget.Net.SymbolOrderBooks.BitgetOrderBookFactory">
            <summary>
            Bitget order book factory
            </summary>
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetOrderBookFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetOrderBookFactory.CreateSpot(System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetOrderBookFactory.CreateFutures(System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="T:Bitget.Net.SymbolOrderBooks.BitgetSpotSymbolOrderBook">
            <summary>
            Live order book implementation
            </summary>
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetSpotSymbolOrderBook.#ctor(System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetSpotSymbolOrderBook.#ctor(System.String,System.Action{Bitget.Net.Objects.Options.BitgetOrderBookOptions},Microsoft.Extensions.Logging.ILogger{Bitget.Net.SymbolOrderBooks.BitgetSpotSymbolOrderBook},Bitget.Net.Interfaces.Clients.IBitgetSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetSpotSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetSpotSymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetSpotSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Bitget.Net.SymbolOrderBooks.BitgetSpotSymbolOrderBook.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:CryptoExchange.Net.Interfaces.CryptoClientExtensions">
            <summary>
            Extensions for the ICryptoRestClient and ICryptoSocketClient interfaces
            </summary>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.Bitget(CryptoExchange.Net.Interfaces.ICryptoRestClient)">
            <summary>
            Get the Bitget REST Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.Bitget(CryptoExchange.Net.Interfaces.ICryptoSocketClient)">
            <summary>
            Get the Bitget Websocket Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Extensions for DI
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddBitget(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Bitget.Net.Objects.Options.BitgetRestOptions},System.Action{Bitget.Net.Objects.Options.BitgetSocketOptions},System.Nullable{Microsoft.Extensions.DependencyInjection.ServiceLifetime})">
            <summary>
            Add the IBitgetClient and IBitgetSocketClient to the sevice collection so they can be injected
            </summary>
            <param name="services">The service collection</param>
            <param name="defaultRestOptionsDelegate">Set default options for the rest client</param>
            <param name="defaultSocketOptionsDelegate">Set default options for the socket client</param>
            <param name="socketClientLifeTime">The lifetime of the IBitgetSocketClient for the service collection. Defaults to Singleton.</param>
            <returns></returns>
        </member>
    </members>
</doc>
