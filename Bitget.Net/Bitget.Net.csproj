<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net8.0;net9.0;netstandard2.0;netstandard2.1</TargetFrameworks>
    <Nullable>enable</Nullable>
    <LangVersion>12.0</LangVersion>
    <Nullable>enable</Nullable>
    <ImplicitUsings>true</ImplicitUsings>
  </PropertyGroup>
  <PropertyGroup>
    <PackageId>JK.Bitget.Net</PackageId>
    <Authors>JKorf</Authors>
    <PackageVersion>2.0.0-beta3</PackageVersion>
    <AssemblyVersion>2.0.0</AssemblyVersion>
    <FileVersion>2.0.0</FileVersion>
    <Description>JK.Bitget.Net is a client library for accessing the Bitget REST and Websocket API. All data is mapped to readable models and enum values. Additional features include automatic websocket (re)connection management, client side rate limiting, an implementation for maintaining a client side order book, easy integration with other exchange client libraries and more.</Description>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageTags>Bitget;Bitget.Net;Bitget.com;Bitget Client;Bitget API;CryptoCurrency;CryptoCurrency Exchange</PackageTags>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/JKorf/Bitget.Net.git</RepositoryUrl>
    <PackageProjectUrl>https://github.com/JKorf/Bitget.Net</PackageProjectUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageIcon>icon.png</PackageIcon>
    <NeutralLanguage>en</NeutralLanguage>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageReleaseNotes>https://github.com/JKorf/Bitget.Net?tab=readme-ov-file#release-notes</PackageReleaseNotes>
  </PropertyGroup>
  <PropertyGroup Label="AOT" Condition=" '$(TargetFramework)' == 'NET8_0' Or '$(TargetFramework)' == 'NET9_0' ">
    <IsAotCompatible>true</IsAotCompatible>
  </PropertyGroup>
  <PropertyGroup>
    <DocumentationFile>Bitget.Net.xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Label="Deterministic Build" Condition="'$(Configuration)' == 'Release'">
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>
  <ItemGroup Label="Deterministic Build" Condition="'$(Configuration)' == 'Release'">
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="Icon\icon.png" Pack="true" PackagePath="\" />
    <None Include="..\README.md" Pack="true" PackagePath="\" />
    <None Include="Interfaces\Clients\CopyTradingApiV2\IBitgetRestClientCopyTradingApiTrader.cs" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="CryptoExchange.Net" Version="9.0.0" />
    <PackageReference Include="ConfigureAwaitChecker.Analyzer" Version="5.0.0.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="9.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
</Project>